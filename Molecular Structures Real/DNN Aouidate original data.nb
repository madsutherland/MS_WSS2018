(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    699434,      13436]
NotebookOptionsPosition[    686116,      13199]
NotebookOutlinePosition[    686470,      13215]
CellTagsIndexPosition[    686427,      13212]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Fitting With DNNs", "Title",
 CellChangeTimes->{{3.739717271828146*^9, 
  3.739717283643135*^9}},ExpressionUUID->"9c5e09f5-1c7b-461c-820a-\
9253699e46a7"],

Cell["Markus van Almsick, WRI", "Text",
 CellChangeTimes->{{3.7397172872435217`*^9, 
  3.739717292714032*^9}},ExpressionUUID->"0f341ed5-2131-4027-9b25-\
95c6c0491b7b"],

Cell[CellGroupData[{

Cell["Creating Data", "Section",
 CellChangeTimes->{{3.7397172950148706`*^9, 
  3.73971730033615*^9}},ExpressionUUID->"137e4450-80ac-4973-84c1-\
3e5b6727b299"],

Cell[BoxData[
 RowBox[{
  RowBox[{"originaldata", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://github.com/madsutherland/Project/blob/master/Molecular%\
20Structures%20Real/Table%20of%20Aouidate%20data.xlsx?raw=true\>\"", ",", 
     "\"\<XLSX\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7400611358595667`*^9, 3.740061145581107*^9}},
 CellLabel->
  "In[420]:=",ExpressionUUID->"584cc3e2-fce4-4f36-8206-bb32fb0ae6ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sheet", "=", 
  RowBox[{"originaldata", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.740061147760191*^9, 3.740061151661306*^9}, {
  3.740061227461581*^9, 3.7400612286894093`*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"7a0c04c5-e3b7-4b85-a0e4-7935e4e41b56"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"logMU\"\>", "\<\"ET\"\>", "\<\"IP\"\>", "\<\"EHOMO\"\>", "\<\"\
\[Eta]\"\>", "\<\"ELUMO\"\>", "\<\"DM\"\>", "\<\"Qp\"\>", "\<\"Qmin\"\>", "\<\
\"MW\"\>", "\<\"n\"\>", "\<\"\[Gamma]\"\>", "\<\"D\"\>", "\<\"logP\"\>", \
"\<\"\"\>"},
     {"2.72`", "\<\"\[Minus]82328.726\"\>", "7.374`", "\<\"\[Minus]5.682\"\>",
       "5.522`", "\<\"\[Minus]0.160\"\>", "3.242`", 
      "0.046`", "\<\"\[Minus]0.707\"\>", "274.154`", "1.54`", "37.9`", 
      "1.324`", "2.455`", "\<\"\"\>"},
     {"1.96`", "\<\"\[Minus]30241.000\"\>", "7.125`", "\<\"\[Minus]5.428\"\>",
       "5.258`", "\<\"\[Minus]0.170\"\>", "1.996`", 
      "0.135`", "\<\"\[Minus]0.708\"\>", "255.376`", "1.545`", "42.6`", 
      "1.08`", "2.452`", "\<\"\"\>"},
     {"2.02`", "\<\"\[Minus]19406.400\"\>", "6.731`", "\<\"\[Minus]5.029\"\>",
       "5.302`", "0.273`", "1.234`", "0.126`", "\<\"\[Minus]0.712\"\>", 
      "223.311`", "1.509`", "33.9`", "0.998`", "2.778`", "\<\"\"\>"},
     {"1.95`", "\<\"\[Minus]20476.100\"\>", "6.724`", "\<\"\[Minus]5.037\"\>",
       "5.295`", "0.258`", "1.283`", "0.126`", "\<\"\[Minus]0.709\"\>", 
      "237.338`", "1.507`", "33.9`", "0.998`", "3.307`", "\<\"\"\>"},
     {"1.9`", "\<\"\[Minus]18336.700\"\>", "6.765`", "\<\"\[Minus]5.009\"\>", 
      "5.282`", "0.273`", "1.117`", "0.127`", "\<\"\[Minus]0.710\"\>", 
      "209.285`", "1.511`", "34.2`", "1.01`", "2.249`", "\<\"\"\>"},
     {"1.71`", "\<\"\[Minus]31310.656\"\>", "7.238`", "\<\"\[Minus]4.780\"\>",
       "5.066`", "0.286`", 
      "2.498`", "\<\"\[Minus]0.150\"\>", "\<\"\[Minus]0.712\"\>", "269.403`", 
      "1.539`", "41.2`", "1.07`", "2.761`", "\<\"\"\>"},
     {"1.69`", "\<\"\[Minus]86156.656\"\>", "7.374`", "\<\"\[Minus]5.687\"\>",
       "5.527`", "\<\"\[Minus]0.160\"\>", "3.271`", 
      "0.046`", "\<\"\[Minus]0.709\"\>", "260.128`", "1.548`", "39.5`", 
      "1.368`", "2.146`", "\<\"\"\>"},
     {"1.68`", "\<\"\[Minus]21545.885\"\>", "6.721`", "\<\"\[Minus]5.025\"\>",
       "5.3`", "0.275`", "1.25`", "0.122`", "\<\"\[Minus]0.713\"\>", 
      "251.365`", "1.504`", "33.9`", "0.979`", "3.386`", "\<\"\"\>"},
     {"1.66`", "\<\"\[Minus]29171.207\"\>", "7.121`", "\<\"\[Minus]5.453\"\>",
       "5.295`", "\<\"\[Minus]0.158\"\>", 
      "2.115`", "\<\"\[Minus]0.131\"\>", "\<\"\[Minus]0.707\"\>", "241.35`", 
      "1.55`", "43.1`", "1.1`", "1.923`", "\<\"\"\>"},
     {"1.36`", "\<\"\[Minus]29171.025\"\>", "6.993`", "\<\"\[Minus]5.327\"\>",
       "5.234`", "\<\"\[Minus]0.093\"\>", 
      "4.017`", "\<\"\[Minus]0.219\"\>", "\<\"\[Minus]0.713\"\>", "241.35`", 
      "1.552`", "44.2`", "1.1`", "1.743`", "\<\"\"\>"},
     {"1.33`", "\<\"\[Minus]20382.821\"\>", "6.83`", "\<\"\[Minus]5.101\"\>", 
      "5.576`", "0.475`", "3.159`", "0.349`", "\<\"\[Minus]0.713\"\>", 
      "225.284`", "1.507`", "34.3`", "1.048`", "1.392`", "\<\"\"\>"},
     {"1.25`", "\<\"\[Minus]18336.601\"\>", "6.802`", "\<\"\[Minus]5.024\"\>",
       "5.301`", "0.278`", "1.323`", "0.125`", "\<\"\[Minus]0.716\"\>", 
      "209.285`", "1.514`", "34.9`", "1.012`", "2.469`", "\<\"\"\>"},
     {"1.29`", "\<\"\[Minus]30240.922\"\>", "7.156`", "\<\"\[Minus]5.333\"\>",
       "5.236`", "\<\"\[Minus]0.097\"\>", 
      "4.084`", "\<\"\[Minus]0.220\"\>", "\<\"\[Minus]0.707\"\>", "255.376`", 
      "1.547`", "43.6`", "1.09`", "2.272`", "\<\"\"\>"},
     {"1.27`", "\<\"\[Minus]17266.813\"\>", "8.353`", "\<\"\[Minus]5.142\"\>",
       "5.451`", "0.309`", "1.618`", "0.133`", "\<\"\[Minus]0.714\"\>", 
      "195.258`", "1.516`", "35.3`", "1.026`", "1.94`", "\<\"\"\>"},
     {"1.14`", "\<\"\[Minus]22396.415\"\>", "7.075`", "\<\"\[Minus]5.349\"\>",
       "5.755`", "0.407`", "1.297`", "0.273`", "\<\"\[Minus]0.713\"\>", 
      "239.268`", "1.54`", "43.5`", "1.184`", "1.644`", "\<\"\"\>"},
     {"1.36`", "\<\"\[Minus]21452.636\"\>", "6.803`", "\<\"\[Minus]5.073\"\>",
       "5.531`", "0.458`", "3.234`", "0.353`", "\<\"\[Minus]0.707\"\>", 
      "239.311`", "1.504`", "34.3`", "1.034`", "1.921`", "\<\"\"\>"},
     {"1.11`", "\<\"\[Minus]28101.400\"\>", "7.292`", "\<\"\[Minus]5.423\"\>",
       "5.335`", "\<\"\[Minus]0.088\"\>", 
      "4.378`", "\<\"\[Minus]0.223\"\>", "\<\"\[Minus]0.708\"\>", "227.323`", 
      "1.559`", "45.`", "1.12`", "1.214`", "\<\"\"\>"},
     {"1.`", "\<\"\[Minus]19280.462\"\>", "7.265`", "\<\"\[Minus]5.393\"\>", 
      "5.876`", "0.483`", "1.539`", "0.326`", "\<\"\[Minus]0.707\"\>", 
      "209.242`", "1.55`", "45.4`", "1.175`", "1.699`", "\<\"\"\>"},
     {"1.05`", "\<\"\[Minus]21452.636\"\>", "7.265`", "\<\"\[Minus]5.505\"\>",
       "5.911`", "0.406`", "3.041`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "239.311`", "1.504`", "34.3`", "1.034`", "1.571`", "\<\"\"\>"},
     {"1.`", "\<\"\[Minus]19280.543\"\>", "6.803`", "\<\"\[Minus]4.968\"\>", 
      "5.226`", "0.258`", "1.505`", "0.326`", "\<\"\[Minus]0.715\"\>", 
      "209.242`", "1.55`", "45.4`", "1.175`", "1.699`", "\<\"\"\>"},
     {"1.38`", "\<\"\[Minus]22522.370\"\>", "6.911`", "\<\"\[Minus]5.063\"\>",
       "5.528`", "0.465`", "3.276`", "0.352`", "\<\"\[Minus]0.713\"\>", 
      "253.337`", "1.502`", "34.2`", "1.022`", "2.45`", "\<\"\"\>"},
     {"0.87`", "\<\"\[Minus]20382.821\"\>", "7.265`", "\<\"\[Minus]5.505\"\>",
       "5.908`", "0.403`", "3.089`", "0.225`", "\<\"\[Minus]0.714\"\>", 
      "225.284`", "1.508`", "35.2`", "1.05`", "1.262`", "\<\"\"\>"},
     {"0.86`", "\<\"\[Minus]23498.638\"\>", "7.374`", "\<\"\[Minus]5.703\"\>",
       "5.961`", "0.257`", "1.288`", "0.269`", "\<\"\[Minus]0.714\"\>", 
      "255.31`", "1.503`", "34.`", "1.069`", "0.637`", "\<\"\"\>"},
     {"0.83`", "\<\"\[Minus]21452.500\"\>", "7.183`", "\<\"\[Minus]5.443\"\>",
       "5.831`", "0.389`", "2.994`", "0.264`", "\<\"\[Minus]0.714\"\>", 
      "239.311`", "1.506`", "35.1`", 
      "1.036`", "\<\"\[Minus]1.842\"\>", "\<\"\"\>"},
     {"0.84`", "\<\"\[Minus]29171.025\"\>", "7.129`", "\<\"\[Minus]5.499\"\>",
       "5.468`", "\<\"\[Minus]0.030\"\>", "3.92`", 
      "0.293`", "\<\"\[Minus]0.712\"\>", "241.35`", "1.552`", "44.2`", "1.1`",
       "1.248`", "\<\"\"\>"},
     {"0.84`", "\<\"\[Minus]29171.025\"\>", "7.102`", "\<\"\[Minus]5.569\"\>",
       "5.499`", "\<\"\[Minus]0.070\"\>", "3.714`", 
      "0.289`", "\<\"\[Minus]0.708\"\>", "241.35`", "1.552`", "44.2`", 
      "1.1`", "\<\"\[Minus]1.003\"\>", "\<\"\"\>"},
     {"0.81`", "\<\"\[Minus]28101.400\"\>", "7.319`", "\<\"\[Minus]5.536\"\>",
       "5.488`", "\<\"\[Minus]0.049\"\>", "4.009`", 
      "0.293`", "\<\"\[Minus]0.702\"\>", "227.323`", "1.559`", "45.`", 
      "1.12`", "0.719`", "\<\"\"\>"},
     {"0.76`", "\<\"\[Minus]22396.388\"\>", "7.02`", "\<\"\[Minus]5.281\"\>", 
      "5.594`", "0.313`", "0.427`", "0.283`", "\<\"\[Minus]0.702\"\>", 
      "239.268`", "1.54`", "43.5`", "1.184`", "1.294`", "\<\"\"\>"},
     {"0.66`", "\<\"\[Minus]29171.025\"\>", "7.047`", "\<\"\[Minus]5.407\"\>",
       "5.332`", "\<\"\[Minus]0.075\"\>", 
      "4.42`", "\<\"\[Minus]0.226\"\>", "\<\"\[Minus]0.705\"\>", "241.35`", 
      "1.552`", "44.2`", "1.1`", "1.743`", "\<\"\"\>"},
     {"0.68`", "\<\"\[Minus]30240.922\"\>", "7.02`", "\<\"\[Minus]5.303\"\>", 
      "5.221`", "\<\"\[Minus]0.082\"\>", 
      "4.043`", "\<\"\[Minus]0.222\"\>", "\<\"\[Minus]0.713\"\>", "255.376`", 
      "1.547`", "43.6`", "1.09`", "2.272`", "\<\"\"\>"},
     {"0.67`", "\<\"\[Minus]17266.922\"\>", "7.047`", "\<\"\[Minus]5.243\"\>",
       "5.765`", "0.522`", "2.553`", "0.378`", "\<\"\[Minus]0.713\"\>", 
      "195.258`", "1.512`", "34.7`", 
      "1.023`", "\<\"\[Minus]1.265\"\>", "\<\"\"\>"},
     {"0.59`", "\<\"\[Minus]12104.477\"\>", "7.809`", "\<\"\[Minus]5.971\"\>",
       "6.34`", "0.37`", "1.567`", "0.179`", "\<\"\[Minus]0.707\"\>", 
      "149.233`", "1.525`", "35.2`", "0.938`", "2.241`", "\<\"\"\>"},
     {"0.58`", "\<\"\[Minus]31310.547\"\>", "7.02`", "\<\"\[Minus]5.311\"\>", 
      "5.224`", "\<\"\[Minus]0.088\"\>", 
      "4.067`", "\<\"\[Minus]0.219\"\>", "\<\"\[Minus]0.712\"\>", "269.403`", 
      "1.543`", "43.1`", "1.07`", "2.801`", "\<\"\"\>"},
     {"0.46`", "\<\"\[Minus]26669.745\"\>", "7.238`", "\<\"\[Minus]5.590\"\>",
       "5.669`", "0.079`", "3.375`", "0.267`", "\<\"\[Minus]0.712\"\>", 
      "301.38`", "1.555`", "39.8`", "1.093`", "2.81`", "\<\"\"\>"},
     {"0.43`", "\<\"\[Minus]19280.462\"\>", "7.211`", "\<\"\[Minus]5.328\"\>",
       "5.872`", "0.544`", "1.369`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "209.242`", "1.55`", "45.4`", "1.175`", "1.699`", "\<\"\"\>"},
     {"0.41`", "\<\"\[Minus]16164.481\"\>", "7.211`", "\<\"\[Minus]5.293\"\>",
       "5.602`", "0.309`", "1.899`", "0.329`", "\<\"\[Minus]0.708\"\>", 
      "179.216`", "1.564`", "48.`", "1.163`", "1.707`", "\<\"\"\>"},
     {"0.38`", "\<\"\[Minus]22522.234\"\>", "7.156`", "\<\"\[Minus]5.435\"\>",
       "5.827`", "0.391`", "2.947`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "253.337`", "1.503`", "35.`", "1.023`", "1.777`", "\<\"\"\>"},
     {"0.38`", "\<\"\[Minus]30240.922\"\>", "7.02`", "\<\"\[Minus]5.247\"\>", 
      "5.533`", "0.286`", "3.05`", "0.3`", "\<\"\[Minus]0.711\"\>", 
      "255.376`", "1.547`", "43.6`", "1.09`", "1.777`", "\<\"\"\>"},
     {"0.38`", "\<\"\[Minus]30240.922\"\>", "7.156`", "\<\"\[Minus]5.533\"\>",
       "5.466`", "\<\"\[Minus]0.067\"\>", "3.751`", 
      "0.285`", "\<\"\[Minus]0.710\"\>", "255.376`", "1.547`", "43.6`", 
      "1.09`", "1.777`", "\<\"\"\>"},
     {"0.33`", "\<\"\[Minus]20382.766\"\>", "7.319`", "\<\"\[Minus]5.524\"\>",
       "5.912`", "0.388`", "3.136`", "0.245`", "\<\"\[Minus]0.719\"\>", 
      "225.284`", "1.507`", "34.3`", "1.048`", "1.042`", "\<\"\"\>"},
     {"0.23`", "\<\"\[Minus]21452.609\"\>", "7.129`", "\<\"\[Minus]5.410\"\>",
       "5.794`", "0.384`", "2.979`", "0.26`", "\<\"\[Minus]0.713\"\>", 
      "239.311`", "1.506`", "35.1`", "1.036`", "1.273`", "\<\"\"\>"},
     {"0.03`", "\<\"\[Minus]20382.739\"\>", "7.238`", "\<\"\[Minus]5.481\"\>",
       "5.872`", "0.39`", "3.237`", "0.249`", "\<\"\[Minus]0.713\"\>", 
      "225.284`", "1.508`", "35.2`", "1.05`", "0.744`", "\<\"\"\>"},
     {"0.`", "\<\"\[Minus]19312.923\"\>", "7.319`", "\<\"\[Minus]5.523\"\>", 
      "5.914`", "0.391`", "3.203`", "0.253`", "\<\"\[Minus]0.707\"\>", 
      "211.258`", "1.511`", "35.4`", "1.067`", "0.215`", "\<\"\"\>"},
     {"\<\"\[Minus]0.030\"\>", "\<\"\[Minus]19312.787\"\>", 
      "7.456`", "\<\"\[Minus]5.719\"\>", "6.007`", "0.288`", "1.449`", 
      "0.305`", "\<\"\[Minus]0.710\"\>", "211.258`", "1.511`", "35.4`", 
      "1.067`", "\<\"\[Minus]3.080\"\>", "\<\"\"\>"},
     {"\<\"\[Minus]0.060\"\>", "\<\"\[Minus]17266.759\"\>", 
      "7.292`", "\<\"\[Minus]5.444\"\>", "5.849`", "0.405`", "3.673`", 
      "0.308`", "\<\"\[Minus]0.717\"\>", "195.258`", "1.512`", "34.7`", 
      "1.023`", "0.435`", "\<\"\"\>"},
     {"\<\"\[Minus]0.670\"\>", "\<\"\[Minus]16196.943\"\>", 
      "7.292`", "\<\"\[Minus]5.443\"\>", "5.848`", "0.406`", "3.724`", 
      "0.307`", "\<\"\[Minus]0.713\"\>", "181.232`", "1.517`", "36.`", 
      "1.041`", "0.126`", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.740061152403885*^9, 3.740061154522148*^9}, {
  3.740061229747176*^9, 3.740061236199651*^9}},
 CellLabel->
  "Out[422]=",ExpressionUUID->"2f9eca49-643c-4e23-ae97-4fc5a3cb98bb"]
}, Closed]],

Cell[BoxData[
 RowBox[{"Clear", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.7400612599810762`*^9, 3.740061275111524*^9}},
 CellLabel->
  "In[424]:=",ExpressionUUID->"191f22e2-8faa-4426-b226-4b23f7d78df7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"sheet", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", 
     RowBox[{"-", "18"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.740061277538028*^9, 3.740061288038691*^9}},
 CellLabel->
  "In[425]:=",ExpressionUUID->"6ce67530-5471-43fd-b362-787450a7d7e1"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"logMU\"\>", "\<\"ET\"\>", "\<\"IP\"\>", "\<\"EHOMO\"\>", "\<\"\
\[Eta]\"\>", "\<\"ELUMO\"\>", "\<\"DM\"\>", "\<\"Qp\"\>", "\<\"Qmin\"\>", "\<\
\"MW\"\>", "\<\"n\"\>", "\<\"\[Gamma]\"\>", "\<\"D\"\>", "\<\"logP\"\>", \
"\<\"\"\>"},
     {"2.72`", "\<\"\[Minus]82328.726\"\>", "7.374`", "\<\"\[Minus]5.682\"\>",
       "5.522`", "\<\"\[Minus]0.160\"\>", "3.242`", 
      "0.046`", "\<\"\[Minus]0.707\"\>", "274.154`", "1.54`", "37.9`", 
      "1.324`", "2.455`", "\<\"\"\>"},
     {"1.96`", "\<\"\[Minus]30241.000\"\>", "7.125`", "\<\"\[Minus]5.428\"\>",
       "5.258`", "\<\"\[Minus]0.170\"\>", "1.996`", 
      "0.135`", "\<\"\[Minus]0.708\"\>", "255.376`", "1.545`", "42.6`", 
      "1.08`", "2.452`", "\<\"\"\>"},
     {"2.02`", "\<\"\[Minus]19406.400\"\>", "6.731`", "\<\"\[Minus]5.029\"\>",
       "5.302`", "0.273`", "1.234`", "0.126`", "\<\"\[Minus]0.712\"\>", 
      "223.311`", "1.509`", "33.9`", "0.998`", "2.778`", "\<\"\"\>"},
     {"1.95`", "\<\"\[Minus]20476.100\"\>", "6.724`", "\<\"\[Minus]5.037\"\>",
       "5.295`", "0.258`", "1.283`", "0.126`", "\<\"\[Minus]0.709\"\>", 
      "237.338`", "1.507`", "33.9`", "0.998`", "3.307`", "\<\"\"\>"},
     {"1.9`", "\<\"\[Minus]18336.700\"\>", "6.765`", "\<\"\[Minus]5.009\"\>", 
      "5.282`", "0.273`", "1.117`", "0.127`", "\<\"\[Minus]0.710\"\>", 
      "209.285`", "1.511`", "34.2`", "1.01`", "2.249`", "\<\"\"\>"},
     {"1.71`", "\<\"\[Minus]31310.656\"\>", "7.238`", "\<\"\[Minus]4.780\"\>",
       "5.066`", "0.286`", 
      "2.498`", "\<\"\[Minus]0.150\"\>", "\<\"\[Minus]0.712\"\>", "269.403`", 
      "1.539`", "41.2`", "1.07`", "2.761`", "\<\"\"\>"},
     {"1.69`", "\<\"\[Minus]86156.656\"\>", "7.374`", "\<\"\[Minus]5.687\"\>",
       "5.527`", "\<\"\[Minus]0.160\"\>", "3.271`", 
      "0.046`", "\<\"\[Minus]0.709\"\>", "260.128`", "1.548`", "39.5`", 
      "1.368`", "2.146`", "\<\"\"\>"},
     {"1.68`", "\<\"\[Minus]21545.885\"\>", "6.721`", "\<\"\[Minus]5.025\"\>",
       "5.3`", "0.275`", "1.25`", "0.122`", "\<\"\[Minus]0.713\"\>", 
      "251.365`", "1.504`", "33.9`", "0.979`", "3.386`", "\<\"\"\>"},
     {"1.66`", "\<\"\[Minus]29171.207\"\>", "7.121`", "\<\"\[Minus]5.453\"\>",
       "5.295`", "\<\"\[Minus]0.158\"\>", 
      "2.115`", "\<\"\[Minus]0.131\"\>", "\<\"\[Minus]0.707\"\>", "241.35`", 
      "1.55`", "43.1`", "1.1`", "1.923`", "\<\"\"\>"},
     {"1.36`", "\<\"\[Minus]29171.025\"\>", "6.993`", "\<\"\[Minus]5.327\"\>",
       "5.234`", "\<\"\[Minus]0.093\"\>", 
      "4.017`", "\<\"\[Minus]0.219\"\>", "\<\"\[Minus]0.713\"\>", "241.35`", 
      "1.552`", "44.2`", "1.1`", "1.743`", "\<\"\"\>"},
     {"1.33`", "\<\"\[Minus]20382.821\"\>", "6.83`", "\<\"\[Minus]5.101\"\>", 
      "5.576`", "0.475`", "3.159`", "0.349`", "\<\"\[Minus]0.713\"\>", 
      "225.284`", "1.507`", "34.3`", "1.048`", "1.392`", "\<\"\"\>"},
     {"1.25`", "\<\"\[Minus]18336.601\"\>", "6.802`", "\<\"\[Minus]5.024\"\>",
       "5.301`", "0.278`", "1.323`", "0.125`", "\<\"\[Minus]0.716\"\>", 
      "209.285`", "1.514`", "34.9`", "1.012`", "2.469`", "\<\"\"\>"},
     {"1.29`", "\<\"\[Minus]30240.922\"\>", "7.156`", "\<\"\[Minus]5.333\"\>",
       "5.236`", "\<\"\[Minus]0.097\"\>", 
      "4.084`", "\<\"\[Minus]0.220\"\>", "\<\"\[Minus]0.707\"\>", "255.376`", 
      "1.547`", "43.6`", "1.09`", "2.272`", "\<\"\"\>"},
     {"1.27`", "\<\"\[Minus]17266.813\"\>", "8.353`", "\<\"\[Minus]5.142\"\>",
       "5.451`", "0.309`", "1.618`", "0.133`", "\<\"\[Minus]0.714\"\>", 
      "195.258`", "1.516`", "35.3`", "1.026`", "1.94`", "\<\"\"\>"},
     {"1.14`", "\<\"\[Minus]22396.415\"\>", "7.075`", "\<\"\[Minus]5.349\"\>",
       "5.755`", "0.407`", "1.297`", "0.273`", "\<\"\[Minus]0.713\"\>", 
      "239.268`", "1.54`", "43.5`", "1.184`", "1.644`", "\<\"\"\>"},
     {"1.36`", "\<\"\[Minus]21452.636\"\>", "6.803`", "\<\"\[Minus]5.073\"\>",
       "5.531`", "0.458`", "3.234`", "0.353`", "\<\"\[Minus]0.707\"\>", 
      "239.311`", "1.504`", "34.3`", "1.034`", "1.921`", "\<\"\"\>"},
     {"1.11`", "\<\"\[Minus]28101.400\"\>", "7.292`", "\<\"\[Minus]5.423\"\>",
       "5.335`", "\<\"\[Minus]0.088\"\>", 
      "4.378`", "\<\"\[Minus]0.223\"\>", "\<\"\[Minus]0.708\"\>", "227.323`", 
      "1.559`", "45.`", "1.12`", "1.214`", "\<\"\"\>"},
     {"1.`", "\<\"\[Minus]19280.462\"\>", "7.265`", "\<\"\[Minus]5.393\"\>", 
      "5.876`", "0.483`", "1.539`", "0.326`", "\<\"\[Minus]0.707\"\>", 
      "209.242`", "1.55`", "45.4`", "1.175`", "1.699`", "\<\"\"\>"},
     {"1.05`", "\<\"\[Minus]21452.636\"\>", "7.265`", "\<\"\[Minus]5.505\"\>",
       "5.911`", "0.406`", "3.041`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "239.311`", "1.504`", "34.3`", "1.034`", "1.571`", "\<\"\"\>"},
     {"1.`", "\<\"\[Minus]19280.543\"\>", "6.803`", "\<\"\[Minus]4.968\"\>", 
      "5.226`", "0.258`", "1.505`", "0.326`", "\<\"\[Minus]0.715\"\>", 
      "209.242`", "1.55`", "45.4`", "1.175`", "1.699`", "\<\"\"\>"},
     {"1.38`", "\<\"\[Minus]22522.370\"\>", "6.911`", "\<\"\[Minus]5.063\"\>",
       "5.528`", "0.465`", "3.276`", "0.352`", "\<\"\[Minus]0.713\"\>", 
      "253.337`", "1.502`", "34.2`", "1.022`", "2.45`", "\<\"\"\>"},
     {"0.87`", "\<\"\[Minus]20382.821\"\>", "7.265`", "\<\"\[Minus]5.505\"\>",
       "5.908`", "0.403`", "3.089`", "0.225`", "\<\"\[Minus]0.714\"\>", 
      "225.284`", "1.508`", "35.2`", "1.05`", "1.262`", "\<\"\"\>"},
     {"0.86`", "\<\"\[Minus]23498.638\"\>", "7.374`", "\<\"\[Minus]5.703\"\>",
       "5.961`", "0.257`", "1.288`", "0.269`", "\<\"\[Minus]0.714\"\>", 
      "255.31`", "1.503`", "34.`", "1.069`", "0.637`", "\<\"\"\>"},
     {"0.83`", "\<\"\[Minus]21452.500\"\>", "7.183`", "\<\"\[Minus]5.443\"\>",
       "5.831`", "0.389`", "2.994`", "0.264`", "\<\"\[Minus]0.714\"\>", 
      "239.311`", "1.506`", "35.1`", 
      "1.036`", "\<\"\[Minus]1.842\"\>", "\<\"\"\>"},
     {"0.84`", "\<\"\[Minus]29171.025\"\>", "7.129`", "\<\"\[Minus]5.499\"\>",
       "5.468`", "\<\"\[Minus]0.030\"\>", "3.92`", 
      "0.293`", "\<\"\[Minus]0.712\"\>", "241.35`", "1.552`", "44.2`", "1.1`",
       "1.248`", "\<\"\"\>"},
     {"0.84`", "\<\"\[Minus]29171.025\"\>", "7.102`", "\<\"\[Minus]5.569\"\>",
       "5.499`", "\<\"\[Minus]0.070\"\>", "3.714`", 
      "0.289`", "\<\"\[Minus]0.708\"\>", "241.35`", "1.552`", "44.2`", 
      "1.1`", "\<\"\[Minus]1.003\"\>", "\<\"\"\>"},
     {"0.81`", "\<\"\[Minus]28101.400\"\>", "7.319`", "\<\"\[Minus]5.536\"\>",
       "5.488`", "\<\"\[Minus]0.049\"\>", "4.009`", 
      "0.293`", "\<\"\[Minus]0.702\"\>", "227.323`", "1.559`", "45.`", 
      "1.12`", "0.719`", "\<\"\"\>"},
     {"0.76`", "\<\"\[Minus]22396.388\"\>", "7.02`", "\<\"\[Minus]5.281\"\>", 
      "5.594`", "0.313`", "0.427`", "0.283`", "\<\"\[Minus]0.702\"\>", 
      "239.268`", "1.54`", "43.5`", "1.184`", "1.294`", "\<\"\"\>"},
     {"0.66`", "\<\"\[Minus]29171.025\"\>", "7.047`", "\<\"\[Minus]5.407\"\>",
       "5.332`", "\<\"\[Minus]0.075\"\>", 
      "4.42`", "\<\"\[Minus]0.226\"\>", "\<\"\[Minus]0.705\"\>", "241.35`", 
      "1.552`", "44.2`", "1.1`", "1.743`", "\<\"\"\>"},
     {"0.68`", "\<\"\[Minus]30240.922\"\>", "7.02`", "\<\"\[Minus]5.303\"\>", 
      "5.221`", "\<\"\[Minus]0.082\"\>", 
      "4.043`", "\<\"\[Minus]0.222\"\>", "\<\"\[Minus]0.713\"\>", "255.376`", 
      "1.547`", "43.6`", "1.09`", "2.272`", "\<\"\"\>"},
     {"0.67`", "\<\"\[Minus]17266.922\"\>", "7.047`", "\<\"\[Minus]5.243\"\>",
       "5.765`", "0.522`", "2.553`", "0.378`", "\<\"\[Minus]0.713\"\>", 
      "195.258`", "1.512`", "34.7`", 
      "1.023`", "\<\"\[Minus]1.265\"\>", "\<\"\"\>"},
     {"0.59`", "\<\"\[Minus]12104.477\"\>", "7.809`", "\<\"\[Minus]5.971\"\>",
       "6.34`", "0.37`", "1.567`", "0.179`", "\<\"\[Minus]0.707\"\>", 
      "149.233`", "1.525`", "35.2`", "0.938`", "2.241`", "\<\"\"\>"},
     {"0.58`", "\<\"\[Minus]31310.547\"\>", "7.02`", "\<\"\[Minus]5.311\"\>", 
      "5.224`", "\<\"\[Minus]0.088\"\>", 
      "4.067`", "\<\"\[Minus]0.219\"\>", "\<\"\[Minus]0.712\"\>", "269.403`", 
      "1.543`", "43.1`", "1.07`", "2.801`", "\<\"\"\>"},
     {"0.46`", "\<\"\[Minus]26669.745\"\>", "7.238`", "\<\"\[Minus]5.590\"\>",
       "5.669`", "0.079`", "3.375`", "0.267`", "\<\"\[Minus]0.712\"\>", 
      "301.38`", "1.555`", "39.8`", "1.093`", "2.81`", "\<\"\"\>"},
     {"0.43`", "\<\"\[Minus]19280.462\"\>", "7.211`", "\<\"\[Minus]5.328\"\>",
       "5.872`", "0.544`", "1.369`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "209.242`", "1.55`", "45.4`", "1.175`", "1.699`", "\<\"\"\>"},
     {"0.41`", "\<\"\[Minus]16164.481\"\>", "7.211`", "\<\"\[Minus]5.293\"\>",
       "5.602`", "0.309`", "1.899`", "0.329`", "\<\"\[Minus]0.708\"\>", 
      "179.216`", "1.564`", "48.`", "1.163`", "1.707`", "\<\"\"\>"},
     {"0.38`", "\<\"\[Minus]22522.234\"\>", "7.156`", "\<\"\[Minus]5.435\"\>",
       "5.827`", "0.391`", "2.947`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "253.337`", "1.503`", "35.`", "1.023`", "1.777`", "\<\"\"\>"},
     {"0.38`", "\<\"\[Minus]30240.922\"\>", "7.02`", "\<\"\[Minus]5.247\"\>", 
      "5.533`", "0.286`", "3.05`", "0.3`", "\<\"\[Minus]0.711\"\>", 
      "255.376`", "1.547`", "43.6`", "1.09`", "1.777`", "\<\"\"\>"},
     {"0.38`", "\<\"\[Minus]30240.922\"\>", "7.156`", "\<\"\[Minus]5.533\"\>",
       "5.466`", "\<\"\[Minus]0.067\"\>", "3.751`", 
      "0.285`", "\<\"\[Minus]0.710\"\>", "255.376`", "1.547`", "43.6`", 
      "1.09`", "1.777`", "\<\"\"\>"},
     {"0.33`", "\<\"\[Minus]20382.766\"\>", "7.319`", "\<\"\[Minus]5.524\"\>",
       "5.912`", "0.388`", "3.136`", "0.245`", "\<\"\[Minus]0.719\"\>", 
      "225.284`", "1.507`", "34.3`", "1.048`", "1.042`", "\<\"\"\>"},
     {"0.23`", "\<\"\[Minus]21452.609\"\>", "7.129`", "\<\"\[Minus]5.410\"\>",
       "5.794`", "0.384`", "2.979`", "0.26`", "\<\"\[Minus]0.713\"\>", 
      "239.311`", "1.506`", "35.1`", "1.036`", "1.273`", "\<\"\"\>"},
     {"0.03`", "\<\"\[Minus]20382.739\"\>", "7.238`", "\<\"\[Minus]5.481\"\>",
       "5.872`", "0.39`", "3.237`", "0.249`", "\<\"\[Minus]0.713\"\>", 
      "225.284`", "1.508`", "35.2`", "1.05`", "0.744`", "\<\"\"\>"},
     {"0.`", "\<\"\[Minus]19312.923\"\>", "7.319`", "\<\"\[Minus]5.523\"\>", 
      "5.914`", "0.391`", "3.203`", "0.253`", "\<\"\[Minus]0.707\"\>", 
      "211.258`", "1.511`", "35.4`", "1.067`", "0.215`", "\<\"\"\>"},
     {"\<\"\[Minus]0.030\"\>", "\<\"\[Minus]19312.787\"\>", 
      "7.456`", "\<\"\[Minus]5.719\"\>", "6.007`", "0.288`", "1.449`", 
      "0.305`", "\<\"\[Minus]0.710\"\>", "211.258`", "1.511`", "35.4`", 
      "1.067`", "\<\"\[Minus]3.080\"\>", "\<\"\"\>"},
     {"\<\"\[Minus]0.060\"\>", "\<\"\[Minus]17266.759\"\>", 
      "7.292`", "\<\"\[Minus]5.444\"\>", "5.849`", "0.405`", "3.673`", 
      "0.308`", "\<\"\[Minus]0.717\"\>", "195.258`", "1.512`", "34.7`", 
      "1.023`", "0.435`", "\<\"\"\>"},
     {"\<\"\[Minus]0.670\"\>", "\<\"\[Minus]16196.943\"\>", 
      "7.292`", "\<\"\[Minus]5.443\"\>", "5.848`", "0.406`", "3.724`", 
      "0.307`", "\<\"\[Minus]0.713\"\>", "181.232`", "1.517`", "36.`", 
      "1.041`", "0.126`", "\<\"\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.740061288990917*^9, 3.740061291062639*^9}},
 CellLabel->
  "Out[425]=",ExpressionUUID->"65f7f654-88b0-49f9-910c-22c20b868a7f"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"input", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "&"}], ",", "data"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.740061312433025*^9, 3.7400613412802963`*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"302c46d7-470c-4abd-8a8a-f92de09640e4"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"ET\"\>", "\<\"IP\"\>", "\<\"EHOMO\"\>", "\<\"\[Eta]\"\>", \
"\<\"ELUMO\"\>", "\<\"DM\"\>", "\<\"Qp\"\>", "\<\"Qmin\"\>", "\<\"MW\"\>", \
"\<\"n\"\>", "\<\"\[Gamma]\"\>", "\<\"D\"\>", "\<\"logP\"\>", "\<\"\"\>", "\<\
\"logMU\"\>"},
     {"\<\"\[Minus]82328.726\"\>", "7.374`", "\<\"\[Minus]5.682\"\>", 
      "5.522`", "\<\"\[Minus]0.160\"\>", "3.242`", 
      "0.046`", "\<\"\[Minus]0.707\"\>", "274.154`", "1.54`", "37.9`", 
      "1.324`", "2.455`", "\<\"\"\>", "2.72`"},
     {"\<\"\[Minus]30241.000\"\>", "7.125`", "\<\"\[Minus]5.428\"\>", 
      "5.258`", "\<\"\[Minus]0.170\"\>", "1.996`", 
      "0.135`", "\<\"\[Minus]0.708\"\>", "255.376`", "1.545`", "42.6`", 
      "1.08`", "2.452`", "\<\"\"\>", "1.96`"},
     {"\<\"\[Minus]19406.400\"\>", "6.731`", "\<\"\[Minus]5.029\"\>", 
      "5.302`", "0.273`", "1.234`", "0.126`", "\<\"\[Minus]0.712\"\>", 
      "223.311`", "1.509`", "33.9`", "0.998`", "2.778`", "\<\"\"\>", 
      "2.02`"},
     {"\<\"\[Minus]20476.100\"\>", "6.724`", "\<\"\[Minus]5.037\"\>", 
      "5.295`", "0.258`", "1.283`", "0.126`", "\<\"\[Minus]0.709\"\>", 
      "237.338`", "1.507`", "33.9`", "0.998`", "3.307`", "\<\"\"\>", 
      "1.95`"},
     {"\<\"\[Minus]18336.700\"\>", "6.765`", "\<\"\[Minus]5.009\"\>", 
      "5.282`", "0.273`", "1.117`", "0.127`", "\<\"\[Minus]0.710\"\>", 
      "209.285`", "1.511`", "34.2`", "1.01`", "2.249`", "\<\"\"\>", "1.9`"},
     {"\<\"\[Minus]31310.656\"\>", "7.238`", "\<\"\[Minus]4.780\"\>", 
      "5.066`", "0.286`", 
      "2.498`", "\<\"\[Minus]0.150\"\>", "\<\"\[Minus]0.712\"\>", "269.403`", 
      "1.539`", "41.2`", "1.07`", "2.761`", "\<\"\"\>", "1.71`"},
     {"\<\"\[Minus]86156.656\"\>", "7.374`", "\<\"\[Minus]5.687\"\>", 
      "5.527`", "\<\"\[Minus]0.160\"\>", "3.271`", 
      "0.046`", "\<\"\[Minus]0.709\"\>", "260.128`", "1.548`", "39.5`", 
      "1.368`", "2.146`", "\<\"\"\>", "1.69`"},
     {"\<\"\[Minus]21545.885\"\>", "6.721`", "\<\"\[Minus]5.025\"\>", "5.3`", 
      "0.275`", "1.25`", "0.122`", "\<\"\[Minus]0.713\"\>", "251.365`", 
      "1.504`", "33.9`", "0.979`", "3.386`", "\<\"\"\>", "1.68`"},
     {"\<\"\[Minus]29171.207\"\>", "7.121`", "\<\"\[Minus]5.453\"\>", 
      "5.295`", "\<\"\[Minus]0.158\"\>", 
      "2.115`", "\<\"\[Minus]0.131\"\>", "\<\"\[Minus]0.707\"\>", "241.35`", 
      "1.55`", "43.1`", "1.1`", "1.923`", "\<\"\"\>", "1.66`"},
     {"\<\"\[Minus]29171.025\"\>", "6.993`", "\<\"\[Minus]5.327\"\>", 
      "5.234`", "\<\"\[Minus]0.093\"\>", 
      "4.017`", "\<\"\[Minus]0.219\"\>", "\<\"\[Minus]0.713\"\>", "241.35`", 
      "1.552`", "44.2`", "1.1`", "1.743`", "\<\"\"\>", "1.36`"},
     {"\<\"\[Minus]20382.821\"\>", "6.83`", "\<\"\[Minus]5.101\"\>", "5.576`",
       "0.475`", "3.159`", "0.349`", "\<\"\[Minus]0.713\"\>", "225.284`", 
      "1.507`", "34.3`", "1.048`", "1.392`", "\<\"\"\>", "1.33`"},
     {"\<\"\[Minus]18336.601\"\>", "6.802`", "\<\"\[Minus]5.024\"\>", 
      "5.301`", "0.278`", "1.323`", "0.125`", "\<\"\[Minus]0.716\"\>", 
      "209.285`", "1.514`", "34.9`", "1.012`", "2.469`", "\<\"\"\>", 
      "1.25`"},
     {"\<\"\[Minus]30240.922\"\>", "7.156`", "\<\"\[Minus]5.333\"\>", 
      "5.236`", "\<\"\[Minus]0.097\"\>", 
      "4.084`", "\<\"\[Minus]0.220\"\>", "\<\"\[Minus]0.707\"\>", "255.376`", 
      "1.547`", "43.6`", "1.09`", "2.272`", "\<\"\"\>", "1.29`"},
     {"\<\"\[Minus]17266.813\"\>", "8.353`", "\<\"\[Minus]5.142\"\>", 
      "5.451`", "0.309`", "1.618`", "0.133`", "\<\"\[Minus]0.714\"\>", 
      "195.258`", "1.516`", "35.3`", "1.026`", "1.94`", "\<\"\"\>", "1.27`"},
     {"\<\"\[Minus]22396.415\"\>", "7.075`", "\<\"\[Minus]5.349\"\>", 
      "5.755`", "0.407`", "1.297`", "0.273`", "\<\"\[Minus]0.713\"\>", 
      "239.268`", "1.54`", "43.5`", "1.184`", "1.644`", "\<\"\"\>", "1.14`"},
     {"\<\"\[Minus]21452.636\"\>", "6.803`", "\<\"\[Minus]5.073\"\>", 
      "5.531`", "0.458`", "3.234`", "0.353`", "\<\"\[Minus]0.707\"\>", 
      "239.311`", "1.504`", "34.3`", "1.034`", "1.921`", "\<\"\"\>", 
      "1.36`"},
     {"\<\"\[Minus]28101.400\"\>", "7.292`", "\<\"\[Minus]5.423\"\>", 
      "5.335`", "\<\"\[Minus]0.088\"\>", 
      "4.378`", "\<\"\[Minus]0.223\"\>", "\<\"\[Minus]0.708\"\>", "227.323`", 
      "1.559`", "45.`", "1.12`", "1.214`", "\<\"\"\>", "1.11`"},
     {"\<\"\[Minus]19280.462\"\>", "7.265`", "\<\"\[Minus]5.393\"\>", 
      "5.876`", "0.483`", "1.539`", "0.326`", "\<\"\[Minus]0.707\"\>", 
      "209.242`", "1.55`", "45.4`", "1.175`", "1.699`", "\<\"\"\>", "1.`"},
     {"\<\"\[Minus]21452.636\"\>", "7.265`", "\<\"\[Minus]5.505\"\>", 
      "5.911`", "0.406`", "3.041`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "239.311`", "1.504`", "34.3`", "1.034`", "1.571`", "\<\"\"\>", 
      "1.05`"},
     {"\<\"\[Minus]19280.543\"\>", "6.803`", "\<\"\[Minus]4.968\"\>", 
      "5.226`", "0.258`", "1.505`", "0.326`", "\<\"\[Minus]0.715\"\>", 
      "209.242`", "1.55`", "45.4`", "1.175`", "1.699`", "\<\"\"\>", "1.`"},
     {"\<\"\[Minus]22522.370\"\>", "6.911`", "\<\"\[Minus]5.063\"\>", 
      "5.528`", "0.465`", "3.276`", "0.352`", "\<\"\[Minus]0.713\"\>", 
      "253.337`", "1.502`", "34.2`", "1.022`", "2.45`", "\<\"\"\>", "1.38`"},
     {"\<\"\[Minus]20382.821\"\>", "7.265`", "\<\"\[Minus]5.505\"\>", 
      "5.908`", "0.403`", "3.089`", "0.225`", "\<\"\[Minus]0.714\"\>", 
      "225.284`", "1.508`", "35.2`", "1.05`", "1.262`", "\<\"\"\>", "0.87`"},
     {"\<\"\[Minus]23498.638\"\>", "7.374`", "\<\"\[Minus]5.703\"\>", 
      "5.961`", "0.257`", "1.288`", "0.269`", "\<\"\[Minus]0.714\"\>", 
      "255.31`", "1.503`", "34.`", "1.069`", "0.637`", "\<\"\"\>", "0.86`"},
     {"\<\"\[Minus]21452.500\"\>", "7.183`", "\<\"\[Minus]5.443\"\>", 
      "5.831`", "0.389`", "2.994`", "0.264`", "\<\"\[Minus]0.714\"\>", 
      "239.311`", "1.506`", "35.1`", 
      "1.036`", "\<\"\[Minus]1.842\"\>", "\<\"\"\>", "0.83`"},
     {"\<\"\[Minus]29171.025\"\>", "7.129`", "\<\"\[Minus]5.499\"\>", 
      "5.468`", "\<\"\[Minus]0.030\"\>", "3.92`", 
      "0.293`", "\<\"\[Minus]0.712\"\>", "241.35`", "1.552`", "44.2`", "1.1`",
       "1.248`", "\<\"\"\>", "0.84`"},
     {"\<\"\[Minus]29171.025\"\>", "7.102`", "\<\"\[Minus]5.569\"\>", 
      "5.499`", "\<\"\[Minus]0.070\"\>", "3.714`", 
      "0.289`", "\<\"\[Minus]0.708\"\>", "241.35`", "1.552`", "44.2`", 
      "1.1`", "\<\"\[Minus]1.003\"\>", "\<\"\"\>", "0.84`"},
     {"\<\"\[Minus]28101.400\"\>", "7.319`", "\<\"\[Minus]5.536\"\>", 
      "5.488`", "\<\"\[Minus]0.049\"\>", "4.009`", 
      "0.293`", "\<\"\[Minus]0.702\"\>", "227.323`", "1.559`", "45.`", 
      "1.12`", "0.719`", "\<\"\"\>", "0.81`"},
     {"\<\"\[Minus]22396.388\"\>", "7.02`", "\<\"\[Minus]5.281\"\>", "5.594`",
       "0.313`", "0.427`", "0.283`", "\<\"\[Minus]0.702\"\>", "239.268`", 
      "1.54`", "43.5`", "1.184`", "1.294`", "\<\"\"\>", "0.76`"},
     {"\<\"\[Minus]29171.025\"\>", "7.047`", "\<\"\[Minus]5.407\"\>", 
      "5.332`", "\<\"\[Minus]0.075\"\>", 
      "4.42`", "\<\"\[Minus]0.226\"\>", "\<\"\[Minus]0.705\"\>", "241.35`", 
      "1.552`", "44.2`", "1.1`", "1.743`", "\<\"\"\>", "0.66`"},
     {"\<\"\[Minus]30240.922\"\>", "7.02`", "\<\"\[Minus]5.303\"\>", 
      "5.221`", "\<\"\[Minus]0.082\"\>", 
      "4.043`", "\<\"\[Minus]0.222\"\>", "\<\"\[Minus]0.713\"\>", "255.376`", 
      "1.547`", "43.6`", "1.09`", "2.272`", "\<\"\"\>", "0.68`"},
     {"\<\"\[Minus]17266.922\"\>", "7.047`", "\<\"\[Minus]5.243\"\>", 
      "5.765`", "0.522`", "2.553`", "0.378`", "\<\"\[Minus]0.713\"\>", 
      "195.258`", "1.512`", "34.7`", 
      "1.023`", "\<\"\[Minus]1.265\"\>", "\<\"\"\>", "0.67`"},
     {"\<\"\[Minus]12104.477\"\>", "7.809`", "\<\"\[Minus]5.971\"\>", "6.34`",
       "0.37`", "1.567`", "0.179`", "\<\"\[Minus]0.707\"\>", "149.233`", 
      "1.525`", "35.2`", "0.938`", "2.241`", "\<\"\"\>", "0.59`"},
     {"\<\"\[Minus]31310.547\"\>", "7.02`", "\<\"\[Minus]5.311\"\>", 
      "5.224`", "\<\"\[Minus]0.088\"\>", 
      "4.067`", "\<\"\[Minus]0.219\"\>", "\<\"\[Minus]0.712\"\>", "269.403`", 
      "1.543`", "43.1`", "1.07`", "2.801`", "\<\"\"\>", "0.58`"},
     {"\<\"\[Minus]26669.745\"\>", "7.238`", "\<\"\[Minus]5.590\"\>", 
      "5.669`", "0.079`", "3.375`", "0.267`", "\<\"\[Minus]0.712\"\>", 
      "301.38`", "1.555`", "39.8`", "1.093`", "2.81`", "\<\"\"\>", "0.46`"},
     {"\<\"\[Minus]19280.462\"\>", "7.211`", "\<\"\[Minus]5.328\"\>", 
      "5.872`", "0.544`", "1.369`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "209.242`", "1.55`", "45.4`", "1.175`", "1.699`", "\<\"\"\>", "0.43`"},
     {"\<\"\[Minus]16164.481\"\>", "7.211`", "\<\"\[Minus]5.293\"\>", 
      "5.602`", "0.309`", "1.899`", "0.329`", "\<\"\[Minus]0.708\"\>", 
      "179.216`", "1.564`", "48.`", "1.163`", "1.707`", "\<\"\"\>", "0.41`"},
     {"\<\"\[Minus]22522.234\"\>", "7.156`", "\<\"\[Minus]5.435\"\>", 
      "5.827`", "0.391`", "2.947`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "253.337`", "1.503`", "35.`", "1.023`", "1.777`", "\<\"\"\>", "0.38`"},
     {"\<\"\[Minus]30240.922\"\>", "7.02`", "\<\"\[Minus]5.247\"\>", "5.533`",
       "0.286`", "3.05`", "0.3`", "\<\"\[Minus]0.711\"\>", "255.376`", 
      "1.547`", "43.6`", "1.09`", "1.777`", "\<\"\"\>", "0.38`"},
     {"\<\"\[Minus]30240.922\"\>", "7.156`", "\<\"\[Minus]5.533\"\>", 
      "5.466`", "\<\"\[Minus]0.067\"\>", "3.751`", 
      "0.285`", "\<\"\[Minus]0.710\"\>", "255.376`", "1.547`", "43.6`", 
      "1.09`", "1.777`", "\<\"\"\>", "0.38`"},
     {"\<\"\[Minus]20382.766\"\>", "7.319`", "\<\"\[Minus]5.524\"\>", 
      "5.912`", "0.388`", "3.136`", "0.245`", "\<\"\[Minus]0.719\"\>", 
      "225.284`", "1.507`", "34.3`", "1.048`", "1.042`", "\<\"\"\>", 
      "0.33`"},
     {"\<\"\[Minus]21452.609\"\>", "7.129`", "\<\"\[Minus]5.410\"\>", 
      "5.794`", "0.384`", "2.979`", "0.26`", "\<\"\[Minus]0.713\"\>", 
      "239.311`", "1.506`", "35.1`", "1.036`", "1.273`", "\<\"\"\>", 
      "0.23`"},
     {"\<\"\[Minus]20382.739\"\>", "7.238`", "\<\"\[Minus]5.481\"\>", 
      "5.872`", "0.39`", "3.237`", "0.249`", "\<\"\[Minus]0.713\"\>", 
      "225.284`", "1.508`", "35.2`", "1.05`", "0.744`", "\<\"\"\>", "0.03`"},
     {"\<\"\[Minus]19312.923\"\>", "7.319`", "\<\"\[Minus]5.523\"\>", 
      "5.914`", "0.391`", "3.203`", "0.253`", "\<\"\[Minus]0.707\"\>", 
      "211.258`", "1.511`", "35.4`", "1.067`", "0.215`", "\<\"\"\>", "0.`"},
     {"\<\"\[Minus]19312.787\"\>", "7.456`", "\<\"\[Minus]5.719\"\>", 
      "6.007`", "0.288`", "1.449`", "0.305`", "\<\"\[Minus]0.710\"\>", 
      "211.258`", "1.511`", "35.4`", 
      "1.067`", "\<\"\[Minus]3.080\"\>", "\<\"\"\>", \
"\<\"\[Minus]0.030\"\>"},
     {"\<\"\[Minus]17266.759\"\>", "7.292`", "\<\"\[Minus]5.444\"\>", 
      "5.849`", "0.405`", "3.673`", "0.308`", "\<\"\[Minus]0.717\"\>", 
      "195.258`", "1.512`", "34.7`", "1.023`", 
      "0.435`", "\<\"\"\>", "\<\"\[Minus]0.060\"\>"},
     {"\<\"\[Minus]16196.943\"\>", "7.292`", "\<\"\[Minus]5.443\"\>", 
      "5.848`", "0.406`", "3.724`", "0.307`", "\<\"\[Minus]0.713\"\>", 
      "181.232`", "1.517`", "36.`", "1.041`", 
      "0.126`", "\<\"\"\>", "\<\"\[Minus]0.670\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.740061317986177*^9, 3.740061345075532*^9}, {
  3.7400617980369368`*^9, 3.740061838888761*^9}},
 CellLabel->
  "Out[429]=",ExpressionUUID->"079d94b6-7738-42b2-a156-5b58c0efa1ab"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"input2", "=", 
  RowBox[{"ReplacePart", "[", 
   RowBox[{"input", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"_", ",", 
       RowBox[{"-", "2"}]}], "}"}], "\[Rule]", "Nothing"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.740061841929942*^9, 3.740061860334915*^9}},
 CellLabel->
  "In[434]:=",ExpressionUUID->"a262d373-272a-42bd-b934-4278a079f2f4"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"ET\"\>", "\<\"IP\"\>", "\<\"EHOMO\"\>", "\<\"\[Eta]\"\>", \
"\<\"ELUMO\"\>", "\<\"DM\"\>", "\<\"Qp\"\>", "\<\"Qmin\"\>", "\<\"MW\"\>", \
"\<\"n\"\>", "\<\"\[Gamma]\"\>", "\<\"D\"\>", "\<\"logP\"\>", "\<\"logMU\"\>"},
     {"\<\"\[Minus]82328.726\"\>", "7.374`", "\<\"\[Minus]5.682\"\>", 
      "5.522`", "\<\"\[Minus]0.160\"\>", "3.242`", 
      "0.046`", "\<\"\[Minus]0.707\"\>", "274.154`", "1.54`", "37.9`", 
      "1.324`", "2.455`", "2.72`"},
     {"\<\"\[Minus]30241.000\"\>", "7.125`", "\<\"\[Minus]5.428\"\>", 
      "5.258`", "\<\"\[Minus]0.170\"\>", "1.996`", 
      "0.135`", "\<\"\[Minus]0.708\"\>", "255.376`", "1.545`", "42.6`", 
      "1.08`", "2.452`", "1.96`"},
     {"\<\"\[Minus]19406.400\"\>", "6.731`", "\<\"\[Minus]5.029\"\>", 
      "5.302`", "0.273`", "1.234`", "0.126`", "\<\"\[Minus]0.712\"\>", 
      "223.311`", "1.509`", "33.9`", "0.998`", "2.778`", "2.02`"},
     {"\<\"\[Minus]20476.100\"\>", "6.724`", "\<\"\[Minus]5.037\"\>", 
      "5.295`", "0.258`", "1.283`", "0.126`", "\<\"\[Minus]0.709\"\>", 
      "237.338`", "1.507`", "33.9`", "0.998`", "3.307`", "1.95`"},
     {"\<\"\[Minus]18336.700\"\>", "6.765`", "\<\"\[Minus]5.009\"\>", 
      "5.282`", "0.273`", "1.117`", "0.127`", "\<\"\[Minus]0.710\"\>", 
      "209.285`", "1.511`", "34.2`", "1.01`", "2.249`", "1.9`"},
     {"\<\"\[Minus]31310.656\"\>", "7.238`", "\<\"\[Minus]4.780\"\>", 
      "5.066`", "0.286`", 
      "2.498`", "\<\"\[Minus]0.150\"\>", "\<\"\[Minus]0.712\"\>", "269.403`", 
      "1.539`", "41.2`", "1.07`", "2.761`", "1.71`"},
     {"\<\"\[Minus]86156.656\"\>", "7.374`", "\<\"\[Minus]5.687\"\>", 
      "5.527`", "\<\"\[Minus]0.160\"\>", "3.271`", 
      "0.046`", "\<\"\[Minus]0.709\"\>", "260.128`", "1.548`", "39.5`", 
      "1.368`", "2.146`", "1.69`"},
     {"\<\"\[Minus]21545.885\"\>", "6.721`", "\<\"\[Minus]5.025\"\>", "5.3`", 
      "0.275`", "1.25`", "0.122`", "\<\"\[Minus]0.713\"\>", "251.365`", 
      "1.504`", "33.9`", "0.979`", "3.386`", "1.68`"},
     {"\<\"\[Minus]29171.207\"\>", "7.121`", "\<\"\[Minus]5.453\"\>", 
      "5.295`", "\<\"\[Minus]0.158\"\>", 
      "2.115`", "\<\"\[Minus]0.131\"\>", "\<\"\[Minus]0.707\"\>", "241.35`", 
      "1.55`", "43.1`", "1.1`", "1.923`", "1.66`"},
     {"\<\"\[Minus]29171.025\"\>", "6.993`", "\<\"\[Minus]5.327\"\>", 
      "5.234`", "\<\"\[Minus]0.093\"\>", 
      "4.017`", "\<\"\[Minus]0.219\"\>", "\<\"\[Minus]0.713\"\>", "241.35`", 
      "1.552`", "44.2`", "1.1`", "1.743`", "1.36`"},
     {"\<\"\[Minus]20382.821\"\>", "6.83`", "\<\"\[Minus]5.101\"\>", "5.576`",
       "0.475`", "3.159`", "0.349`", "\<\"\[Minus]0.713\"\>", "225.284`", 
      "1.507`", "34.3`", "1.048`", "1.392`", "1.33`"},
     {"\<\"\[Minus]18336.601\"\>", "6.802`", "\<\"\[Minus]5.024\"\>", 
      "5.301`", "0.278`", "1.323`", "0.125`", "\<\"\[Minus]0.716\"\>", 
      "209.285`", "1.514`", "34.9`", "1.012`", "2.469`", "1.25`"},
     {"\<\"\[Minus]30240.922\"\>", "7.156`", "\<\"\[Minus]5.333\"\>", 
      "5.236`", "\<\"\[Minus]0.097\"\>", 
      "4.084`", "\<\"\[Minus]0.220\"\>", "\<\"\[Minus]0.707\"\>", "255.376`", 
      "1.547`", "43.6`", "1.09`", "2.272`", "1.29`"},
     {"\<\"\[Minus]17266.813\"\>", "8.353`", "\<\"\[Minus]5.142\"\>", 
      "5.451`", "0.309`", "1.618`", "0.133`", "\<\"\[Minus]0.714\"\>", 
      "195.258`", "1.516`", "35.3`", "1.026`", "1.94`", "1.27`"},
     {"\<\"\[Minus]22396.415\"\>", "7.075`", "\<\"\[Minus]5.349\"\>", 
      "5.755`", "0.407`", "1.297`", "0.273`", "\<\"\[Minus]0.713\"\>", 
      "239.268`", "1.54`", "43.5`", "1.184`", "1.644`", "1.14`"},
     {"\<\"\[Minus]21452.636\"\>", "6.803`", "\<\"\[Minus]5.073\"\>", 
      "5.531`", "0.458`", "3.234`", "0.353`", "\<\"\[Minus]0.707\"\>", 
      "239.311`", "1.504`", "34.3`", "1.034`", "1.921`", "1.36`"},
     {"\<\"\[Minus]28101.400\"\>", "7.292`", "\<\"\[Minus]5.423\"\>", 
      "5.335`", "\<\"\[Minus]0.088\"\>", 
      "4.378`", "\<\"\[Minus]0.223\"\>", "\<\"\[Minus]0.708\"\>", "227.323`", 
      "1.559`", "45.`", "1.12`", "1.214`", "1.11`"},
     {"\<\"\[Minus]19280.462\"\>", "7.265`", "\<\"\[Minus]5.393\"\>", 
      "5.876`", "0.483`", "1.539`", "0.326`", "\<\"\[Minus]0.707\"\>", 
      "209.242`", "1.55`", "45.4`", "1.175`", "1.699`", "1.`"},
     {"\<\"\[Minus]21452.636\"\>", "7.265`", "\<\"\[Minus]5.505\"\>", 
      "5.911`", "0.406`", "3.041`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "239.311`", "1.504`", "34.3`", "1.034`", "1.571`", "1.05`"},
     {"\<\"\[Minus]19280.543\"\>", "6.803`", "\<\"\[Minus]4.968\"\>", 
      "5.226`", "0.258`", "1.505`", "0.326`", "\<\"\[Minus]0.715\"\>", 
      "209.242`", "1.55`", "45.4`", "1.175`", "1.699`", "1.`"},
     {"\<\"\[Minus]22522.370\"\>", "6.911`", "\<\"\[Minus]5.063\"\>", 
      "5.528`", "0.465`", "3.276`", "0.352`", "\<\"\[Minus]0.713\"\>", 
      "253.337`", "1.502`", "34.2`", "1.022`", "2.45`", "1.38`"},
     {"\<\"\[Minus]20382.821\"\>", "7.265`", "\<\"\[Minus]5.505\"\>", 
      "5.908`", "0.403`", "3.089`", "0.225`", "\<\"\[Minus]0.714\"\>", 
      "225.284`", "1.508`", "35.2`", "1.05`", "1.262`", "0.87`"},
     {"\<\"\[Minus]23498.638\"\>", "7.374`", "\<\"\[Minus]5.703\"\>", 
      "5.961`", "0.257`", "1.288`", "0.269`", "\<\"\[Minus]0.714\"\>", 
      "255.31`", "1.503`", "34.`", "1.069`", "0.637`", "0.86`"},
     {"\<\"\[Minus]21452.500\"\>", "7.183`", "\<\"\[Minus]5.443\"\>", 
      "5.831`", "0.389`", "2.994`", "0.264`", "\<\"\[Minus]0.714\"\>", 
      "239.311`", "1.506`", "35.1`", "1.036`", "\<\"\[Minus]1.842\"\>", 
      "0.83`"},
     {"\<\"\[Minus]29171.025\"\>", "7.129`", "\<\"\[Minus]5.499\"\>", 
      "5.468`", "\<\"\[Minus]0.030\"\>", "3.92`", 
      "0.293`", "\<\"\[Minus]0.712\"\>", "241.35`", "1.552`", "44.2`", "1.1`",
       "1.248`", "0.84`"},
     {"\<\"\[Minus]29171.025\"\>", "7.102`", "\<\"\[Minus]5.569\"\>", 
      "5.499`", "\<\"\[Minus]0.070\"\>", "3.714`", 
      "0.289`", "\<\"\[Minus]0.708\"\>", "241.35`", "1.552`", "44.2`", 
      "1.1`", "\<\"\[Minus]1.003\"\>", "0.84`"},
     {"\<\"\[Minus]28101.400\"\>", "7.319`", "\<\"\[Minus]5.536\"\>", 
      "5.488`", "\<\"\[Minus]0.049\"\>", "4.009`", 
      "0.293`", "\<\"\[Minus]0.702\"\>", "227.323`", "1.559`", "45.`", 
      "1.12`", "0.719`", "0.81`"},
     {"\<\"\[Minus]22396.388\"\>", "7.02`", "\<\"\[Minus]5.281\"\>", "5.594`",
       "0.313`", "0.427`", "0.283`", "\<\"\[Minus]0.702\"\>", "239.268`", 
      "1.54`", "43.5`", "1.184`", "1.294`", "0.76`"},
     {"\<\"\[Minus]29171.025\"\>", "7.047`", "\<\"\[Minus]5.407\"\>", 
      "5.332`", "\<\"\[Minus]0.075\"\>", 
      "4.42`", "\<\"\[Minus]0.226\"\>", "\<\"\[Minus]0.705\"\>", "241.35`", 
      "1.552`", "44.2`", "1.1`", "1.743`", "0.66`"},
     {"\<\"\[Minus]30240.922\"\>", "7.02`", "\<\"\[Minus]5.303\"\>", 
      "5.221`", "\<\"\[Minus]0.082\"\>", 
      "4.043`", "\<\"\[Minus]0.222\"\>", "\<\"\[Minus]0.713\"\>", "255.376`", 
      "1.547`", "43.6`", "1.09`", "2.272`", "0.68`"},
     {"\<\"\[Minus]17266.922\"\>", "7.047`", "\<\"\[Minus]5.243\"\>", 
      "5.765`", "0.522`", "2.553`", "0.378`", "\<\"\[Minus]0.713\"\>", 
      "195.258`", "1.512`", "34.7`", "1.023`", "\<\"\[Minus]1.265\"\>", 
      "0.67`"},
     {"\<\"\[Minus]12104.477\"\>", "7.809`", "\<\"\[Minus]5.971\"\>", "6.34`",
       "0.37`", "1.567`", "0.179`", "\<\"\[Minus]0.707\"\>", "149.233`", 
      "1.525`", "35.2`", "0.938`", "2.241`", "0.59`"},
     {"\<\"\[Minus]31310.547\"\>", "7.02`", "\<\"\[Minus]5.311\"\>", 
      "5.224`", "\<\"\[Minus]0.088\"\>", 
      "4.067`", "\<\"\[Minus]0.219\"\>", "\<\"\[Minus]0.712\"\>", "269.403`", 
      "1.543`", "43.1`", "1.07`", "2.801`", "0.58`"},
     {"\<\"\[Minus]26669.745\"\>", "7.238`", "\<\"\[Minus]5.590\"\>", 
      "5.669`", "0.079`", "3.375`", "0.267`", "\<\"\[Minus]0.712\"\>", 
      "301.38`", "1.555`", "39.8`", "1.093`", "2.81`", "0.46`"},
     {"\<\"\[Minus]19280.462\"\>", "7.211`", "\<\"\[Minus]5.328\"\>", 
      "5.872`", "0.544`", "1.369`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "209.242`", "1.55`", "45.4`", "1.175`", "1.699`", "0.43`"},
     {"\<\"\[Minus]16164.481\"\>", "7.211`", "\<\"\[Minus]5.293\"\>", 
      "5.602`", "0.309`", "1.899`", "0.329`", "\<\"\[Minus]0.708\"\>", 
      "179.216`", "1.564`", "48.`", "1.163`", "1.707`", "0.41`"},
     {"\<\"\[Minus]22522.234\"\>", "7.156`", "\<\"\[Minus]5.435\"\>", 
      "5.827`", "0.391`", "2.947`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "253.337`", "1.503`", "35.`", "1.023`", "1.777`", "0.38`"},
     {"\<\"\[Minus]30240.922\"\>", "7.02`", "\<\"\[Minus]5.247\"\>", "5.533`",
       "0.286`", "3.05`", "0.3`", "\<\"\[Minus]0.711\"\>", "255.376`", 
      "1.547`", "43.6`", "1.09`", "1.777`", "0.38`"},
     {"\<\"\[Minus]30240.922\"\>", "7.156`", "\<\"\[Minus]5.533\"\>", 
      "5.466`", "\<\"\[Minus]0.067\"\>", "3.751`", 
      "0.285`", "\<\"\[Minus]0.710\"\>", "255.376`", "1.547`", "43.6`", 
      "1.09`", "1.777`", "0.38`"},
     {"\<\"\[Minus]20382.766\"\>", "7.319`", "\<\"\[Minus]5.524\"\>", 
      "5.912`", "0.388`", "3.136`", "0.245`", "\<\"\[Minus]0.719\"\>", 
      "225.284`", "1.507`", "34.3`", "1.048`", "1.042`", "0.33`"},
     {"\<\"\[Minus]21452.609\"\>", "7.129`", "\<\"\[Minus]5.410\"\>", 
      "5.794`", "0.384`", "2.979`", "0.26`", "\<\"\[Minus]0.713\"\>", 
      "239.311`", "1.506`", "35.1`", "1.036`", "1.273`", "0.23`"},
     {"\<\"\[Minus]20382.739\"\>", "7.238`", "\<\"\[Minus]5.481\"\>", 
      "5.872`", "0.39`", "3.237`", "0.249`", "\<\"\[Minus]0.713\"\>", 
      "225.284`", "1.508`", "35.2`", "1.05`", "0.744`", "0.03`"},
     {"\<\"\[Minus]19312.923\"\>", "7.319`", "\<\"\[Minus]5.523\"\>", 
      "5.914`", "0.391`", "3.203`", "0.253`", "\<\"\[Minus]0.707\"\>", 
      "211.258`", "1.511`", "35.4`", "1.067`", "0.215`", "0.`"},
     {"\<\"\[Minus]19312.787\"\>", "7.456`", "\<\"\[Minus]5.719\"\>", 
      "6.007`", "0.288`", "1.449`", "0.305`", "\<\"\[Minus]0.710\"\>", 
      "211.258`", "1.511`", "35.4`", 
      "1.067`", "\<\"\[Minus]3.080\"\>", "\<\"\[Minus]0.030\"\>"},
     {"\<\"\[Minus]17266.759\"\>", "7.292`", "\<\"\[Minus]5.444\"\>", 
      "5.849`", "0.405`", "3.673`", "0.308`", "\<\"\[Minus]0.717\"\>", 
      "195.258`", "1.512`", "34.7`", "1.023`", 
      "0.435`", "\<\"\[Minus]0.060\"\>"},
     {"\<\"\[Minus]16196.943\"\>", "7.292`", "\<\"\[Minus]5.443\"\>", 
      "5.848`", "0.406`", "3.724`", "0.307`", "\<\"\[Minus]0.713\"\>", 
      "181.232`", "1.517`", "36.`", "1.041`", 
      "0.126`", "\<\"\[Minus]0.670\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.740061860916299*^9, 3.7400618627523003`*^9}},
 CellLabel->
  "Out[434]=",ExpressionUUID->"81f7a495-0436-46b9-a4a1-31cc68a37804"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "input2", "]"}]], "Input",
 CellChangeTimes->{{3.740061894851531*^9, 3.7400618977515163`*^9}},
 CellLabel->
  "In[435]:=",ExpressionUUID->"c08daa73-0d9e-4646-8a4d-26943eb52037"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"47", ",", "14"}], "}"}]], "Output",
 CellChangeTimes->{3.740061898307967*^9},
 CellLabel->
  "Out[435]=",ExpressionUUID->"d0742784-43c7-411c-8dd3-017dfa845ee7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gooddata", "=", 
  RowBox[{"ReplacePart", "[", 
   RowBox[{"input2", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"_", ",", 
       RowBox[{"-", "5"}]}], "}"}], "\[Rule]", "Nothing"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.740061716913872*^9, 3.740061747820863*^9}, {
   3.740061903393478*^9, 3.740061915456685*^9}, 3.7400619608531237`*^9},
 CellLabel->
  "In[461]:=",ExpressionUUID->"8d409239-d9bd-49ec-8b6e-7c4db7eae491"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"ET\"\>", "\<\"IP\"\>", "\<\"EHOMO\"\>", "\<\"\[Eta]\"\>", \
"\<\"ELUMO\"\>", "\<\"DM\"\>", "\<\"Qp\"\>", "\<\"Qmin\"\>", "\<\"MW\"\>", \
"\<\"\[Gamma]\"\>", "\<\"D\"\>", "\<\"logP\"\>", "\<\"logMU\"\>"},
     {"\<\"\[Minus]82328.726\"\>", "7.374`", "\<\"\[Minus]5.682\"\>", 
      "5.522`", "\<\"\[Minus]0.160\"\>", "3.242`", 
      "0.046`", "\<\"\[Minus]0.707\"\>", "274.154`", "37.9`", "1.324`", 
      "2.455`", "2.72`"},
     {"\<\"\[Minus]30241.000\"\>", "7.125`", "\<\"\[Minus]5.428\"\>", 
      "5.258`", "\<\"\[Minus]0.170\"\>", "1.996`", 
      "0.135`", "\<\"\[Minus]0.708\"\>", "255.376`", "42.6`", "1.08`", 
      "2.452`", "1.96`"},
     {"\<\"\[Minus]19406.400\"\>", "6.731`", "\<\"\[Minus]5.029\"\>", 
      "5.302`", "0.273`", "1.234`", "0.126`", "\<\"\[Minus]0.712\"\>", 
      "223.311`", "33.9`", "0.998`", "2.778`", "2.02`"},
     {"\<\"\[Minus]20476.100\"\>", "6.724`", "\<\"\[Minus]5.037\"\>", 
      "5.295`", "0.258`", "1.283`", "0.126`", "\<\"\[Minus]0.709\"\>", 
      "237.338`", "33.9`", "0.998`", "3.307`", "1.95`"},
     {"\<\"\[Minus]18336.700\"\>", "6.765`", "\<\"\[Minus]5.009\"\>", 
      "5.282`", "0.273`", "1.117`", "0.127`", "\<\"\[Minus]0.710\"\>", 
      "209.285`", "34.2`", "1.01`", "2.249`", "1.9`"},
     {"\<\"\[Minus]31310.656\"\>", "7.238`", "\<\"\[Minus]4.780\"\>", 
      "5.066`", "0.286`", 
      "2.498`", "\<\"\[Minus]0.150\"\>", "\<\"\[Minus]0.712\"\>", "269.403`", 
      "41.2`", "1.07`", "2.761`", "1.71`"},
     {"\<\"\[Minus]86156.656\"\>", "7.374`", "\<\"\[Minus]5.687\"\>", 
      "5.527`", "\<\"\[Minus]0.160\"\>", "3.271`", 
      "0.046`", "\<\"\[Minus]0.709\"\>", "260.128`", "39.5`", "1.368`", 
      "2.146`", "1.69`"},
     {"\<\"\[Minus]21545.885\"\>", "6.721`", "\<\"\[Minus]5.025\"\>", "5.3`", 
      "0.275`", "1.25`", "0.122`", "\<\"\[Minus]0.713\"\>", "251.365`", 
      "33.9`", "0.979`", "3.386`", "1.68`"},
     {"\<\"\[Minus]29171.207\"\>", "7.121`", "\<\"\[Minus]5.453\"\>", 
      "5.295`", "\<\"\[Minus]0.158\"\>", 
      "2.115`", "\<\"\[Minus]0.131\"\>", "\<\"\[Minus]0.707\"\>", "241.35`", 
      "43.1`", "1.1`", "1.923`", "1.66`"},
     {"\<\"\[Minus]29171.025\"\>", "6.993`", "\<\"\[Minus]5.327\"\>", 
      "5.234`", "\<\"\[Minus]0.093\"\>", 
      "4.017`", "\<\"\[Minus]0.219\"\>", "\<\"\[Minus]0.713\"\>", "241.35`", 
      "44.2`", "1.1`", "1.743`", "1.36`"},
     {"\<\"\[Minus]20382.821\"\>", "6.83`", "\<\"\[Minus]5.101\"\>", "5.576`",
       "0.475`", "3.159`", "0.349`", "\<\"\[Minus]0.713\"\>", "225.284`", 
      "34.3`", "1.048`", "1.392`", "1.33`"},
     {"\<\"\[Minus]18336.601\"\>", "6.802`", "\<\"\[Minus]5.024\"\>", 
      "5.301`", "0.278`", "1.323`", "0.125`", "\<\"\[Minus]0.716\"\>", 
      "209.285`", "34.9`", "1.012`", "2.469`", "1.25`"},
     {"\<\"\[Minus]30240.922\"\>", "7.156`", "\<\"\[Minus]5.333\"\>", 
      "5.236`", "\<\"\[Minus]0.097\"\>", 
      "4.084`", "\<\"\[Minus]0.220\"\>", "\<\"\[Minus]0.707\"\>", "255.376`", 
      "43.6`", "1.09`", "2.272`", "1.29`"},
     {"\<\"\[Minus]17266.813\"\>", "8.353`", "\<\"\[Minus]5.142\"\>", 
      "5.451`", "0.309`", "1.618`", "0.133`", "\<\"\[Minus]0.714\"\>", 
      "195.258`", "35.3`", "1.026`", "1.94`", "1.27`"},
     {"\<\"\[Minus]22396.415\"\>", "7.075`", "\<\"\[Minus]5.349\"\>", 
      "5.755`", "0.407`", "1.297`", "0.273`", "\<\"\[Minus]0.713\"\>", 
      "239.268`", "43.5`", "1.184`", "1.644`", "1.14`"},
     {"\<\"\[Minus]21452.636\"\>", "6.803`", "\<\"\[Minus]5.073\"\>", 
      "5.531`", "0.458`", "3.234`", "0.353`", "\<\"\[Minus]0.707\"\>", 
      "239.311`", "34.3`", "1.034`", "1.921`", "1.36`"},
     {"\<\"\[Minus]28101.400\"\>", "7.292`", "\<\"\[Minus]5.423\"\>", 
      "5.335`", "\<\"\[Minus]0.088\"\>", 
      "4.378`", "\<\"\[Minus]0.223\"\>", "\<\"\[Minus]0.708\"\>", "227.323`", 
      "45.`", "1.12`", "1.214`", "1.11`"},
     {"\<\"\[Minus]19280.462\"\>", "7.265`", "\<\"\[Minus]5.393\"\>", 
      "5.876`", "0.483`", "1.539`", "0.326`", "\<\"\[Minus]0.707\"\>", 
      "209.242`", "45.4`", "1.175`", "1.699`", "1.`"},
     {"\<\"\[Minus]21452.636\"\>", "7.265`", "\<\"\[Minus]5.505\"\>", 
      "5.911`", "0.406`", "3.041`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "239.311`", "34.3`", "1.034`", "1.571`", "1.05`"},
     {"\<\"\[Minus]19280.543\"\>", "6.803`", "\<\"\[Minus]4.968\"\>", 
      "5.226`", "0.258`", "1.505`", "0.326`", "\<\"\[Minus]0.715\"\>", 
      "209.242`", "45.4`", "1.175`", "1.699`", "1.`"},
     {"\<\"\[Minus]22522.370\"\>", "6.911`", "\<\"\[Minus]5.063\"\>", 
      "5.528`", "0.465`", "3.276`", "0.352`", "\<\"\[Minus]0.713\"\>", 
      "253.337`", "34.2`", "1.022`", "2.45`", "1.38`"},
     {"\<\"\[Minus]20382.821\"\>", "7.265`", "\<\"\[Minus]5.505\"\>", 
      "5.908`", "0.403`", "3.089`", "0.225`", "\<\"\[Minus]0.714\"\>", 
      "225.284`", "35.2`", "1.05`", "1.262`", "0.87`"},
     {"\<\"\[Minus]23498.638\"\>", "7.374`", "\<\"\[Minus]5.703\"\>", 
      "5.961`", "0.257`", "1.288`", "0.269`", "\<\"\[Minus]0.714\"\>", 
      "255.31`", "34.`", "1.069`", "0.637`", "0.86`"},
     {"\<\"\[Minus]21452.500\"\>", "7.183`", "\<\"\[Minus]5.443\"\>", 
      "5.831`", "0.389`", "2.994`", "0.264`", "\<\"\[Minus]0.714\"\>", 
      "239.311`", "35.1`", "1.036`", "\<\"\[Minus]1.842\"\>", "0.83`"},
     {"\<\"\[Minus]29171.025\"\>", "7.129`", "\<\"\[Minus]5.499\"\>", 
      "5.468`", "\<\"\[Minus]0.030\"\>", "3.92`", 
      "0.293`", "\<\"\[Minus]0.712\"\>", "241.35`", "44.2`", "1.1`", "1.248`",
       "0.84`"},
     {"\<\"\[Minus]29171.025\"\>", "7.102`", "\<\"\[Minus]5.569\"\>", 
      "5.499`", "\<\"\[Minus]0.070\"\>", "3.714`", 
      "0.289`", "\<\"\[Minus]0.708\"\>", "241.35`", "44.2`", 
      "1.1`", "\<\"\[Minus]1.003\"\>", "0.84`"},
     {"\<\"\[Minus]28101.400\"\>", "7.319`", "\<\"\[Minus]5.536\"\>", 
      "5.488`", "\<\"\[Minus]0.049\"\>", "4.009`", 
      "0.293`", "\<\"\[Minus]0.702\"\>", "227.323`", "45.`", "1.12`", 
      "0.719`", "0.81`"},
     {"\<\"\[Minus]22396.388\"\>", "7.02`", "\<\"\[Minus]5.281\"\>", "5.594`",
       "0.313`", "0.427`", "0.283`", "\<\"\[Minus]0.702\"\>", "239.268`", 
      "43.5`", "1.184`", "1.294`", "0.76`"},
     {"\<\"\[Minus]29171.025\"\>", "7.047`", "\<\"\[Minus]5.407\"\>", 
      "5.332`", "\<\"\[Minus]0.075\"\>", 
      "4.42`", "\<\"\[Minus]0.226\"\>", "\<\"\[Minus]0.705\"\>", "241.35`", 
      "44.2`", "1.1`", "1.743`", "0.66`"},
     {"\<\"\[Minus]30240.922\"\>", "7.02`", "\<\"\[Minus]5.303\"\>", 
      "5.221`", "\<\"\[Minus]0.082\"\>", 
      "4.043`", "\<\"\[Minus]0.222\"\>", "\<\"\[Minus]0.713\"\>", "255.376`", 
      "43.6`", "1.09`", "2.272`", "0.68`"},
     {"\<\"\[Minus]17266.922\"\>", "7.047`", "\<\"\[Minus]5.243\"\>", 
      "5.765`", "0.522`", "2.553`", "0.378`", "\<\"\[Minus]0.713\"\>", 
      "195.258`", "34.7`", "1.023`", "\<\"\[Minus]1.265\"\>", "0.67`"},
     {"\<\"\[Minus]12104.477\"\>", "7.809`", "\<\"\[Minus]5.971\"\>", "6.34`",
       "0.37`", "1.567`", "0.179`", "\<\"\[Minus]0.707\"\>", "149.233`", 
      "35.2`", "0.938`", "2.241`", "0.59`"},
     {"\<\"\[Minus]31310.547\"\>", "7.02`", "\<\"\[Minus]5.311\"\>", 
      "5.224`", "\<\"\[Minus]0.088\"\>", 
      "4.067`", "\<\"\[Minus]0.219\"\>", "\<\"\[Minus]0.712\"\>", "269.403`", 
      "43.1`", "1.07`", "2.801`", "0.58`"},
     {"\<\"\[Minus]26669.745\"\>", "7.238`", "\<\"\[Minus]5.590\"\>", 
      "5.669`", "0.079`", "3.375`", "0.267`", "\<\"\[Minus]0.712\"\>", 
      "301.38`", "39.8`", "1.093`", "2.81`", "0.46`"},
     {"\<\"\[Minus]19280.462\"\>", "7.211`", "\<\"\[Minus]5.328\"\>", 
      "5.872`", "0.544`", "1.369`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "209.242`", "45.4`", "1.175`", "1.699`", "0.43`"},
     {"\<\"\[Minus]16164.481\"\>", "7.211`", "\<\"\[Minus]5.293\"\>", 
      "5.602`", "0.309`", "1.899`", "0.329`", "\<\"\[Minus]0.708\"\>", 
      "179.216`", "48.`", "1.163`", "1.707`", "0.41`"},
     {"\<\"\[Minus]22522.234\"\>", "7.156`", "\<\"\[Minus]5.435\"\>", 
      "5.827`", "0.391`", "2.947`", "0.265`", "\<\"\[Minus]0.713\"\>", 
      "253.337`", "35.`", "1.023`", "1.777`", "0.38`"},
     {"\<\"\[Minus]30240.922\"\>", "7.02`", "\<\"\[Minus]5.247\"\>", "5.533`",
       "0.286`", "3.05`", "0.3`", "\<\"\[Minus]0.711\"\>", "255.376`", 
      "43.6`", "1.09`", "1.777`", "0.38`"},
     {"\<\"\[Minus]30240.922\"\>", "7.156`", "\<\"\[Minus]5.533\"\>", 
      "5.466`", "\<\"\[Minus]0.067\"\>", "3.751`", 
      "0.285`", "\<\"\[Minus]0.710\"\>", "255.376`", "43.6`", "1.09`", 
      "1.777`", "0.38`"},
     {"\<\"\[Minus]20382.766\"\>", "7.319`", "\<\"\[Minus]5.524\"\>", 
      "5.912`", "0.388`", "3.136`", "0.245`", "\<\"\[Minus]0.719\"\>", 
      "225.284`", "34.3`", "1.048`", "1.042`", "0.33`"},
     {"\<\"\[Minus]21452.609\"\>", "7.129`", "\<\"\[Minus]5.410\"\>", 
      "5.794`", "0.384`", "2.979`", "0.26`", "\<\"\[Minus]0.713\"\>", 
      "239.311`", "35.1`", "1.036`", "1.273`", "0.23`"},
     {"\<\"\[Minus]20382.739\"\>", "7.238`", "\<\"\[Minus]5.481\"\>", 
      "5.872`", "0.39`", "3.237`", "0.249`", "\<\"\[Minus]0.713\"\>", 
      "225.284`", "35.2`", "1.05`", "0.744`", "0.03`"},
     {"\<\"\[Minus]19312.923\"\>", "7.319`", "\<\"\[Minus]5.523\"\>", 
      "5.914`", "0.391`", "3.203`", "0.253`", "\<\"\[Minus]0.707\"\>", 
      "211.258`", "35.4`", "1.067`", "0.215`", "0.`"},
     {"\<\"\[Minus]19312.787\"\>", "7.456`", "\<\"\[Minus]5.719\"\>", 
      "6.007`", "0.288`", "1.449`", "0.305`", "\<\"\[Minus]0.710\"\>", 
      "211.258`", "35.4`", 
      "1.067`", "\<\"\[Minus]3.080\"\>", "\<\"\[Minus]0.030\"\>"},
     {"\<\"\[Minus]17266.759\"\>", "7.292`", "\<\"\[Minus]5.444\"\>", 
      "5.849`", "0.405`", "3.673`", "0.308`", "\<\"\[Minus]0.717\"\>", 
      "195.258`", "34.7`", "1.023`", "0.435`", "\<\"\[Minus]0.060\"\>"},
     {"\<\"\[Minus]16196.943\"\>", "7.292`", "\<\"\[Minus]5.443\"\>", 
      "5.848`", "0.406`", "3.724`", "0.307`", "\<\"\[Minus]0.713\"\>", 
      "181.232`", "36.`", "1.041`", "0.126`", "\<\"\[Minus]0.670\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.7400619188218*^9, 3.740061920585182*^9}, {
  3.7400619683850822`*^9, 3.740061969961441*^9}, {3.740062940858416*^9, 
  3.7400629425861797`*^9}},
 CellLabel->
  "Out[461]=",ExpressionUUID->"872ab1e2-7779-4814-98e4-2b3b6db9ed7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"headers", ",", "gooddata"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"First", "@", "gooddata"}], ",", 
    RowBox[{"Rest", "@", "gooddata"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.740062577651519*^9, 3.740062624409369*^9}},
 CellLabel->
  "In[462]:=",ExpressionUUID->"ed03d09f-6b8c-4baf-bac6-0b7c6442cf4c"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"ET\"\>", ",", "\<\"IP\"\>", ",", "\<\"EHOMO\"\>", 
      ",", "\<\"\[Eta]\"\>", ",", "\<\"ELUMO\"\>", ",", "\<\"DM\"\>", 
      ",", "\<\"Qp\"\>", ",", "\<\"Qmin\"\>", ",", "\<\"MW\"\>", 
      ",", "\<\"\[Gamma]\"\>", ",", "\<\"D\"\>", ",", "\<\"logP\"\>", 
      ",", "\<\"logMU\"\>"}], "}"}], ",", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"\[Minus]82328.726\"\>", "7.374`", "\<\"\[Minus]5.682\"\>", 
        "5.522`", "\<\"\[Minus]0.160\"\>", "3.242`", 
        "0.046`", "\<\"\[Minus]0.707\"\>", "274.154`", "37.9`", "1.324`", 
        "2.455`", "2.72`"},
       {"\<\"\[Minus]30241.000\"\>", "7.125`", "\<\"\[Minus]5.428\"\>", 
        "5.258`", "\<\"\[Minus]0.170\"\>", "1.996`", 
        "0.135`", "\<\"\[Minus]0.708\"\>", "255.376`", "42.6`", "1.08`", 
        "2.452`", "1.96`"},
       {"\<\"\[Minus]19406.400\"\>", "6.731`", "\<\"\[Minus]5.029\"\>", 
        "5.302`", "0.273`", "1.234`", "0.126`", "\<\"\[Minus]0.712\"\>", 
        "223.311`", "33.9`", "0.998`", "2.778`", "2.02`"},
       {"\<\"\[Minus]20476.100\"\>", "6.724`", "\<\"\[Minus]5.037\"\>", 
        "5.295`", "0.258`", "1.283`", "0.126`", "\<\"\[Minus]0.709\"\>", 
        "237.338`", "33.9`", "0.998`", "3.307`", "1.95`"},
       {"\<\"\[Minus]18336.700\"\>", "6.765`", "\<\"\[Minus]5.009\"\>", 
        "5.282`", "0.273`", "1.117`", "0.127`", "\<\"\[Minus]0.710\"\>", 
        "209.285`", "34.2`", "1.01`", "2.249`", "1.9`"},
       {"\<\"\[Minus]31310.656\"\>", "7.238`", "\<\"\[Minus]4.780\"\>", 
        "5.066`", "0.286`", 
        "2.498`", "\<\"\[Minus]0.150\"\>", "\<\"\[Minus]0.712\"\>", 
        "269.403`", "41.2`", "1.07`", "2.761`", "1.71`"},
       {"\<\"\[Minus]86156.656\"\>", "7.374`", "\<\"\[Minus]5.687\"\>", 
        "5.527`", "\<\"\[Minus]0.160\"\>", "3.271`", 
        "0.046`", "\<\"\[Minus]0.709\"\>", "260.128`", "39.5`", "1.368`", 
        "2.146`", "1.69`"},
       {"\<\"\[Minus]21545.885\"\>", "6.721`", "\<\"\[Minus]5.025\"\>", 
        "5.3`", "0.275`", "1.25`", "0.122`", "\<\"\[Minus]0.713\"\>", 
        "251.365`", "33.9`", "0.979`", "3.386`", "1.68`"},
       {"\<\"\[Minus]29171.207\"\>", "7.121`", "\<\"\[Minus]5.453\"\>", 
        "5.295`", "\<\"\[Minus]0.158\"\>", 
        "2.115`", "\<\"\[Minus]0.131\"\>", "\<\"\[Minus]0.707\"\>", "241.35`",
         "43.1`", "1.1`", "1.923`", "1.66`"},
       {"\<\"\[Minus]29171.025\"\>", "6.993`", "\<\"\[Minus]5.327\"\>", 
        "5.234`", "\<\"\[Minus]0.093\"\>", 
        "4.017`", "\<\"\[Minus]0.219\"\>", "\<\"\[Minus]0.713\"\>", "241.35`",
         "44.2`", "1.1`", "1.743`", "1.36`"},
       {"\<\"\[Minus]20382.821\"\>", "6.83`", "\<\"\[Minus]5.101\"\>", 
        "5.576`", "0.475`", "3.159`", "0.349`", "\<\"\[Minus]0.713\"\>", 
        "225.284`", "34.3`", "1.048`", "1.392`", "1.33`"},
       {"\<\"\[Minus]18336.601\"\>", "6.802`", "\<\"\[Minus]5.024\"\>", 
        "5.301`", "0.278`", "1.323`", "0.125`", "\<\"\[Minus]0.716\"\>", 
        "209.285`", "34.9`", "1.012`", "2.469`", "1.25`"},
       {"\<\"\[Minus]30240.922\"\>", "7.156`", "\<\"\[Minus]5.333\"\>", 
        "5.236`", "\<\"\[Minus]0.097\"\>", 
        "4.084`", "\<\"\[Minus]0.220\"\>", "\<\"\[Minus]0.707\"\>", 
        "255.376`", "43.6`", "1.09`", "2.272`", "1.29`"},
       {"\<\"\[Minus]17266.813\"\>", "8.353`", "\<\"\[Minus]5.142\"\>", 
        "5.451`", "0.309`", "1.618`", "0.133`", "\<\"\[Minus]0.714\"\>", 
        "195.258`", "35.3`", "1.026`", "1.94`", "1.27`"},
       {"\<\"\[Minus]22396.415\"\>", "7.075`", "\<\"\[Minus]5.349\"\>", 
        "5.755`", "0.407`", "1.297`", "0.273`", "\<\"\[Minus]0.713\"\>", 
        "239.268`", "43.5`", "1.184`", "1.644`", "1.14`"},
       {"\<\"\[Minus]21452.636\"\>", "6.803`", "\<\"\[Minus]5.073\"\>", 
        "5.531`", "0.458`", "3.234`", "0.353`", "\<\"\[Minus]0.707\"\>", 
        "239.311`", "34.3`", "1.034`", "1.921`", "1.36`"},
       {"\<\"\[Minus]28101.400\"\>", "7.292`", "\<\"\[Minus]5.423\"\>", 
        "5.335`", "\<\"\[Minus]0.088\"\>", 
        "4.378`", "\<\"\[Minus]0.223\"\>", "\<\"\[Minus]0.708\"\>", 
        "227.323`", "45.`", "1.12`", "1.214`", "1.11`"},
       {"\<\"\[Minus]19280.462\"\>", "7.265`", "\<\"\[Minus]5.393\"\>", 
        "5.876`", "0.483`", "1.539`", "0.326`", "\<\"\[Minus]0.707\"\>", 
        "209.242`", "45.4`", "1.175`", "1.699`", "1.`"},
       {"\<\"\[Minus]21452.636\"\>", "7.265`", "\<\"\[Minus]5.505\"\>", 
        "5.911`", "0.406`", "3.041`", "0.265`", "\<\"\[Minus]0.713\"\>", 
        "239.311`", "34.3`", "1.034`", "1.571`", "1.05`"},
       {"\<\"\[Minus]19280.543\"\>", "6.803`", "\<\"\[Minus]4.968\"\>", 
        "5.226`", "0.258`", "1.505`", "0.326`", "\<\"\[Minus]0.715\"\>", 
        "209.242`", "45.4`", "1.175`", "1.699`", "1.`"},
       {"\<\"\[Minus]22522.370\"\>", "6.911`", "\<\"\[Minus]5.063\"\>", 
        "5.528`", "0.465`", "3.276`", "0.352`", "\<\"\[Minus]0.713\"\>", 
        "253.337`", "34.2`", "1.022`", "2.45`", "1.38`"},
       {"\<\"\[Minus]20382.821\"\>", "7.265`", "\<\"\[Minus]5.505\"\>", 
        "5.908`", "0.403`", "3.089`", "0.225`", "\<\"\[Minus]0.714\"\>", 
        "225.284`", "35.2`", "1.05`", "1.262`", "0.87`"},
       {"\<\"\[Minus]23498.638\"\>", "7.374`", "\<\"\[Minus]5.703\"\>", 
        "5.961`", "0.257`", "1.288`", "0.269`", "\<\"\[Minus]0.714\"\>", 
        "255.31`", "34.`", "1.069`", "0.637`", "0.86`"},
       {"\<\"\[Minus]21452.500\"\>", "7.183`", "\<\"\[Minus]5.443\"\>", 
        "5.831`", "0.389`", "2.994`", "0.264`", "\<\"\[Minus]0.714\"\>", 
        "239.311`", "35.1`", "1.036`", "\<\"\[Minus]1.842\"\>", "0.83`"},
       {"\<\"\[Minus]29171.025\"\>", "7.129`", "\<\"\[Minus]5.499\"\>", 
        "5.468`", "\<\"\[Minus]0.030\"\>", "3.92`", 
        "0.293`", "\<\"\[Minus]0.712\"\>", "241.35`", "44.2`", "1.1`", 
        "1.248`", "0.84`"},
       {"\<\"\[Minus]29171.025\"\>", "7.102`", "\<\"\[Minus]5.569\"\>", 
        "5.499`", "\<\"\[Minus]0.070\"\>", "3.714`", 
        "0.289`", "\<\"\[Minus]0.708\"\>", "241.35`", "44.2`", 
        "1.1`", "\<\"\[Minus]1.003\"\>", "0.84`"},
       {"\<\"\[Minus]28101.400\"\>", "7.319`", "\<\"\[Minus]5.536\"\>", 
        "5.488`", "\<\"\[Minus]0.049\"\>", "4.009`", 
        "0.293`", "\<\"\[Minus]0.702\"\>", "227.323`", "45.`", "1.12`", 
        "0.719`", "0.81`"},
       {"\<\"\[Minus]22396.388\"\>", "7.02`", "\<\"\[Minus]5.281\"\>", 
        "5.594`", "0.313`", "0.427`", "0.283`", "\<\"\[Minus]0.702\"\>", 
        "239.268`", "43.5`", "1.184`", "1.294`", "0.76`"},
       {"\<\"\[Minus]29171.025\"\>", "7.047`", "\<\"\[Minus]5.407\"\>", 
        "5.332`", "\<\"\[Minus]0.075\"\>", 
        "4.42`", "\<\"\[Minus]0.226\"\>", "\<\"\[Minus]0.705\"\>", "241.35`", 
        "44.2`", "1.1`", "1.743`", "0.66`"},
       {"\<\"\[Minus]30240.922\"\>", "7.02`", "\<\"\[Minus]5.303\"\>", 
        "5.221`", "\<\"\[Minus]0.082\"\>", 
        "4.043`", "\<\"\[Minus]0.222\"\>", "\<\"\[Minus]0.713\"\>", 
        "255.376`", "43.6`", "1.09`", "2.272`", "0.68`"},
       {"\<\"\[Minus]17266.922\"\>", "7.047`", "\<\"\[Minus]5.243\"\>", 
        "5.765`", "0.522`", "2.553`", "0.378`", "\<\"\[Minus]0.713\"\>", 
        "195.258`", "34.7`", "1.023`", "\<\"\[Minus]1.265\"\>", "0.67`"},
       {"\<\"\[Minus]12104.477\"\>", "7.809`", "\<\"\[Minus]5.971\"\>", 
        "6.34`", "0.37`", "1.567`", "0.179`", "\<\"\[Minus]0.707\"\>", 
        "149.233`", "35.2`", "0.938`", "2.241`", "0.59`"},
       {"\<\"\[Minus]31310.547\"\>", "7.02`", "\<\"\[Minus]5.311\"\>", 
        "5.224`", "\<\"\[Minus]0.088\"\>", 
        "4.067`", "\<\"\[Minus]0.219\"\>", "\<\"\[Minus]0.712\"\>", 
        "269.403`", "43.1`", "1.07`", "2.801`", "0.58`"},
       {"\<\"\[Minus]26669.745\"\>", "7.238`", "\<\"\[Minus]5.590\"\>", 
        "5.669`", "0.079`", "3.375`", "0.267`", "\<\"\[Minus]0.712\"\>", 
        "301.38`", "39.8`", "1.093`", "2.81`", "0.46`"},
       {"\<\"\[Minus]19280.462\"\>", "7.211`", "\<\"\[Minus]5.328\"\>", 
        "5.872`", "0.544`", "1.369`", "0.265`", "\<\"\[Minus]0.713\"\>", 
        "209.242`", "45.4`", "1.175`", "1.699`", "0.43`"},
       {"\<\"\[Minus]16164.481\"\>", "7.211`", "\<\"\[Minus]5.293\"\>", 
        "5.602`", "0.309`", "1.899`", "0.329`", "\<\"\[Minus]0.708\"\>", 
        "179.216`", "48.`", "1.163`", "1.707`", "0.41`"},
       {"\<\"\[Minus]22522.234\"\>", "7.156`", "\<\"\[Minus]5.435\"\>", 
        "5.827`", "0.391`", "2.947`", "0.265`", "\<\"\[Minus]0.713\"\>", 
        "253.337`", "35.`", "1.023`", "1.777`", "0.38`"},
       {"\<\"\[Minus]30240.922\"\>", "7.02`", "\<\"\[Minus]5.247\"\>", 
        "5.533`", "0.286`", "3.05`", "0.3`", "\<\"\[Minus]0.711\"\>", 
        "255.376`", "43.6`", "1.09`", "1.777`", "0.38`"},
       {"\<\"\[Minus]30240.922\"\>", "7.156`", "\<\"\[Minus]5.533\"\>", 
        "5.466`", "\<\"\[Minus]0.067\"\>", "3.751`", 
        "0.285`", "\<\"\[Minus]0.710\"\>", "255.376`", "43.6`", "1.09`", 
        "1.777`", "0.38`"},
       {"\<\"\[Minus]20382.766\"\>", "7.319`", "\<\"\[Minus]5.524\"\>", 
        "5.912`", "0.388`", "3.136`", "0.245`", "\<\"\[Minus]0.719\"\>", 
        "225.284`", "34.3`", "1.048`", "1.042`", "0.33`"},
       {"\<\"\[Minus]21452.609\"\>", "7.129`", "\<\"\[Minus]5.410\"\>", 
        "5.794`", "0.384`", "2.979`", "0.26`", "\<\"\[Minus]0.713\"\>", 
        "239.311`", "35.1`", "1.036`", "1.273`", "0.23`"},
       {"\<\"\[Minus]20382.739\"\>", "7.238`", "\<\"\[Minus]5.481\"\>", 
        "5.872`", "0.39`", "3.237`", "0.249`", "\<\"\[Minus]0.713\"\>", 
        "225.284`", "35.2`", "1.05`", "0.744`", "0.03`"},
       {"\<\"\[Minus]19312.923\"\>", "7.319`", "\<\"\[Minus]5.523\"\>", 
        "5.914`", "0.391`", "3.203`", "0.253`", "\<\"\[Minus]0.707\"\>", 
        "211.258`", "35.4`", "1.067`", "0.215`", "0.`"},
       {"\<\"\[Minus]19312.787\"\>", "7.456`", "\<\"\[Minus]5.719\"\>", 
        "6.007`", "0.288`", "1.449`", "0.305`", "\<\"\[Minus]0.710\"\>", 
        "211.258`", "35.4`", 
        "1.067`", "\<\"\[Minus]3.080\"\>", "\<\"\[Minus]0.030\"\>"},
       {"\<\"\[Minus]17266.759\"\>", "7.292`", "\<\"\[Minus]5.444\"\>", 
        "5.849`", "0.405`", "3.673`", "0.308`", "\<\"\[Minus]0.717\"\>", 
        "195.258`", "34.7`", "1.023`", "0.435`", "\<\"\[Minus]0.060\"\>"},
       {"\<\"\[Minus]16196.943\"\>", "7.292`", "\<\"\[Minus]5.443\"\>", 
        "5.848`", "0.406`", "3.724`", "0.307`", "\<\"\[Minus]0.713\"\>", 
        "181.232`", "36.`", "1.041`", "0.126`", "\<\"\[Minus]0.670\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.740062626235284*^9, 3.7400626356308117`*^9}, {
  3.740062948205874*^9, 3.740062949911436*^9}},
 CellLabel->
  "Out[462]=",ExpressionUUID->"21dd3ce3-7468-4ae8-94f2-5eee8ea77bcb"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gooddata", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"ToExpression", ",", "gooddata", ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.740062886243019*^9, 3.7400629160630093`*^9}},
 CellLabel->
  "In[463]:=",ExpressionUUID->"6ab064c4-6d85-4a96-94ef-41929746f1fa"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "82328.726`"}], "7.374`", 
      RowBox[{"-", "5.682`"}], "5.522`", 
      RowBox[{"-", "0.16`"}], "3.242`", "0.046`", 
      RowBox[{"-", "0.707`"}], "274.154`", "37.9`", "1.324`", "2.455`", 
      "2.72`"},
     {
      RowBox[{"-", "30241.`"}], "7.125`", 
      RowBox[{"-", "5.428`"}], "5.258`", 
      RowBox[{"-", "0.17`"}], "1.996`", "0.135`", 
      RowBox[{"-", "0.708`"}], "255.376`", "42.6`", "1.08`", "2.452`", 
      "1.96`"},
     {
      RowBox[{"-", "19406.4`"}], "6.731`", 
      RowBox[{"-", "5.029`"}], "5.302`", "0.273`", "1.234`", "0.126`", 
      RowBox[{"-", "0.712`"}], "223.311`", "33.9`", "0.998`", "2.778`", 
      "2.02`"},
     {
      RowBox[{"-", "20476.1`"}], "6.724`", 
      RowBox[{"-", "5.037`"}], "5.295`", "0.258`", "1.283`", "0.126`", 
      RowBox[{"-", "0.709`"}], "237.338`", "33.9`", "0.998`", "3.307`", 
      "1.95`"},
     {
      RowBox[{"-", "18336.7`"}], "6.765`", 
      RowBox[{"-", "5.009`"}], "5.282`", "0.273`", "1.117`", "0.127`", 
      RowBox[{"-", "0.71`"}], "209.285`", "34.2`", "1.01`", "2.249`", 
      "1.9`"},
     {
      RowBox[{"-", "31310.656`"}], "7.238`", 
      RowBox[{"-", "4.78`"}], "5.066`", "0.286`", "2.498`", 
      RowBox[{"-", "0.15`"}], 
      RowBox[{"-", "0.712`"}], "269.403`", "41.2`", "1.07`", "2.761`", 
      "1.71`"},
     {
      RowBox[{"-", "86156.656`"}], "7.374`", 
      RowBox[{"-", "5.687`"}], "5.527`", 
      RowBox[{"-", "0.16`"}], "3.271`", "0.046`", 
      RowBox[{"-", "0.709`"}], "260.128`", "39.5`", "1.368`", "2.146`", 
      "1.69`"},
     {
      RowBox[{"-", "21545.885`"}], "6.721`", 
      RowBox[{"-", "5.025`"}], "5.3`", "0.275`", "1.25`", "0.122`", 
      RowBox[{"-", "0.713`"}], "251.365`", "33.9`", "0.979`", "3.386`", 
      "1.68`"},
     {
      RowBox[{"-", "29171.207`"}], "7.121`", 
      RowBox[{"-", "5.453`"}], "5.295`", 
      RowBox[{"-", "0.158`"}], "2.115`", 
      RowBox[{"-", "0.131`"}], 
      RowBox[{"-", "0.707`"}], "241.35`", "43.1`", "1.1`", "1.923`", 
      "1.66`"},
     {
      RowBox[{"-", "29171.025`"}], "6.993`", 
      RowBox[{"-", "5.327`"}], "5.234`", 
      RowBox[{"-", "0.093`"}], "4.017`", 
      RowBox[{"-", "0.219`"}], 
      RowBox[{"-", "0.713`"}], "241.35`", "44.2`", "1.1`", "1.743`", 
      "1.36`"},
     {
      RowBox[{"-", "20382.821`"}], "6.83`", 
      RowBox[{"-", "5.101`"}], "5.576`", "0.475`", "3.159`", "0.349`", 
      RowBox[{"-", "0.713`"}], "225.284`", "34.3`", "1.048`", "1.392`", 
      "1.33`"},
     {
      RowBox[{"-", "18336.601`"}], "6.802`", 
      RowBox[{"-", "5.024`"}], "5.301`", "0.278`", "1.323`", "0.125`", 
      RowBox[{"-", "0.716`"}], "209.285`", "34.9`", "1.012`", "2.469`", 
      "1.25`"},
     {
      RowBox[{"-", "30240.922`"}], "7.156`", 
      RowBox[{"-", "5.333`"}], "5.236`", 
      RowBox[{"-", "0.097`"}], "4.084`", 
      RowBox[{"-", "0.22`"}], 
      RowBox[{"-", "0.707`"}], "255.376`", "43.6`", "1.09`", "2.272`", 
      "1.29`"},
     {
      RowBox[{"-", "17266.813`"}], "8.353`", 
      RowBox[{"-", "5.142`"}], "5.451`", "0.309`", "1.618`", "0.133`", 
      RowBox[{"-", "0.714`"}], "195.258`", "35.3`", "1.026`", "1.94`", 
      "1.27`"},
     {
      RowBox[{"-", "22396.415`"}], "7.075`", 
      RowBox[{"-", "5.349`"}], "5.755`", "0.407`", "1.297`", "0.273`", 
      RowBox[{"-", "0.713`"}], "239.268`", "43.5`", "1.184`", "1.644`", 
      "1.14`"},
     {
      RowBox[{"-", "21452.636`"}], "6.803`", 
      RowBox[{"-", "5.073`"}], "5.531`", "0.458`", "3.234`", "0.353`", 
      RowBox[{"-", "0.707`"}], "239.311`", "34.3`", "1.034`", "1.921`", 
      "1.36`"},
     {
      RowBox[{"-", "28101.4`"}], "7.292`", 
      RowBox[{"-", "5.423`"}], "5.335`", 
      RowBox[{"-", "0.088`"}], "4.378`", 
      RowBox[{"-", "0.223`"}], 
      RowBox[{"-", "0.708`"}], "227.323`", "45.`", "1.12`", "1.214`", "1.11`"},
     {
      RowBox[{"-", "19280.462`"}], "7.265`", 
      RowBox[{"-", "5.393`"}], "5.876`", "0.483`", "1.539`", "0.326`", 
      RowBox[{"-", "0.707`"}], "209.242`", "45.4`", "1.175`", "1.699`", "1.`"},
     {
      RowBox[{"-", "21452.636`"}], "7.265`", 
      RowBox[{"-", "5.505`"}], "5.911`", "0.406`", "3.041`", "0.265`", 
      RowBox[{"-", "0.713`"}], "239.311`", "34.3`", "1.034`", "1.571`", 
      "1.05`"},
     {
      RowBox[{"-", "19280.543`"}], "6.803`", 
      RowBox[{"-", "4.968`"}], "5.226`", "0.258`", "1.505`", "0.326`", 
      RowBox[{"-", "0.715`"}], "209.242`", "45.4`", "1.175`", "1.699`", "1.`"},
     {
      RowBox[{"-", "22522.37`"}], "6.911`", 
      RowBox[{"-", "5.063`"}], "5.528`", "0.465`", "3.276`", "0.352`", 
      RowBox[{"-", "0.713`"}], "253.337`", "34.2`", "1.022`", "2.45`", 
      "1.38`"},
     {
      RowBox[{"-", "20382.821`"}], "7.265`", 
      RowBox[{"-", "5.505`"}], "5.908`", "0.403`", "3.089`", "0.225`", 
      RowBox[{"-", "0.714`"}], "225.284`", "35.2`", "1.05`", "1.262`", 
      "0.87`"},
     {
      RowBox[{"-", "23498.638`"}], "7.374`", 
      RowBox[{"-", "5.703`"}], "5.961`", "0.257`", "1.288`", "0.269`", 
      RowBox[{"-", "0.714`"}], "255.31`", "34.`", "1.069`", "0.637`", "0.86`"},
     {
      RowBox[{"-", "21452.5`"}], "7.183`", 
      RowBox[{"-", "5.443`"}], "5.831`", "0.389`", "2.994`", "0.264`", 
      RowBox[{"-", "0.714`"}], "239.311`", "35.1`", "1.036`", 
      RowBox[{"-", "1.842`"}], "0.83`"},
     {
      RowBox[{"-", "29171.025`"}], "7.129`", 
      RowBox[{"-", "5.499`"}], "5.468`", 
      RowBox[{"-", "0.03`"}], "3.92`", "0.293`", 
      RowBox[{"-", "0.712`"}], "241.35`", "44.2`", "1.1`", "1.248`", 
      "0.84`"},
     {
      RowBox[{"-", "29171.025`"}], "7.102`", 
      RowBox[{"-", "5.569`"}], "5.499`", 
      RowBox[{"-", "0.07`"}], "3.714`", "0.289`", 
      RowBox[{"-", "0.708`"}], "241.35`", "44.2`", "1.1`", 
      RowBox[{"-", "1.003`"}], "0.84`"},
     {
      RowBox[{"-", "28101.4`"}], "7.319`", 
      RowBox[{"-", "5.536`"}], "5.488`", 
      RowBox[{"-", "0.049`"}], "4.009`", "0.293`", 
      RowBox[{"-", "0.702`"}], "227.323`", "45.`", "1.12`", "0.719`", "0.81`"},
     {
      RowBox[{"-", "22396.388`"}], "7.02`", 
      RowBox[{"-", "5.281`"}], "5.594`", "0.313`", "0.427`", "0.283`", 
      RowBox[{"-", "0.702`"}], "239.268`", "43.5`", "1.184`", "1.294`", 
      "0.76`"},
     {
      RowBox[{"-", "29171.025`"}], "7.047`", 
      RowBox[{"-", "5.407`"}], "5.332`", 
      RowBox[{"-", "0.075`"}], "4.42`", 
      RowBox[{"-", "0.226`"}], 
      RowBox[{"-", "0.705`"}], "241.35`", "44.2`", "1.1`", "1.743`", 
      "0.66`"},
     {
      RowBox[{"-", "30240.922`"}], "7.02`", 
      RowBox[{"-", "5.303`"}], "5.221`", 
      RowBox[{"-", "0.082`"}], "4.043`", 
      RowBox[{"-", "0.222`"}], 
      RowBox[{"-", "0.713`"}], "255.376`", "43.6`", "1.09`", "2.272`", 
      "0.68`"},
     {
      RowBox[{"-", "17266.922`"}], "7.047`", 
      RowBox[{"-", "5.243`"}], "5.765`", "0.522`", "2.553`", "0.378`", 
      RowBox[{"-", "0.713`"}], "195.258`", "34.7`", "1.023`", 
      RowBox[{"-", "1.265`"}], "0.67`"},
     {
      RowBox[{"-", "12104.477`"}], "7.809`", 
      RowBox[{"-", "5.971`"}], "6.34`", "0.37`", "1.567`", "0.179`", 
      RowBox[{"-", "0.707`"}], "149.233`", "35.2`", "0.938`", "2.241`", 
      "0.59`"},
     {
      RowBox[{"-", "31310.547`"}], "7.02`", 
      RowBox[{"-", "5.311`"}], "5.224`", 
      RowBox[{"-", "0.088`"}], "4.067`", 
      RowBox[{"-", "0.219`"}], 
      RowBox[{"-", "0.712`"}], "269.403`", "43.1`", "1.07`", "2.801`", 
      "0.58`"},
     {
      RowBox[{"-", "26669.745`"}], "7.238`", 
      RowBox[{"-", "5.59`"}], "5.669`", "0.079`", "3.375`", "0.267`", 
      RowBox[{"-", "0.712`"}], "301.38`", "39.8`", "1.093`", "2.81`", "0.46`"},
     {
      RowBox[{"-", "19280.462`"}], "7.211`", 
      RowBox[{"-", "5.328`"}], "5.872`", "0.544`", "1.369`", "0.265`", 
      RowBox[{"-", "0.713`"}], "209.242`", "45.4`", "1.175`", "1.699`", 
      "0.43`"},
     {
      RowBox[{"-", "16164.481`"}], "7.211`", 
      RowBox[{"-", "5.293`"}], "5.602`", "0.309`", "1.899`", "0.329`", 
      RowBox[{"-", "0.708`"}], "179.216`", "48.`", "1.163`", "1.707`", 
      "0.41`"},
     {
      RowBox[{"-", "22522.234`"}], "7.156`", 
      RowBox[{"-", "5.435`"}], "5.827`", "0.391`", "2.947`", "0.265`", 
      RowBox[{"-", "0.713`"}], "253.337`", "35.`", "1.023`", "1.777`", 
      "0.38`"},
     {
      RowBox[{"-", "30240.922`"}], "7.02`", 
      RowBox[{"-", "5.247`"}], "5.533`", "0.286`", "3.05`", "0.3`", 
      RowBox[{"-", "0.711`"}], "255.376`", "43.6`", "1.09`", "1.777`", 
      "0.38`"},
     {
      RowBox[{"-", "30240.922`"}], "7.156`", 
      RowBox[{"-", "5.533`"}], "5.466`", 
      RowBox[{"-", "0.067`"}], "3.751`", "0.285`", 
      RowBox[{"-", "0.71`"}], "255.376`", "43.6`", "1.09`", "1.777`", "0.38`"},
     {
      RowBox[{"-", "20382.766`"}], "7.319`", 
      RowBox[{"-", "5.524`"}], "5.912`", "0.388`", "3.136`", "0.245`", 
      RowBox[{"-", "0.719`"}], "225.284`", "34.3`", "1.048`", "1.042`", 
      "0.33`"},
     {
      RowBox[{"-", "21452.609`"}], "7.129`", 
      RowBox[{"-", "5.41`"}], "5.794`", "0.384`", "2.979`", "0.26`", 
      RowBox[{"-", "0.713`"}], "239.311`", "35.1`", "1.036`", "1.273`", 
      "0.23`"},
     {
      RowBox[{"-", "20382.739`"}], "7.238`", 
      RowBox[{"-", "5.481`"}], "5.872`", "0.39`", "3.237`", "0.249`", 
      RowBox[{"-", "0.713`"}], "225.284`", "35.2`", "1.05`", "0.744`", 
      "0.03`"},
     {
      RowBox[{"-", "19312.923`"}], "7.319`", 
      RowBox[{"-", "5.523`"}], "5.914`", "0.391`", "3.203`", "0.253`", 
      RowBox[{"-", "0.707`"}], "211.258`", "35.4`", "1.067`", "0.215`", "0.`"},
     {
      RowBox[{"-", "19312.787`"}], "7.456`", 
      RowBox[{"-", "5.719`"}], "6.007`", "0.288`", "1.449`", "0.305`", 
      RowBox[{"-", "0.71`"}], "211.258`", "35.4`", "1.067`", 
      RowBox[{"-", "3.08`"}], 
      RowBox[{"-", "0.03`"}]},
     {
      RowBox[{"-", "17266.759`"}], "7.292`", 
      RowBox[{"-", "5.444`"}], "5.849`", "0.405`", "3.673`", "0.308`", 
      RowBox[{"-", "0.717`"}], "195.258`", "34.7`", "1.023`", "0.435`", 
      RowBox[{"-", "0.06`"}]},
     {
      RowBox[{"-", "16196.943`"}], "7.292`", 
      RowBox[{"-", "5.443`"}], "5.848`", "0.406`", "3.724`", "0.307`", 
      RowBox[{"-", "0.713`"}], "181.232`", "36.`", "1.041`", "0.126`", 
      RowBox[{"-", "0.67`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.7400629216238813`*^9, 3.7400629545650053`*^9}},
 CellLabel->
  "Out[463]=",ExpressionUUID->"58dd9b2f-91d3-4055-9eaa-0a020542acc7"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"gooddata", ",", "logMU"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Most", "/@", "gooddata"}], ",", 
    RowBox[{"Last", "/@", "gooddata"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.740062737088594*^9, 3.7400627797904873`*^9}},
 CellLabel->
  "In[464]:=",ExpressionUUID->"a2f6a113-e665-4773-80a5-0955f8e5876b"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "82328.726`"}], ",", "7.374`", ",", 
        RowBox[{"-", "5.682`"}], ",", "5.522`", ",", 
        RowBox[{"-", "0.16`"}], ",", "3.242`", ",", "0.046`", ",", 
        RowBox[{"-", "0.707`"}], ",", "274.154`", ",", "37.9`", ",", "1.324`",
         ",", "2.455`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "30241.`"}], ",", "7.125`", ",", 
        RowBox[{"-", "5.428`"}], ",", "5.258`", ",", 
        RowBox[{"-", "0.17`"}], ",", "1.996`", ",", "0.135`", ",", 
        RowBox[{"-", "0.708`"}], ",", "255.376`", ",", "42.6`", ",", "1.08`", 
        ",", "2.452`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "19406.4`"}], ",", "6.731`", ",", 
        RowBox[{"-", "5.029`"}], ",", "5.302`", ",", "0.273`", ",", "1.234`", 
        ",", "0.126`", ",", 
        RowBox[{"-", "0.712`"}], ",", "223.311`", ",", "33.9`", ",", "0.998`",
         ",", "2.778`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "20476.1`"}], ",", "6.724`", ",", 
        RowBox[{"-", "5.037`"}], ",", "5.295`", ",", "0.258`", ",", "1.283`", 
        ",", "0.126`", ",", 
        RowBox[{"-", "0.709`"}], ",", "237.338`", ",", "33.9`", ",", "0.998`",
         ",", "3.307`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "18336.7`"}], ",", "6.765`", ",", 
        RowBox[{"-", "5.009`"}], ",", "5.282`", ",", "0.273`", ",", "1.117`", 
        ",", "0.127`", ",", 
        RowBox[{"-", "0.71`"}], ",", "209.285`", ",", "34.2`", ",", "1.01`", 
        ",", "2.249`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "31310.656`"}], ",", "7.238`", ",", 
        RowBox[{"-", "4.78`"}], ",", "5.066`", ",", "0.286`", ",", "2.498`", 
        ",", 
        RowBox[{"-", "0.15`"}], ",", 
        RowBox[{"-", "0.712`"}], ",", "269.403`", ",", "41.2`", ",", "1.07`", 
        ",", "2.761`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "86156.656`"}], ",", "7.374`", ",", 
        RowBox[{"-", "5.687`"}], ",", "5.527`", ",", 
        RowBox[{"-", "0.16`"}], ",", "3.271`", ",", "0.046`", ",", 
        RowBox[{"-", "0.709`"}], ",", "260.128`", ",", "39.5`", ",", "1.368`",
         ",", "2.146`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "21545.885`"}], ",", "6.721`", ",", 
        RowBox[{"-", "5.025`"}], ",", "5.3`", ",", "0.275`", ",", "1.25`", 
        ",", "0.122`", ",", 
        RowBox[{"-", "0.713`"}], ",", "251.365`", ",", "33.9`", ",", "0.979`",
         ",", "3.386`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "29171.207`"}], ",", "7.121`", ",", 
        RowBox[{"-", "5.453`"}], ",", "5.295`", ",", 
        RowBox[{"-", "0.158`"}], ",", "2.115`", ",", 
        RowBox[{"-", "0.131`"}], ",", 
        RowBox[{"-", "0.707`"}], ",", "241.35`", ",", "43.1`", ",", "1.1`", 
        ",", "1.923`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "29171.025`"}], ",", "6.993`", ",", 
        RowBox[{"-", "5.327`"}], ",", "5.234`", ",", 
        RowBox[{"-", "0.093`"}], ",", "4.017`", ",", 
        RowBox[{"-", "0.219`"}], ",", 
        RowBox[{"-", "0.713`"}], ",", "241.35`", ",", "44.2`", ",", "1.1`", 
        ",", "1.743`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "20382.821`"}], ",", "6.83`", ",", 
        RowBox[{"-", "5.101`"}], ",", "5.576`", ",", "0.475`", ",", "3.159`", 
        ",", "0.349`", ",", 
        RowBox[{"-", "0.713`"}], ",", "225.284`", ",", "34.3`", ",", "1.048`",
         ",", "1.392`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "18336.601`"}], ",", "6.802`", ",", 
        RowBox[{"-", "5.024`"}], ",", "5.301`", ",", "0.278`", ",", "1.323`", 
        ",", "0.125`", ",", 
        RowBox[{"-", "0.716`"}], ",", "209.285`", ",", "34.9`", ",", "1.012`",
         ",", "2.469`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "30240.922`"}], ",", "7.156`", ",", 
        RowBox[{"-", "5.333`"}], ",", "5.236`", ",", 
        RowBox[{"-", "0.097`"}], ",", "4.084`", ",", 
        RowBox[{"-", "0.22`"}], ",", 
        RowBox[{"-", "0.707`"}], ",", "255.376`", ",", "43.6`", ",", "1.09`", 
        ",", "2.272`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "17266.813`"}], ",", "8.353`", ",", 
        RowBox[{"-", "5.142`"}], ",", "5.451`", ",", "0.309`", ",", "1.618`", 
        ",", "0.133`", ",", 
        RowBox[{"-", "0.714`"}], ",", "195.258`", ",", "35.3`", ",", "1.026`",
         ",", "1.94`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "22396.415`"}], ",", "7.075`", ",", 
        RowBox[{"-", "5.349`"}], ",", "5.755`", ",", "0.407`", ",", "1.297`", 
        ",", "0.273`", ",", 
        RowBox[{"-", "0.713`"}], ",", "239.268`", ",", "43.5`", ",", "1.184`",
         ",", "1.644`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "21452.636`"}], ",", "6.803`", ",", 
        RowBox[{"-", "5.073`"}], ",", "5.531`", ",", "0.458`", ",", "3.234`", 
        ",", "0.353`", ",", 
        RowBox[{"-", "0.707`"}], ",", "239.311`", ",", "34.3`", ",", "1.034`",
         ",", "1.921`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "28101.4`"}], ",", "7.292`", ",", 
        RowBox[{"-", "5.423`"}], ",", "5.335`", ",", 
        RowBox[{"-", "0.088`"}], ",", "4.378`", ",", 
        RowBox[{"-", "0.223`"}], ",", 
        RowBox[{"-", "0.708`"}], ",", "227.323`", ",", "45.`", ",", "1.12`", 
        ",", "1.214`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "19280.462`"}], ",", "7.265`", ",", 
        RowBox[{"-", "5.393`"}], ",", "5.876`", ",", "0.483`", ",", "1.539`", 
        ",", "0.326`", ",", 
        RowBox[{"-", "0.707`"}], ",", "209.242`", ",", "45.4`", ",", "1.175`",
         ",", "1.699`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "21452.636`"}], ",", "7.265`", ",", 
        RowBox[{"-", "5.505`"}], ",", "5.911`", ",", "0.406`", ",", "3.041`", 
        ",", "0.265`", ",", 
        RowBox[{"-", "0.713`"}], ",", "239.311`", ",", "34.3`", ",", "1.034`",
         ",", "1.571`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "19280.543`"}], ",", "6.803`", ",", 
        RowBox[{"-", "4.968`"}], ",", "5.226`", ",", "0.258`", ",", "1.505`", 
        ",", "0.326`", ",", 
        RowBox[{"-", "0.715`"}], ",", "209.242`", ",", "45.4`", ",", "1.175`",
         ",", "1.699`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "22522.37`"}], ",", "6.911`", ",", 
        RowBox[{"-", "5.063`"}], ",", "5.528`", ",", "0.465`", ",", "3.276`", 
        ",", "0.352`", ",", 
        RowBox[{"-", "0.713`"}], ",", "253.337`", ",", "34.2`", ",", "1.022`",
         ",", "2.45`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "20382.821`"}], ",", "7.265`", ",", 
        RowBox[{"-", "5.505`"}], ",", "5.908`", ",", "0.403`", ",", "3.089`", 
        ",", "0.225`", ",", 
        RowBox[{"-", "0.714`"}], ",", "225.284`", ",", "35.2`", ",", "1.05`", 
        ",", "1.262`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "23498.638`"}], ",", "7.374`", ",", 
        RowBox[{"-", "5.703`"}], ",", "5.961`", ",", "0.257`", ",", "1.288`", 
        ",", "0.269`", ",", 
        RowBox[{"-", "0.714`"}], ",", "255.31`", ",", "34.`", ",", "1.069`", 
        ",", "0.637`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "21452.5`"}], ",", "7.183`", ",", 
        RowBox[{"-", "5.443`"}], ",", "5.831`", ",", "0.389`", ",", "2.994`", 
        ",", "0.264`", ",", 
        RowBox[{"-", "0.714`"}], ",", "239.311`", ",", "35.1`", ",", "1.036`",
         ",", 
        RowBox[{"-", "1.842`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "29171.025`"}], ",", "7.129`", ",", 
        RowBox[{"-", "5.499`"}], ",", "5.468`", ",", 
        RowBox[{"-", "0.03`"}], ",", "3.92`", ",", "0.293`", ",", 
        RowBox[{"-", "0.712`"}], ",", "241.35`", ",", "44.2`", ",", "1.1`", 
        ",", "1.248`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "29171.025`"}], ",", "7.102`", ",", 
        RowBox[{"-", "5.569`"}], ",", "5.499`", ",", 
        RowBox[{"-", "0.07`"}], ",", "3.714`", ",", "0.289`", ",", 
        RowBox[{"-", "0.708`"}], ",", "241.35`", ",", "44.2`", ",", "1.1`", 
        ",", 
        RowBox[{"-", "1.003`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "28101.4`"}], ",", "7.319`", ",", 
        RowBox[{"-", "5.536`"}], ",", "5.488`", ",", 
        RowBox[{"-", "0.049`"}], ",", "4.009`", ",", "0.293`", ",", 
        RowBox[{"-", "0.702`"}], ",", "227.323`", ",", "45.`", ",", "1.12`", 
        ",", "0.719`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "22396.388`"}], ",", "7.02`", ",", 
        RowBox[{"-", "5.281`"}], ",", "5.594`", ",", "0.313`", ",", "0.427`", 
        ",", "0.283`", ",", 
        RowBox[{"-", "0.702`"}], ",", "239.268`", ",", "43.5`", ",", "1.184`",
         ",", "1.294`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "29171.025`"}], ",", "7.047`", ",", 
        RowBox[{"-", "5.407`"}], ",", "5.332`", ",", 
        RowBox[{"-", "0.075`"}], ",", "4.42`", ",", 
        RowBox[{"-", "0.226`"}], ",", 
        RowBox[{"-", "0.705`"}], ",", "241.35`", ",", "44.2`", ",", "1.1`", 
        ",", "1.743`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "30240.922`"}], ",", "7.02`", ",", 
        RowBox[{"-", "5.303`"}], ",", "5.221`", ",", 
        RowBox[{"-", "0.082`"}], ",", "4.043`", ",", 
        RowBox[{"-", "0.222`"}], ",", 
        RowBox[{"-", "0.713`"}], ",", "255.376`", ",", "43.6`", ",", "1.09`", 
        ",", "2.272`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "17266.922`"}], ",", "7.047`", ",", 
        RowBox[{"-", "5.243`"}], ",", "5.765`", ",", "0.522`", ",", "2.553`", 
        ",", "0.378`", ",", 
        RowBox[{"-", "0.713`"}], ",", "195.258`", ",", "34.7`", ",", "1.023`",
         ",", 
        RowBox[{"-", "1.265`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "12104.477`"}], ",", "7.809`", ",", 
        RowBox[{"-", "5.971`"}], ",", "6.34`", ",", "0.37`", ",", "1.567`", 
        ",", "0.179`", ",", 
        RowBox[{"-", "0.707`"}], ",", "149.233`", ",", "35.2`", ",", "0.938`",
         ",", "2.241`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "31310.547`"}], ",", "7.02`", ",", 
        RowBox[{"-", "5.311`"}], ",", "5.224`", ",", 
        RowBox[{"-", "0.088`"}], ",", "4.067`", ",", 
        RowBox[{"-", "0.219`"}], ",", 
        RowBox[{"-", "0.712`"}], ",", "269.403`", ",", "43.1`", ",", "1.07`", 
        ",", "2.801`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "26669.745`"}], ",", "7.238`", ",", 
        RowBox[{"-", "5.59`"}], ",", "5.669`", ",", "0.079`", ",", "3.375`", 
        ",", "0.267`", ",", 
        RowBox[{"-", "0.712`"}], ",", "301.38`", ",", "39.8`", ",", "1.093`", 
        ",", "2.81`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "19280.462`"}], ",", "7.211`", ",", 
        RowBox[{"-", "5.328`"}], ",", "5.872`", ",", "0.544`", ",", "1.369`", 
        ",", "0.265`", ",", 
        RowBox[{"-", "0.713`"}], ",", "209.242`", ",", "45.4`", ",", "1.175`",
         ",", "1.699`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "16164.481`"}], ",", "7.211`", ",", 
        RowBox[{"-", "5.293`"}], ",", "5.602`", ",", "0.309`", ",", "1.899`", 
        ",", "0.329`", ",", 
        RowBox[{"-", "0.708`"}], ",", "179.216`", ",", "48.`", ",", "1.163`", 
        ",", "1.707`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "22522.234`"}], ",", "7.156`", ",", 
        RowBox[{"-", "5.435`"}], ",", "5.827`", ",", "0.391`", ",", "2.947`", 
        ",", "0.265`", ",", 
        RowBox[{"-", "0.713`"}], ",", "253.337`", ",", "35.`", ",", "1.023`", 
        ",", "1.777`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "30240.922`"}], ",", "7.02`", ",", 
        RowBox[{"-", "5.247`"}], ",", "5.533`", ",", "0.286`", ",", "3.05`", 
        ",", "0.3`", ",", 
        RowBox[{"-", "0.711`"}], ",", "255.376`", ",", "43.6`", ",", "1.09`", 
        ",", "1.777`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "30240.922`"}], ",", "7.156`", ",", 
        RowBox[{"-", "5.533`"}], ",", "5.466`", ",", 
        RowBox[{"-", "0.067`"}], ",", "3.751`", ",", "0.285`", ",", 
        RowBox[{"-", "0.71`"}], ",", "255.376`", ",", "43.6`", ",", "1.09`", 
        ",", "1.777`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "20382.766`"}], ",", "7.319`", ",", 
        RowBox[{"-", "5.524`"}], ",", "5.912`", ",", "0.388`", ",", "3.136`", 
        ",", "0.245`", ",", 
        RowBox[{"-", "0.719`"}], ",", "225.284`", ",", "34.3`", ",", "1.048`",
         ",", "1.042`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "21452.609`"}], ",", "7.129`", ",", 
        RowBox[{"-", "5.41`"}], ",", "5.794`", ",", "0.384`", ",", "2.979`", 
        ",", "0.26`", ",", 
        RowBox[{"-", "0.713`"}], ",", "239.311`", ",", "35.1`", ",", "1.036`",
         ",", "1.273`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "20382.739`"}], ",", "7.238`", ",", 
        RowBox[{"-", "5.481`"}], ",", "5.872`", ",", "0.39`", ",", "3.237`", 
        ",", "0.249`", ",", 
        RowBox[{"-", "0.713`"}], ",", "225.284`", ",", "35.2`", ",", "1.05`", 
        ",", "0.744`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "19312.923`"}], ",", "7.319`", ",", 
        RowBox[{"-", "5.523`"}], ",", "5.914`", ",", "0.391`", ",", "3.203`", 
        ",", "0.253`", ",", 
        RowBox[{"-", "0.707`"}], ",", "211.258`", ",", "35.4`", ",", "1.067`",
         ",", "0.215`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "19312.787`"}], ",", "7.456`", ",", 
        RowBox[{"-", "5.719`"}], ",", "6.007`", ",", "0.288`", ",", "1.449`", 
        ",", "0.305`", ",", 
        RowBox[{"-", "0.71`"}], ",", "211.258`", ",", "35.4`", ",", "1.067`", 
        ",", 
        RowBox[{"-", "3.08`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "17266.759`"}], ",", "7.292`", ",", 
        RowBox[{"-", "5.444`"}], ",", "5.849`", ",", "0.405`", ",", "3.673`", 
        ",", "0.308`", ",", 
        RowBox[{"-", "0.717`"}], ",", "195.258`", ",", "34.7`", ",", "1.023`",
         ",", "0.435`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "16196.943`"}], ",", "7.292`", ",", 
        RowBox[{"-", "5.443`"}], ",", "5.848`", ",", "0.406`", ",", "3.724`", 
        ",", "0.307`", ",", 
        RowBox[{"-", "0.713`"}], ",", "181.232`", ",", "36.`", ",", "1.041`", 
        ",", "0.126`"}], "}"}]},
     {"2.72`", "1.96`", "2.02`", "1.95`", "1.9`", "1.71`", "1.69`", "1.68`", 
      "1.66`", "1.36`", "1.33`", "1.25`", "1.29`", "1.27`", "1.14`", "1.36`", 
      "1.11`", "1.`", "1.05`", "1.`", "1.38`", "0.87`", "0.86`", "0.83`", 
      "0.84`", "0.84`", "0.81`", "0.76`", "0.66`", "0.68`", "0.67`", "0.59`", 
      "0.58`", "0.46`", "0.43`", "0.41`", "0.38`", "0.38`", "0.38`", "0.33`", 
      "0.23`", "0.03`", "0.`", 
      RowBox[{"-", "0.03`"}], 
      RowBox[{"-", "0.06`"}], 
      RowBox[{"-", "0.67`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.740062781778307*^9, 3.7400627839903393`*^9}, {
  3.740062959427864*^9, 3.740062960815857*^9}},
 CellLabel->
  "Out[464]=",ExpressionUUID->"8d93a0cd-ba9c-4c31-9004-79bfda35b0a0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rationormalize", "[", 
   RowBox[{"list_", ",", 
    RowBox[{"pos_", ":", "43"}]}], "]"}], ":=", 
  FractionBox["list", 
   RowBox[{
   "list", "\[LeftDoubleBracket]", "pos", 
    "\[RightDoubleBracket]"}]]}]], "Input",
 CellChangeTimes->{{3.74006243507697*^9, 3.740062505456815*^9}},
 CellLabel->
  "In[451]:=",ExpressionUUID->"54578b1c-e167-4162-84c3-c8353adf9735"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normalizeddata", "=", 
  RowBox[{"Transpose", "@", 
   RowBox[{"Map", "[", 
    RowBox[{"rationormalize", ",", 
     RowBox[{"Transpose", "[", "gooddata", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.740062536928273*^9, 3.74006254266889*^9}, {
  3.74006265423092*^9, 3.74006267997434*^9}, {3.7400630787445517`*^9, 
  3.740063085343417*^9}, {3.740063250031642*^9, 3.740063251458544*^9}, {
  3.740063428250689*^9, 3.740063475137154*^9}},
 CellLabel->
  "In[479]:=",ExpressionUUID->"1a8c5f00-4894-411b-b966-7aeafa8fecad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "4.262882734011833`", ",", "1.0075146877988796`", ",", 
     "1.0287887017925041`", ",", "0.9337166046668922`", ",", 
     RowBox[{"-", "0.4092071611253197`"}], ",", "1.0121760849203871`", ",", 
     "0.1818181818181818`", ",", "0.9999999999999999`", ",", 
     "1.2977212697270635`", ",", "1.0706214689265536`", ",", 
     "1.2408622305529522`", ",", "11.418604651162791`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658427261373125`", ",", "0.9734936466730428`", ",", 
     "0.9827992033315227`", ",", "0.8890767669935746`", ",", 
     RowBox[{"-", "0.4347826086956522`"}], ",", "0.6231657820793006`", ",", 
     "0.5335968379446641`", ",", "1.0014144271570014`", ",", 
     "1.2088346950174667`", ",", "1.2033898305084747`", ",", 
     "1.0121836925960639`", ",", "11.404651162790698`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0048401269968303`", ",", "0.9196611558956141`", ",", 
     "0.9105558573239182`", ",", "0.8965167399391274`", ",", 
     "0.6982097186700768`", ",", "0.38526381517327507`", ",", 
     "0.4980237154150197`", ",", "1.007072135785007`", ",", 
     "1.0570534606973463`", ",", "0.9576271186440678`", ",", 
     "0.9353327085285849`", ",", "12.92093023255814`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0602279106067993`", ",", "0.9187047410848477`", ",", 
     "0.9120043454644214`", ",", "0.8953331078796077`", ",", 
     "0.659846547314578`", ",", "0.40056197315017167`", ",", 
     "0.4980237154150197`", ",", "1.0028288543140027`", ",", 
     "1.1234509462363556`", ",", "0.9576271186440678`", ",", 
     "0.9353327085285849`", ",", "15.38139534883721`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9494523433868608`", ",", "0.9243065992621943`", ",", 
     "0.9069346369726599`", ",", "0.8931349340547853`", ",", 
     "0.6982097186700768`", ",", "0.3487355604121136`", ",", 
     "0.5019762845849802`", ",", "1.0042432814710043`", ",", 
     "0.9906607087068892`", ",", "0.9661016949152543`", ",", 
     "0.9465791940018744`", ",", "10.460465116279071`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.6212282314800304`", ",", "0.9889329143325593`", ",", 
     "0.8654716639507515`", ",", "0.8566114305038891`", ",", 
     "0.7314578005115089`", ",", "0.7798938495160788`", ",", 
     RowBox[{"-", "0.592885375494071`"}], ",", "1.007072135785007`", ",", 
     "1.275232180556476`", ",", "1.1638418079096047`", ",", 
     "1.0028116213683225`", ",", "12.84186046511628`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.4610883603688585`", ",", "1.0075146877988796`", ",", 
     "1.0296940068803186`", ",", "0.9345620561379777`", ",", 
     RowBox[{"-", "0.4092071611253197`"}], ",", "1.0212300967842647`", ",", 
     "0.1818181818181818`", ",", "1.0028288543140027`", ",", 
     "1.2313285177366062`", ",", "1.115819209039548`", ",", 
     "1.2820993439550141`", ",", "9.981395348837209`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.115620095414868`", ",", "0.9182948490230907`", ",", 
     "0.9098316132536666`", ",", "0.8961785593506932`", ",", 
     "0.7033248081841433`", ",", "0.3902591320636903`", ",", 
     "0.48221343873517786`", ",", "1.0084865629420083`", ",", 
     "1.1898484317753646`", ",", "0.9576271186440678`", ",", 
     "0.9175257731958762`", ",", "15.748837209302327`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5104501270988344`", ",", "0.9729471239240335`", ",", 
     "0.9873257287705958`", ",", "0.8953331078796077`", ",", 
     RowBox[{"-", "0.4040920716112532`"}], ",", "0.660318451451764`", ",", 
     RowBox[{"-", "0.5177865612648221`"}], ",", "0.9999999999999999`", ",", 
     "1.1424419430270096`", ",", "1.2175141242937852`", ",", 
     "1.0309278350515465`", ",", "8.944186046511629`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.510440703357022`", ",", "0.9554583959557318`", ",", 
     "0.9645120405576679`", ",", "0.8850185999323639`", ",", 
     RowBox[{"-", "0.23785166240409208`"}], ",", "1.2541367467998752`", ",", 
     RowBox[{"-", "0.8656126482213439`"}], ",", "1.0084865629420083`", ",", 
     "1.1424419430270096`", ",", "1.248587570621469`", ",", 
     "1.0309278350515465`", ",", "8.106976744186047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0553980358126007`", ",", "0.9331875939335975`", ",", 
     "0.9235922505884483`", ",", "0.9428474805546161`", ",", 
     "1.2148337595907928`", ",", "0.9862628785513581`", ",", 
     "1.3794466403162053`", ",", "1.0084865629420083`", ",", 
     "1.066392751990457`", ",", "0.9689265536723163`", ",", 
     "0.9821930646672915`", ",", "6.474418604651163`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.949447217285545`", ",", "0.9293619346905315`", ",", 
     "0.9096505522361036`", ",", "0.8963476496449104`", ",", 
     "0.710997442455243`", ",", "0.41305026537620976`", ",", 
     "0.49407114624505927`", ",", "1.0127298444130126`", ",", 
     "0.9906607087068892`", ",", "0.9858757062146892`", ",", 
     "0.9484536082474228`", ",", "11.483720930232558`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658386873908212`", ",", "0.9777291979778658`", ",", 
     "0.9655984066630455`", ",", "0.8853567805207981`", ",", 
     RowBox[{"-", "0.2480818414322251`"}], ",", "1.2750546362784887`", ",", 
     RowBox[{"-", "0.8695652173913043`"}], ",", "0.9999999999999999`", ",", 
     "1.2088346950174667`", ",", "1.231638418079096`", ",", 
     "1.021555763823805`", ",", "10.567441860465117`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8940548771410729`", ",", "1.141276130618937`", ",", 
     "0.9310157523085281`", ",", "0.9217111937774771`", ",", 
     "0.7902813299232737`", ",", "0.5051514205432407`", ",", 
     "0.525691699604743`", ",", "1.00990099009901`", ",", "0.92426322316788`",
      ",", "0.9971751412429378`", ",", "0.9615745079662605`", ",", 
     "9.023255813953488`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1596595191727324`", ",", "0.966662112310425`", ",", 
     "0.9684953829440521`", ",", "0.9731146432194792`", ",", 
     "1.040920716112532`", ",", "0.404932875429285`", ",", 
     "1.0790513833992095`", ",", "1.0084865629420083`", ",", 
     "1.13258669494173`", ",", "1.228813559322034`", ",", 
     "1.1096532333645734`", ",", "7.6465116279069765`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1107917739847044`", ",", "0.9294985653777839`", ",", 
     "0.9185225420966866`", ",", "0.9352384173148461`", ",", 
     "1.1713554987212278`", ",", "1.0096784264751795`", ",", 
     "1.3952569169960474`", ",", "0.9999999999999999`", ",", 
     "1.1327902375294663`", ",", "0.9689265536723163`", ",", 
     "0.9690721649484536`", ",", "8.934883720930234`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.45505680315714`", ",", "0.9963109714441863`", ",", 
     "0.9818938982437081`", ",", "0.9020967196482922`", ",", 
     RowBox[{"-", "0.22506393861892582`"}], ",", "1.366843584139869`", ",", 
     RowBox[{"-", "0.8814229249011858`"}], ",", "1.0014144271570014`", ",", 
     "1.0760444574880004`", ",", "1.271186440677966`", ",", 
     "1.0496719775070291`", ",", "5.646511627906977`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9983192083352687`", ",", "0.9926219428883727`", ",", 
     "0.9764620677168205`", ",", "0.9935745688197498`", ",", 
     "1.2352941176470589`", ",", "0.48048704339681547`", ",", 
     "1.2885375494071145`", ",", "0.9999999999999999`", ",", 
     "0.9904571661191528`", ",", "1.2824858757062148`", ",", 
     "1.1012183692596065`", ",", "7.90232558139535`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1107917739847044`", ",", "0.9926219428883727`", ",", 
     "0.9967409016838674`", ",", "0.9994927291173487`", ",", 
     "1.0383631713554988`", ",", "0.9494224164845457`", ",", 
     "1.0474308300395256`", ",", "1.0084865629420083`", ",", 
     "1.1327902375294663`", ",", "0.9689265536723163`", ",", 
     "0.9690721649484536`", ",", "7.306976744186047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9983234024181634`", ",", "0.9294985653777839`", ",", 
     "0.8995111352525801`", ",", "0.883665877578627`", ",", 
     "0.659846547314578`", ",", "0.4698719950046831`", ",", 
     "1.2885375494071145`", ",", "1.0113154172560113`", ",", 
     "0.9904571661191528`", ",", "1.2824858757062148`", ",", 
     "1.1012183692596065`", ",", "7.90232558139535`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1661813180739136`", ",", "0.9442546796010384`", ",", 
     "0.9167119319210574`", ",", "0.9347311464321948`", ",", 
     "1.1892583120204605`", ",", "1.0227911333125195`", ",", 
     "1.391304347826087`", ",", "1.0084865629420083`", ",", 
     "1.1991829895199233`", ",", "0.9661016949152543`", ",", 
     "0.9578256794751641`", ",", "11.395348837209303`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0553980358126007`", ",", "0.9926219428883727`", ",", 
     "0.9967409016838674`", ",", "0.9989854582346974`", ",", 
     "1.030690537084399`", ",", "0.9644083671557914`", ",", 
     "0.8893280632411067`", ",", "1.00990099009901`", ",", 
     "1.066392751990457`", ",", "0.9943502824858758`", ",", 
     "0.9840674789128397`", ",", "5.869767441860465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.2167313047331054`", ",", "1.0075146877988796`", ",", 
     "1.0325909831613254`", ",", "1.0079472438282044`", ",", 
     "0.6572890025575447`", ",", "0.40212300967842646`", ",", 
     "1.0632411067193677`", ",", "1.00990099009901`", ",", 
     "1.2085222808130343`", ",", "0.96045197740113`", ",", 
     "1.0018744142455482`", ",", "2.9627906976744187`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1107847320677455`", ",", "0.9814182265336795`", ",", 
     "0.9855151185949664`", ",", "0.9859655055799798`", ",", 
     "0.9948849104859335`", ",", "0.934748673118951`", ",", 
     "1.0434782608695652`", ",", "1.00990099009901`", ",", 
     "1.1327902375294663`", ",", "0.9915254237288136`", ",", 
     "0.970946579194002`", ",", 
     RowBox[{"-", "8.567441860465117`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.510440703357022`", ",", "0.9740401694220522`", ",", 
     "0.9956545355784899`", ",", "0.9245857287791681`", ",", 
     RowBox[{"-", "0.07672634271099744`"}], ",", "1.2238526381517327`", ",", 
     "1.158102766798419`", ",", "1.007072135785007`", ",", 
     "1.1424419430270096`", ",", "1.248587570621469`", ",", 
     "1.0309278350515465`", ",", "5.804651162790698`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.510440703357022`", ",", "0.9703511408662386`", ",", 
     "1.0083288068078942`", ",", "0.9298275278998985`", ",", 
     RowBox[{"-", "0.1790281329923274`"}], ",", "1.1595379331876365`", ",", 
     "1.142292490118577`", ",", "1.0014144271570014`", ",", 
     "1.1424419430270096`", ",", "1.248587570621469`", ",", 
     "1.0309278350515465`", ",", 
     RowBox[{"-", "4.665116279069768`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.45505680315714`", ",", "1.`", ",", "1.002353793228318`", ",", 
     "0.9279675346635105`", ",", 
     RowBox[{"-", "0.12531969309462918`"}], ",", "1.2516390883546675`", ",", 
     "1.158102766798419`", ",", "0.9929278642149929`", ",", 
     "1.0760444574880004`", ",", "1.271186440677966`", ",", 
     "1.0496719775070291`", ",", "3.344186046511628`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1596581211451007`", ",", "0.9591474245115453`", ",", 
     "0.9561832337497737`", ",", "0.9458911058505243`", ",", 
     "0.8005115089514067`", ",", "0.13331251951295658`", ",", 
     "1.118577075098814`", ",", "0.9929278642149929`", ",", 
     "1.13258669494173`", ",", "1.228813559322034`", ",", 
     "1.1096532333645734`", ",", "6.018604651162791`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.510440703357022`", ",", "0.962836453067359`", ",", 
     "0.9789969219627014`", ",", "0.9015894487656408`", ",", 
     RowBox[{"-", "0.1918158567774936`"}], ",", "1.3799562909772087`", ",", 
     RowBox[{"-", "0.8932806324110671`"}], ",", "0.9971711456859971`", ",", 
     "1.1424419430270096`", ",", "1.248587570621469`", ",", 
     "1.0309278350515465`", ",", "8.106976744186047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658386873908212`", ",", "0.9591474245115453`", ",", 
     "0.9601665761361579`", ",", "0.8828204261075414`", ",", 
     RowBox[{"-", "0.20971867007672634`"}], ",", "1.2622541367467999`", ",", 
     RowBox[{"-", "0.8774703557312252`"}], ",", "1.0084865629420083`", ",", 
     "1.2088346950174667`", ",", "1.231638418079096`", ",", 
     "1.021555763823805`", ",", "10.567441860465117`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8940605210304002`", ",", "0.962836453067359`", ",", 
     "0.9493029150823828`", ",", "0.9748055461616503`", ",", 
     "1.3350383631713556`", ",", "0.797065251326881`", ",", 
     "1.4940711462450593`", ",", "1.0084865629420083`", ",", 
     "0.92426322316788`", ",", "0.9802259887005651`", ",", 
     "0.9587628865979381`", ",", 
     RowBox[{"-", "5.883720930232558`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6267553078319632`", ",", "1.066949036753655`", ",", 
     "1.0811153358681875`", ",", "1.0720324653364897`", ",", 
     "0.9462915601023018`", ",", "0.4892288479550421`", ",", 
     "0.7075098814229248`", ",", "0.9999999999999999`", ",", 
     "0.7064016510617349`", ",", "0.9943502824858758`", ",", 
     "0.8791002811621368`", ",", "10.423255813953489`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.621222587590703`", ",", "0.9591474245115453`", ",", 
     "0.9616150642766612`", ",", "0.8833276969901929`", ",", 
     RowBox[{"-", "0.22506393861892582`"}], ",", "1.2697471120824229`", ",", 
     RowBox[{"-", "0.8656126482213439`"}], ",", "1.007072135785007`", ",", 
     "1.275232180556476`", ",", "1.2175141242937852`", ",", 
     "1.0028116213683225`", ",", "13.027906976744188`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.3809274235702178`", ",", "0.9889329143325593`", ",", 
     "1.0121310881767156`", ",", "0.9585728779168076`", ",", 
     "0.2020460358056266`", ",", "1.0536996565719638`", ",", 
     "1.0553359683794468`", ",", "1.007072135785007`", ",", 
     "1.4265968626040195`", ",", "1.1242937853107344`", ",", 
     "1.0243673851921276`", ",", "13.069767441860465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9983192083352687`", ",", "0.9852438857767456`", ",", 
     "0.9646931015752309`", ",", "0.9928982076428813`", ",", 
     "1.3913043478260871`", ",", "0.4274118014361536`", ",", 
     "1.0474308300395256`", ",", "1.0084865629420083`", ",", 
     "0.9904571661191528`", ",", "1.2824858757062148`", ",", 
     "1.1012183692596065`", ",", "7.90232558139535`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8369774476913723`", ",", "0.9852438857767456`", ",", 
     "0.9583559659605287`", ",", "0.9472438282042611`", ",", 
     "0.7902813299232737`", ",", "0.5928816734311583`", ",", 
     "1.300395256916996`", ",", "1.0014144271570014`", ",", 
     "0.8483276372965758`", ",", "1.3559322033898304`", ",", 
     "1.0899718837863168`", ",", "7.939534883720931`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1661742761569547`", ",", "0.9777291979778658`", ",", 
     "0.9840666304544631`", ",", "0.9852891444031113`", ",", "1.`", ",", 
     "0.9200749297533563`", ",", "1.0474308300395256`", ",", 
     "1.0084865629420083`", ",", "1.1991829895199233`", ",", 
     "0.9887005649717514`", ",", "0.9587628865979381`", ",", 
     "8.265116279069767`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658386873908212`", ",", "0.9591474245115453`", ",", 
     "0.9500271591526344`", ",", "0.9355765979032804`", ",", 
     "0.7314578005115089`", ",", "0.9522322822354042`", ",", 
     "1.185770750988142`", ",", "1.0056577086280056`", ",", 
     "1.2088346950174667`", ",", "1.231638418079096`", ",", 
     "1.021555763823805`", ",", "8.265116279069767`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658386873908212`", ",", "0.9777291979778658`", ",", 
     "1.0018106101756292`", ",", "0.924247548190734`", ",", 
     RowBox[{"-", "0.17135549872122763`"}], ",", "1.1710896034967218`", ",", 
     "1.1264822134387351`", ",", "1.0042432814710043`", ",", 
     "1.2088346950174667`", ",", "1.231638418079096`", ",", 
     "1.021555763823805`", ",", "8.265116279069767`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0553951879785366`", ",", "1.`", ",", "1.000181061017563`", ",", 
     "0.9996618194115657`", ",", "0.9923273657289003`", ",", 
     "0.9790821105213863`", ",", "0.9683794466403162`", ",", 
     "1.016973125884017`", ",", "1.066392751990457`", ",", 
     "0.9689265536723163`", ",", "0.9821930646672915`", ",", 
     "4.8465116279069775`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.110790375957073`", ",", "0.9740401694220522`", ",", 
     "0.9795401050153902`", ",", "0.9797091646939465`", ",", 
     "0.9820971867007673`", ",", "0.9300655635341867`", ",", 
     "1.0276679841897234`", ",", "1.0084865629420083`", ",", 
     "1.1327902375294663`", ",", "0.9915254237288136`", ",", 
     "0.970946579194002`", ",", "5.920930232558139`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0553937899509052`", ",", "0.9889329143325593`", ",", 
     "0.9923954372623573`", ",", "0.9928982076428813`", ",", 
     "0.9974424552429668`", ",", "1.0106150483921323`", ",", 
     "0.9841897233201581`", ",", "1.0084865629420083`", ",", 
     "1.066392751990457`", ",", "0.9943502824858758`", ",", 
     "0.9840674789128397`", ",", "3.46046511627907`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "1.`", ",", "0.9999999999999999`", ",", "1.`", ",", "1.`", 
     ",", "0.9999999999999999`", ",", "1.`", ",", "0.9999999999999999`", ",", 
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9999929580830412`", ",", "1.018718404153573`", ",", 
     "1.035487959442332`", ",", "1.0157253973621914`", ",", 
     "0.7365728900255754`", ",", "0.45238838588822977`", ",", 
     "1.2055335968379446`", ",", "1.0042432814710043`", ",", "1.`", ",", 
     "1.`", ",", "1.`", ",", 
     RowBox[{"-", "14.325581395348838`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8940520810858098`", ",", "0.9963109714441863`", ",", 
     "0.9856961796125294`", ",", "0.9890091308758878`", ",", 
     "1.0358056265984656`", ",", "1.1467374336559475`", ",", 
     "1.217391304347826`", ",", "1.0141442715700142`", ",", 
     "0.92426322316788`", ",", "0.9802259887005651`", ",", 
     "0.9587628865979381`", ",", "2.0232558139534884`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8386582911349049`", ",", "0.9963109714441863`", ",", 
     "0.9855151185949664`", ",", "0.9888400405816706`", ",", 
     "1.0383631713554988`", ",", "1.1626600062441461`", ",", 
     "1.2134387351778655`", ",", "1.0084865629420083`", ",", 
     "0.8578704711774228`", ",", "1.0169491525423728`", ",", 
     "0.9756326148078724`", ",", "0.586046511627907`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7400626576845922`*^9, 3.7400627038820677`*^9}, 
   3.740062804164131*^9, {3.7400629664307737`*^9, 3.740062968614708*^9}, {
   3.7400630950953007`*^9, 3.740063098986861*^9}, {3.740063258619892*^9, 
   3.740063260547957*^9}, 3.7400634757160273`*^9},
 CellLabel->
  "Out[479]=",ExpressionUUID->"38d4499b-ea92-4571-973b-27ee205a996d"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inputfinal", "=", 
  RowBox[{"Drop", "[", 
   RowBox[{"normalizeddata", ",", 
    RowBox[{"{", "43", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.740063484979591*^9, 3.74006352748669*^9}},
 CellLabel->
  "In[480]:=",ExpressionUUID->"38db5320-ab4f-499a-ad8d-01884ecfa5b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "4.262882734011833`", ",", "1.0075146877988796`", ",", 
     "1.0287887017925041`", ",", "0.9337166046668922`", ",", 
     RowBox[{"-", "0.4092071611253197`"}], ",", "1.0121760849203871`", ",", 
     "0.1818181818181818`", ",", "0.9999999999999999`", ",", 
     "1.2977212697270635`", ",", "1.0706214689265536`", ",", 
     "1.2408622305529522`", ",", "11.418604651162791`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658427261373125`", ",", "0.9734936466730428`", ",", 
     "0.9827992033315227`", ",", "0.8890767669935746`", ",", 
     RowBox[{"-", "0.4347826086956522`"}], ",", "0.6231657820793006`", ",", 
     "0.5335968379446641`", ",", "1.0014144271570014`", ",", 
     "1.2088346950174667`", ",", "1.2033898305084747`", ",", 
     "1.0121836925960639`", ",", "11.404651162790698`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0048401269968303`", ",", "0.9196611558956141`", ",", 
     "0.9105558573239182`", ",", "0.8965167399391274`", ",", 
     "0.6982097186700768`", ",", "0.38526381517327507`", ",", 
     "0.4980237154150197`", ",", "1.007072135785007`", ",", 
     "1.0570534606973463`", ",", "0.9576271186440678`", ",", 
     "0.9353327085285849`", ",", "12.92093023255814`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0602279106067993`", ",", "0.9187047410848477`", ",", 
     "0.9120043454644214`", ",", "0.8953331078796077`", ",", 
     "0.659846547314578`", ",", "0.40056197315017167`", ",", 
     "0.4980237154150197`", ",", "1.0028288543140027`", ",", 
     "1.1234509462363556`", ",", "0.9576271186440678`", ",", 
     "0.9353327085285849`", ",", "15.38139534883721`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9494523433868608`", ",", "0.9243065992621943`", ",", 
     "0.9069346369726599`", ",", "0.8931349340547853`", ",", 
     "0.6982097186700768`", ",", "0.3487355604121136`", ",", 
     "0.5019762845849802`", ",", "1.0042432814710043`", ",", 
     "0.9906607087068892`", ",", "0.9661016949152543`", ",", 
     "0.9465791940018744`", ",", "10.460465116279071`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.6212282314800304`", ",", "0.9889329143325593`", ",", 
     "0.8654716639507515`", ",", "0.8566114305038891`", ",", 
     "0.7314578005115089`", ",", "0.7798938495160788`", ",", 
     RowBox[{"-", "0.592885375494071`"}], ",", "1.007072135785007`", ",", 
     "1.275232180556476`", ",", "1.1638418079096047`", ",", 
     "1.0028116213683225`", ",", "12.84186046511628`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.4610883603688585`", ",", "1.0075146877988796`", ",", 
     "1.0296940068803186`", ",", "0.9345620561379777`", ",", 
     RowBox[{"-", "0.4092071611253197`"}], ",", "1.0212300967842647`", ",", 
     "0.1818181818181818`", ",", "1.0028288543140027`", ",", 
     "1.2313285177366062`", ",", "1.115819209039548`", ",", 
     "1.2820993439550141`", ",", "9.981395348837209`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.115620095414868`", ",", "0.9182948490230907`", ",", 
     "0.9098316132536666`", ",", "0.8961785593506932`", ",", 
     "0.7033248081841433`", ",", "0.3902591320636903`", ",", 
     "0.48221343873517786`", ",", "1.0084865629420083`", ",", 
     "1.1898484317753646`", ",", "0.9576271186440678`", ",", 
     "0.9175257731958762`", ",", "15.748837209302327`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5104501270988344`", ",", "0.9729471239240335`", ",", 
     "0.9873257287705958`", ",", "0.8953331078796077`", ",", 
     RowBox[{"-", "0.4040920716112532`"}], ",", "0.660318451451764`", ",", 
     RowBox[{"-", "0.5177865612648221`"}], ",", "0.9999999999999999`", ",", 
     "1.1424419430270096`", ",", "1.2175141242937852`", ",", 
     "1.0309278350515465`", ",", "8.944186046511629`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.510440703357022`", ",", "0.9554583959557318`", ",", 
     "0.9645120405576679`", ",", "0.8850185999323639`", ",", 
     RowBox[{"-", "0.23785166240409208`"}], ",", "1.2541367467998752`", ",", 
     RowBox[{"-", "0.8656126482213439`"}], ",", "1.0084865629420083`", ",", 
     "1.1424419430270096`", ",", "1.248587570621469`", ",", 
     "1.0309278350515465`", ",", "8.106976744186047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0553980358126007`", ",", "0.9331875939335975`", ",", 
     "0.9235922505884483`", ",", "0.9428474805546161`", ",", 
     "1.2148337595907928`", ",", "0.9862628785513581`", ",", 
     "1.3794466403162053`", ",", "1.0084865629420083`", ",", 
     "1.066392751990457`", ",", "0.9689265536723163`", ",", 
     "0.9821930646672915`", ",", "6.474418604651163`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.949447217285545`", ",", "0.9293619346905315`", ",", 
     "0.9096505522361036`", ",", "0.8963476496449104`", ",", 
     "0.710997442455243`", ",", "0.41305026537620976`", ",", 
     "0.49407114624505927`", ",", "1.0127298444130126`", ",", 
     "0.9906607087068892`", ",", "0.9858757062146892`", ",", 
     "0.9484536082474228`", ",", "11.483720930232558`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658386873908212`", ",", "0.9777291979778658`", ",", 
     "0.9655984066630455`", ",", "0.8853567805207981`", ",", 
     RowBox[{"-", "0.2480818414322251`"}], ",", "1.2750546362784887`", ",", 
     RowBox[{"-", "0.8695652173913043`"}], ",", "0.9999999999999999`", ",", 
     "1.2088346950174667`", ",", "1.231638418079096`", ",", 
     "1.021555763823805`", ",", "10.567441860465117`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8940548771410729`", ",", "1.141276130618937`", ",", 
     "0.9310157523085281`", ",", "0.9217111937774771`", ",", 
     "0.7902813299232737`", ",", "0.5051514205432407`", ",", 
     "0.525691699604743`", ",", "1.00990099009901`", ",", "0.92426322316788`",
      ",", "0.9971751412429378`", ",", "0.9615745079662605`", ",", 
     "9.023255813953488`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1596595191727324`", ",", "0.966662112310425`", ",", 
     "0.9684953829440521`", ",", "0.9731146432194792`", ",", 
     "1.040920716112532`", ",", "0.404932875429285`", ",", 
     "1.0790513833992095`", ",", "1.0084865629420083`", ",", 
     "1.13258669494173`", ",", "1.228813559322034`", ",", 
     "1.1096532333645734`", ",", "7.6465116279069765`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1107917739847044`", ",", "0.9294985653777839`", ",", 
     "0.9185225420966866`", ",", "0.9352384173148461`", ",", 
     "1.1713554987212278`", ",", "1.0096784264751795`", ",", 
     "1.3952569169960474`", ",", "0.9999999999999999`", ",", 
     "1.1327902375294663`", ",", "0.9689265536723163`", ",", 
     "0.9690721649484536`", ",", "8.934883720930234`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.45505680315714`", ",", "0.9963109714441863`", ",", 
     "0.9818938982437081`", ",", "0.9020967196482922`", ",", 
     RowBox[{"-", "0.22506393861892582`"}], ",", "1.366843584139869`", ",", 
     RowBox[{"-", "0.8814229249011858`"}], ",", "1.0014144271570014`", ",", 
     "1.0760444574880004`", ",", "1.271186440677966`", ",", 
     "1.0496719775070291`", ",", "5.646511627906977`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9983192083352687`", ",", "0.9926219428883727`", ",", 
     "0.9764620677168205`", ",", "0.9935745688197498`", ",", 
     "1.2352941176470589`", ",", "0.48048704339681547`", ",", 
     "1.2885375494071145`", ",", "0.9999999999999999`", ",", 
     "0.9904571661191528`", ",", "1.2824858757062148`", ",", 
     "1.1012183692596065`", ",", "7.90232558139535`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1107917739847044`", ",", "0.9926219428883727`", ",", 
     "0.9967409016838674`", ",", "0.9994927291173487`", ",", 
     "1.0383631713554988`", ",", "0.9494224164845457`", ",", 
     "1.0474308300395256`", ",", "1.0084865629420083`", ",", 
     "1.1327902375294663`", ",", "0.9689265536723163`", ",", 
     "0.9690721649484536`", ",", "7.306976744186047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9983234024181634`", ",", "0.9294985653777839`", ",", 
     "0.8995111352525801`", ",", "0.883665877578627`", ",", 
     "0.659846547314578`", ",", "0.4698719950046831`", ",", 
     "1.2885375494071145`", ",", "1.0113154172560113`", ",", 
     "0.9904571661191528`", ",", "1.2824858757062148`", ",", 
     "1.1012183692596065`", ",", "7.90232558139535`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1661813180739136`", ",", "0.9442546796010384`", ",", 
     "0.9167119319210574`", ",", "0.9347311464321948`", ",", 
     "1.1892583120204605`", ",", "1.0227911333125195`", ",", 
     "1.391304347826087`", ",", "1.0084865629420083`", ",", 
     "1.1991829895199233`", ",", "0.9661016949152543`", ",", 
     "0.9578256794751641`", ",", "11.395348837209303`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0553980358126007`", ",", "0.9926219428883727`", ",", 
     "0.9967409016838674`", ",", "0.9989854582346974`", ",", 
     "1.030690537084399`", ",", "0.9644083671557914`", ",", 
     "0.8893280632411067`", ",", "1.00990099009901`", ",", 
     "1.066392751990457`", ",", "0.9943502824858758`", ",", 
     "0.9840674789128397`", ",", "5.869767441860465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.2167313047331054`", ",", "1.0075146877988796`", ",", 
     "1.0325909831613254`", ",", "1.0079472438282044`", ",", 
     "0.6572890025575447`", ",", "0.40212300967842646`", ",", 
     "1.0632411067193677`", ",", "1.00990099009901`", ",", 
     "1.2085222808130343`", ",", "0.96045197740113`", ",", 
     "1.0018744142455482`", ",", "2.9627906976744187`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1107847320677455`", ",", "0.9814182265336795`", ",", 
     "0.9855151185949664`", ",", "0.9859655055799798`", ",", 
     "0.9948849104859335`", ",", "0.934748673118951`", ",", 
     "1.0434782608695652`", ",", "1.00990099009901`", ",", 
     "1.1327902375294663`", ",", "0.9915254237288136`", ",", 
     "0.970946579194002`", ",", 
     RowBox[{"-", "8.567441860465117`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.510440703357022`", ",", "0.9740401694220522`", ",", 
     "0.9956545355784899`", ",", "0.9245857287791681`", ",", 
     RowBox[{"-", "0.07672634271099744`"}], ",", "1.2238526381517327`", ",", 
     "1.158102766798419`", ",", "1.007072135785007`", ",", 
     "1.1424419430270096`", ",", "1.248587570621469`", ",", 
     "1.0309278350515465`", ",", "5.804651162790698`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.510440703357022`", ",", "0.9703511408662386`", ",", 
     "1.0083288068078942`", ",", "0.9298275278998985`", ",", 
     RowBox[{"-", "0.1790281329923274`"}], ",", "1.1595379331876365`", ",", 
     "1.142292490118577`", ",", "1.0014144271570014`", ",", 
     "1.1424419430270096`", ",", "1.248587570621469`", ",", 
     "1.0309278350515465`", ",", 
     RowBox[{"-", "4.665116279069768`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.45505680315714`", ",", "1.`", ",", "1.002353793228318`", ",", 
     "0.9279675346635105`", ",", 
     RowBox[{"-", "0.12531969309462918`"}], ",", "1.2516390883546675`", ",", 
     "1.158102766798419`", ",", "0.9929278642149929`", ",", 
     "1.0760444574880004`", ",", "1.271186440677966`", ",", 
     "1.0496719775070291`", ",", "3.344186046511628`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1596581211451007`", ",", "0.9591474245115453`", ",", 
     "0.9561832337497737`", ",", "0.9458911058505243`", ",", 
     "0.8005115089514067`", ",", "0.13331251951295658`", ",", 
     "1.118577075098814`", ",", "0.9929278642149929`", ",", 
     "1.13258669494173`", ",", "1.228813559322034`", ",", 
     "1.1096532333645734`", ",", "6.018604651162791`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.510440703357022`", ",", "0.962836453067359`", ",", 
     "0.9789969219627014`", ",", "0.9015894487656408`", ",", 
     RowBox[{"-", "0.1918158567774936`"}], ",", "1.3799562909772087`", ",", 
     RowBox[{"-", "0.8932806324110671`"}], ",", "0.9971711456859971`", ",", 
     "1.1424419430270096`", ",", "1.248587570621469`", ",", 
     "1.0309278350515465`", ",", "8.106976744186047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658386873908212`", ",", "0.9591474245115453`", ",", 
     "0.9601665761361579`", ",", "0.8828204261075414`", ",", 
     RowBox[{"-", "0.20971867007672634`"}], ",", "1.2622541367467999`", ",", 
     RowBox[{"-", "0.8774703557312252`"}], ",", "1.0084865629420083`", ",", 
     "1.2088346950174667`", ",", "1.231638418079096`", ",", 
     "1.021555763823805`", ",", "10.567441860465117`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8940605210304002`", ",", "0.962836453067359`", ",", 
     "0.9493029150823828`", ",", "0.9748055461616503`", ",", 
     "1.3350383631713556`", ",", "0.797065251326881`", ",", 
     "1.4940711462450593`", ",", "1.0084865629420083`", ",", 
     "0.92426322316788`", ",", "0.9802259887005651`", ",", 
     "0.9587628865979381`", ",", 
     RowBox[{"-", "5.883720930232558`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6267553078319632`", ",", "1.066949036753655`", ",", 
     "1.0811153358681875`", ",", "1.0720324653364897`", ",", 
     "0.9462915601023018`", ",", "0.4892288479550421`", ",", 
     "0.7075098814229248`", ",", "0.9999999999999999`", ",", 
     "0.7064016510617349`", ",", "0.9943502824858758`", ",", 
     "0.8791002811621368`", ",", "10.423255813953489`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.621222587590703`", ",", "0.9591474245115453`", ",", 
     "0.9616150642766612`", ",", "0.8833276969901929`", ",", 
     RowBox[{"-", "0.22506393861892582`"}], ",", "1.2697471120824229`", ",", 
     RowBox[{"-", "0.8656126482213439`"}], ",", "1.007072135785007`", ",", 
     "1.275232180556476`", ",", "1.2175141242937852`", ",", 
     "1.0028116213683225`", ",", "13.027906976744188`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.3809274235702178`", ",", "0.9889329143325593`", ",", 
     "1.0121310881767156`", ",", "0.9585728779168076`", ",", 
     "0.2020460358056266`", ",", "1.0536996565719638`", ",", 
     "1.0553359683794468`", ",", "1.007072135785007`", ",", 
     "1.4265968626040195`", ",", "1.1242937853107344`", ",", 
     "1.0243673851921276`", ",", "13.069767441860465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9983192083352687`", ",", "0.9852438857767456`", ",", 
     "0.9646931015752309`", ",", "0.9928982076428813`", ",", 
     "1.3913043478260871`", ",", "0.4274118014361536`", ",", 
     "1.0474308300395256`", ",", "1.0084865629420083`", ",", 
     "0.9904571661191528`", ",", "1.2824858757062148`", ",", 
     "1.1012183692596065`", ",", "7.90232558139535`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8369774476913723`", ",", "0.9852438857767456`", ",", 
     "0.9583559659605287`", ",", "0.9472438282042611`", ",", 
     "0.7902813299232737`", ",", "0.5928816734311583`", ",", 
     "1.300395256916996`", ",", "1.0014144271570014`", ",", 
     "0.8483276372965758`", ",", "1.3559322033898304`", ",", 
     "1.0899718837863168`", ",", "7.939534883720931`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1661742761569547`", ",", "0.9777291979778658`", ",", 
     "0.9840666304544631`", ",", "0.9852891444031113`", ",", "1.`", ",", 
     "0.9200749297533563`", ",", "1.0474308300395256`", ",", 
     "1.0084865629420083`", ",", "1.1991829895199233`", ",", 
     "0.9887005649717514`", ",", "0.9587628865979381`", ",", 
     "8.265116279069767`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658386873908212`", ",", "0.9591474245115453`", ",", 
     "0.9500271591526344`", ",", "0.9355765979032804`", ",", 
     "0.7314578005115089`", ",", "0.9522322822354042`", ",", 
     "1.185770750988142`", ",", "1.0056577086280056`", ",", 
     "1.2088346950174667`", ",", "1.231638418079096`", ",", 
     "1.021555763823805`", ",", "8.265116279069767`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658386873908212`", ",", "0.9777291979778658`", ",", 
     "1.0018106101756292`", ",", "0.924247548190734`", ",", 
     RowBox[{"-", "0.17135549872122763`"}], ",", "1.1710896034967218`", ",", 
     "1.1264822134387351`", ",", "1.0042432814710043`", ",", 
     "1.2088346950174667`", ",", "1.231638418079096`", ",", 
     "1.021555763823805`", ",", "8.265116279069767`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0553951879785366`", ",", "1.`", ",", "1.000181061017563`", ",", 
     "0.9996618194115657`", ",", "0.9923273657289003`", ",", 
     "0.9790821105213863`", ",", "0.9683794466403162`", ",", 
     "1.016973125884017`", ",", "1.066392751990457`", ",", 
     "0.9689265536723163`", ",", "0.9821930646672915`", ",", 
     "4.8465116279069775`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.110790375957073`", ",", "0.9740401694220522`", ",", 
     "0.9795401050153902`", ",", "0.9797091646939465`", ",", 
     "0.9820971867007673`", ",", "0.9300655635341867`", ",", 
     "1.0276679841897234`", ",", "1.0084865629420083`", ",", 
     "1.1327902375294663`", ",", "0.9915254237288136`", ",", 
     "0.970946579194002`", ",", "5.920930232558139`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0553937899509052`", ",", "0.9889329143325593`", ",", 
     "0.9923954372623573`", ",", "0.9928982076428813`", ",", 
     "0.9974424552429668`", ",", "1.0106150483921323`", ",", 
     "0.9841897233201581`", ",", "1.0084865629420083`", ",", 
     "1.066392751990457`", ",", "0.9943502824858758`", ",", 
     "0.9840674789128397`", ",", "3.46046511627907`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9999929580830412`", ",", "1.018718404153573`", ",", 
     "1.035487959442332`", ",", "1.0157253973621914`", ",", 
     "0.7365728900255754`", ",", "0.45238838588822977`", ",", 
     "1.2055335968379446`", ",", "1.0042432814710043`", ",", "1.`", ",", 
     "1.`", ",", "1.`", ",", 
     RowBox[{"-", "14.325581395348838`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8940520810858098`", ",", "0.9963109714441863`", ",", 
     "0.9856961796125294`", ",", "0.9890091308758878`", ",", 
     "1.0358056265984656`", ",", "1.1467374336559475`", ",", 
     "1.217391304347826`", ",", "1.0141442715700142`", ",", 
     "0.92426322316788`", ",", "0.9802259887005651`", ",", 
     "0.9587628865979381`", ",", "2.0232558139534884`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8386582911349049`", ",", "0.9963109714441863`", ",", 
     "0.9855151185949664`", ",", "0.9888400405816706`", ",", 
     "1.0383631713554988`", ",", "1.1626600062441461`", ",", 
     "1.2134387351778655`", ",", "1.0084865629420083`", ",", 
     "0.8578704711774228`", ",", "1.0169491525423728`", ",", 
     "0.9756326148078724`", ",", "0.586046511627907`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.740063528623458*^9},
 CellLabel->
  "Out[480]=",ExpressionUUID->"b2d8f571-669f-4c50-84cf-bc374bff9b2d"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logMU", "=", 
  RowBox[{"Drop", "[", 
   RowBox[{"logMU", ",", 
    RowBox[{"{", "43", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.740063484979591*^9, 3.740063555471634*^9}},
 CellLabel->
  "In[481]:=",ExpressionUUID->"e7678b75-13d2-4322-a379-7e3feefb12cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.72`", ",", "1.96`", ",", "2.02`", ",", "1.95`", ",", "1.9`", ",", 
   "1.71`", ",", "1.69`", ",", "1.68`", ",", "1.66`", ",", "1.36`", ",", 
   "1.33`", ",", "1.25`", ",", "1.29`", ",", "1.27`", ",", "1.14`", ",", 
   "1.36`", ",", "1.11`", ",", "1.`", ",", "1.05`", ",", "1.`", ",", "1.38`", 
   ",", "0.87`", ",", "0.86`", ",", "0.83`", ",", "0.84`", ",", "0.84`", ",", 
   "0.81`", ",", "0.76`", ",", "0.66`", ",", "0.68`", ",", "0.67`", ",", 
   "0.59`", ",", "0.58`", ",", "0.46`", ",", "0.43`", ",", "0.41`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.33`", ",", "0.23`", ",", 
   "0.03`", ",", 
   RowBox[{"-", "0.03`"}], ",", 
   RowBox[{"-", "0.06`"}], ",", 
   RowBox[{"-", "0.67`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7400635570732117`*^9},
 CellLabel->
  "Out[481]=",ExpressionUUID->"14239e47-d37d-43b8-8f9a-178f16caa55b"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "inputfinal", "]"}]], "Input",
 CellChangeTimes->{{3.740061992296571*^9, 3.740062000548358*^9}, 
   3.7400632560246763`*^9},
 CellLabel->
  "In[483]:=",ExpressionUUID->"fbac4085-2089-439c-b9bb-c7fecf1998d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"45", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.7400620020238543`*^9, 3.7400631995039682`*^9, 
  3.74006326512855*^9, 3.740063580237212*^9},
 CellLabel->
  "Out[483]=",ExpressionUUID->"8445735c-550f-4d25-84c6-4b0ffefa5dd4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "command", " ", "to", " ", "split", " ", "observations", " ", "randomly"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7400610733847446`*^9, 
  3.740061091697364*^9}},ExpressionUUID->"b700d3ef-d43d-4812-bf58-\
65a22886bc20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainingIndices", "=", 
  RowBox[{"Sort", "@", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Range", "[", "45", "]"}], ",", "35"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.740063301142845*^9, 3.740063341168515*^9}, {
  3.74006358488455*^9, 3.7400635849755497`*^9}, {3.740063818102213*^9, 
  3.7400638251061296`*^9}, {3.7400638632721977`*^9, 3.74006386473177*^9}},
 CellLabel->
  "In[494]:=",ExpressionUUID->"1126e967-6955-41b3-a04d-4502c7a483c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "6", ",", "7", ",", "9", ",", "10", 
   ",", "11", ",", "12", ",", "13", ",", "14", ",", "17", ",", "18", ",", 
   "19", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", ",", "26", 
   ",", "27", ",", "29", ",", "30", ",", "32", ",", "33", ",", "34", ",", 
   "35", ",", "38", ",", "39", ",", "40", ",", "41", ",", "42", ",", "43", 
   ",", "45"}], "}"}]], "Output",
 CellChangeTimes->{{3.740063320933115*^9, 3.7400633419772673`*^9}, 
   3.7400635890882072`*^9, 3.740063826725049*^9, 3.7400638654173613`*^9},
 CellLabel->
  "Out[494]=",ExpressionUUID->"7b2cbd5d-b41f-4992-a6b9-be9db78ab7b3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{
   "inputfinal", "\[LeftDoubleBracket]", "trainingIndices", 
    "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740063355718787*^9, 3.740063383372497*^9}, 
   3.740063591451613*^9, {3.7400637131453733`*^9, 3.740063713381859*^9}, {
   3.740063829895092*^9, 3.740063830634275*^9}, 3.740063870088669*^9},
 CellLabel->
  "In[495]:=",ExpressionUUID->"8d024a86-019d-4d82-b454-f3aeb478f00b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingResults", "=", 
   RowBox[{
   "logMU", "\[LeftDoubleBracket]", "trainingIndices", 
    "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740063605928694*^9, 3.740063635607089*^9}, {
   3.740063719322806*^9, 3.740063719606303*^9}, {3.740063837647252*^9, 
   3.7400638380585403`*^9}, 3.74006387461493*^9},
 CellLabel->
  "In[496]:=",ExpressionUUID->"c1e73aa3-f346-48b7-8d72-5c784a75a8c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testIndices", "=", 
  RowBox[{"Complement", "[", 
   RowBox[{
    RowBox[{"Range", "[", "45", "]"}], ",", "trainingIndices"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7400638037885857`*^9, 3.7400638557798147`*^9}},
 CellLabel->
  "In[497]:=",ExpressionUUID->"0ba87923-dc0a-47f9-95e2-f04ca7ad6983"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "8", ",", "15", ",", "16", ",", "20", ",", "28", ",", "31", ",", 
   "36", ",", "37", ",", "44"}], "}"}]], "Output",
 CellChangeTimes->{3.740063856401866*^9, 3.740063889060755*^9},
 CellLabel->
  "Out[497]=",ExpressionUUID->"afe66902-00e9-4cb3-b56e-bc0132fa5965"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testData", "=", 
  RowBox[{
  "inputfinal", "\[LeftDoubleBracket]", "testIndices", 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.740063912798501*^9, 3.7400639635001497`*^9}},
 CellLabel->
  "In[499]:=",ExpressionUUID->"28698bde-d95d-4967-afcf-888fa1d50dec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.9494523433868608`", ",", "0.9243065992621943`", ",", 
     "0.9069346369726599`", ",", "0.8931349340547853`", ",", 
     "0.6982097186700768`", ",", "0.3487355604121136`", ",", 
     "0.5019762845849802`", ",", "1.0042432814710043`", ",", 
     "0.9906607087068892`", ",", "0.9661016949152543`", ",", 
     "0.9465791940018744`", ",", "10.460465116279071`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.115620095414868`", ",", "0.9182948490230907`", ",", 
     "0.9098316132536666`", ",", "0.8961785593506932`", ",", 
     "0.7033248081841433`", ",", "0.3902591320636903`", ",", 
     "0.48221343873517786`", ",", "1.0084865629420083`", ",", 
     "1.1898484317753646`", ",", "0.9576271186440678`", ",", 
     "0.9175257731958762`", ",", "15.748837209302327`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1596595191727324`", ",", "0.966662112310425`", ",", 
     "0.9684953829440521`", ",", "0.9731146432194792`", ",", 
     "1.040920716112532`", ",", "0.404932875429285`", ",", 
     "1.0790513833992095`", ",", "1.0084865629420083`", ",", 
     "1.13258669494173`", ",", "1.228813559322034`", ",", 
     "1.1096532333645734`", ",", "7.6465116279069765`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1107917739847044`", ",", "0.9294985653777839`", ",", 
     "0.9185225420966866`", ",", "0.9352384173148461`", ",", 
     "1.1713554987212278`", ",", "1.0096784264751795`", ",", 
     "1.3952569169960474`", ",", "0.9999999999999999`", ",", 
     "1.1327902375294663`", ",", "0.9689265536723163`", ",", 
     "0.9690721649484536`", ",", "8.934883720930234`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9983234024181634`", ",", "0.9294985653777839`", ",", 
     "0.8995111352525801`", ",", "0.883665877578627`", ",", 
     "0.659846547314578`", ",", "0.4698719950046831`", ",", 
     "1.2885375494071145`", ",", "1.0113154172560113`", ",", 
     "0.9904571661191528`", ",", "1.2824858757062148`", ",", 
     "1.1012183692596065`", ",", "7.90232558139535`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1596581211451007`", ",", "0.9591474245115453`", ",", 
     "0.9561832337497737`", ",", "0.9458911058505243`", ",", 
     "0.8005115089514067`", ",", "0.13331251951295658`", ",", 
     "1.118577075098814`", ",", "0.9929278642149929`", ",", 
     "1.13258669494173`", ",", "1.228813559322034`", ",", 
     "1.1096532333645734`", ",", "6.018604651162791`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8940605210304002`", ",", "0.962836453067359`", ",", 
     "0.9493029150823828`", ",", "0.9748055461616503`", ",", 
     "1.3350383631713556`", ",", "0.797065251326881`", ",", 
     "1.4940711462450593`", ",", "1.0084865629420083`", ",", 
     "0.92426322316788`", ",", "0.9802259887005651`", ",", 
     "0.9587628865979381`", ",", 
     RowBox[{"-", "5.883720930232558`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8369774476913723`", ",", "0.9852438857767456`", ",", 
     "0.9583559659605287`", ",", "0.9472438282042611`", ",", 
     "0.7902813299232737`", ",", "0.5928816734311583`", ",", 
     "1.300395256916996`", ",", "1.0014144271570014`", ",", 
     "0.8483276372965758`", ",", "1.3559322033898304`", ",", 
     "1.0899718837863168`", ",", "7.939534883720931`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1661742761569547`", ",", "0.9777291979778658`", ",", 
     "0.9840666304544631`", ",", "0.9852891444031113`", ",", "1.`", ",", 
     "0.9200749297533563`", ",", "1.0474308300395256`", ",", 
     "1.0084865629420083`", ",", "1.1991829895199233`", ",", 
     "0.9887005649717514`", ",", "0.9587628865979381`", ",", 
     "8.265116279069767`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8940520810858098`", ",", "0.9963109714441863`", ",", 
     "0.9856961796125294`", ",", "0.9890091308758878`", ",", 
     "1.0358056265984656`", ",", "1.1467374336559475`", ",", 
     "1.217391304347826`", ",", "1.0141442715700142`", ",", 
     "0.92426322316788`", ",", "0.9802259887005651`", ",", 
     "0.9587628865979381`", ",", "2.0232558139534884`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7400639642677593`*^9},
 CellLabel->
  "Out[499]=",ExpressionUUID->"9341a76e-ed43-43d6-b295-4f3f1ce7e89e"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testResults", "=", 
  RowBox[{
  "logMU", "\[LeftDoubleBracket]", "testIndices", 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.740063973612764*^9, 3.740063977738372*^9}, {
  3.7400640249739037`*^9, 3.7400640272030973`*^9}},
 CellLabel->
  "In[500]:=",ExpressionUUID->"4c6d9c31-16f9-4e4e-8632-a179ad586af5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.9`", ",", "1.68`", ",", "1.14`", ",", "1.36`", ",", "1.`", ",", "0.76`", 
   ",", "0.67`", ",", "0.41`", ",", "0.38`", ",", 
   RowBox[{"-", "0.06`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7400640286939173`*^9},
 CellLabel->
  "Out[500]=",ExpressionUUID->"173b42de-e8ce-4451-bd2e-ebc72021099e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predict", "Section",
 CellChangeTimes->{{3.7397176223262377`*^9, 3.739717629954794*^9}, {
  3.73971809182152*^9, 
  3.739718093056931*^9}},ExpressionUUID->"14e09e19-63d0-40cd-933d-\
79f857c4a942"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{"trainingData", "\[Rule]", "trainingResults"}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7397176315254803`*^9, 3.739717672195689*^9}, {
  3.7397177591274347`*^9, 3.7397177631548777`*^9}},
 CellLabel->
  "In[498]:=",ExpressionUUID->"2a018429-48b4-46e5-8a8a-491578d97d56"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "12", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "12", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["35", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[
   Association[
   "ExampleNumber" -> 35, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Length" -> 12]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 35, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {1.4270386577052951`, 0.983276403880312, 
                    0.9773621996327049, 0.9418715879994203, 
                    0.4406284252831567, 0.9032157352482048, 
                    0.5323546019198193, 1.0055768842190342`, 
                    1.117909854301375, 1.1101694915254239`, 
                    1.0156111929307807`, 7.019003322259136}, "Method" -> 
                   "Naive", "VectorLength" -> 12, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {1.4270386577052951`, 0.983276403880312, 
                    0.9773621996327049, 0.9418715879994203, 
                    0.4406284252831567, 0.9032157352482048, 
                    0.5323546019198193, 1.0055768842190342`, 
                    1.117909854301375, 1.1101694915254239`, 
                    1.0156111929307807`, 7.019003322259136}, 
                   "StandardDeviation" -> {0.7706038862878901, 
                    0.03962061353372552, 0.04289572017040489, 
                    0.049872540064823064`, 0.6050598875853601, 
                    0.32053083736775817`, 0.7844128042316107, 
                    0.0047809533791822656`, 0.1314433964778832, 
                    0.1253913678267591, 0.07467368963097235, 
                    6.046019133679564}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 12, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 12]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                   True, "Invertibility" -> "Perfect", "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Padder" -> 
                MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                MachineLearning`MLProcessor["FromMLDataset", 
                  Association[
                  "DatasetFormat" -> Automatic, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 9]], 
                   "InversePreprocessor" -> 
                   MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                "Model" -> Association["Matrix" -> CompressedData["
1:eJwBcQOO/CFib1JlAgAAAAwAAAAJAAAAWp3VGK4q1b/puueME+POPyxvHEtY
lN2/pgWK8jEFyj+IopNKLCmhv9CtwEyfPZW/wrFuXuprwr9KXZXCuizSP2We
jkljAcM/LdO9qJwRvz8EOsJq5SHYP7q6DHFriMM/1N+S4PSl2j8cRWVlt2ng
v64IiB7pAdK/MWY46VUavz+c9qmQhn3Zv9K02BJQ/dY/xr9La/Admj9Nw5Bm
Am7iP7BY8Mm/RZs/Fi1IZ5z3tb++OQYwnWq3vzO354aKtd0/cI7OtzhTpz/6
mrfDwguwv+ApPidqZde/GIFHtbHZ1j93TDKAOnbXP0SIQHcK/Lm/8lSQkK1S
qb9agdaxawOWP2yEMFNLVcQ/GtXeK9re0D8KXRLuQFW7P6lfzdL8QdC/UTIj
SJ3e2j9TBz9YW6e+v1kObd3SlsO/BPoiBp/mmD8rPosR1Uq+P/faFZFeFtG/
JVnXJt8a0j94m98Jly/JPyAp13MyL6k/QoHoEM0I0b+EUG6hApy0P8IVdh0q
9rc/1Anwf4Ws4r8Qq4RBJ6DXvzwznyTKjJM/PmPyPQgG2z+kFd7f2hPWP3Fd
XYMkcNc/wr/kc1Wy1D/wqL9OELvEP+VCDI4kGdK/ZLueeMuYyL/FfXhSP6Pd
P8DJFI7iEZm/Zi7UwILv0D/EGDtDT4PQv1yQ8Cebwdg/Ap8MmZPHzj/Aw/23
p97Pv8M+dBqL4dm/YJV44JhWx7/nwJl/XIXgvxepukMlPdG/4MJu5WV0sD+y
hsZZGjOzv3SU7rlMn9y/cfzRZgRo1L+o3fnBCnS6v/rKuCwR1du/VA3tdHcR
0L9sD9SLmn6Rv6uh4YF0GsY/sB0V9cT6jD8kPwFSnVrkv8axGVG4bKU/ToWw
ZJdh1b/cjoYdey+2P/KCMRF/LNg/KFGFp5ysvL+exBHL2kTQPyVRA2Eol9u/
LqwqU+i11z8or6s03kTQv8Arh+nl29e/Cv7hZcxS07+Y3pRZeVjUPxA3S2VH
ade/9HZ054Rcwz9AcVVSwEPGP8PQmhXsK9u/mB0GAZThrT/t12E2gQjLP9h2
m6Luh8K/+iw5Ax2Kx79ZcWD4hMLUv7XqTnzmnbq/u69S9uV+4D9D39ZOLcyX
v0cbIham29c/DLS7J7a65D/U4pxfpQWlP7L9nSRMi6u/dgrGtQ==
                   "], 
                  "Processor" -> MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {1.4270386577052951`, 0.983276403880312, 
                    0.9773621996327049, 0.9418715879994203, 
                    0.4406284252831567, 0.9032157352482048, 
                    0.5323546019198193, 1.0055768842190342`, 
                    1.117909854301375, 1.1101694915254239`, 
                    1.0156111929307807`, 7.019003322259136}, 
                    "StandardDeviation" -> {0.7706038862878901, 
                    0.03962061353372552, 0.04289572017040489, 
                    0.049872540064823064`, 0.6050598875853601, 
                    0.32053083736775817`, 0.7844128042316107, 
                    0.0047809533791822656`, 0.1314433964778832, 
                    0.1253913678267591, 0.07467368963097235, 
                    6.046019133679564}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                  "FinalDimension" -> 9, "Method" -> "Linear"], 
                "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.012659, "MaxTrainingMemory" -> 65280, 
                  "DataMemory" -> 3704, "FunctionMemory" -> 23288, 
                  "LanguageVersion" -> {11.3, 0}, "Date" -> 
                  DateObject[{
                    2018, 7, 8, 14, 38, 17.860495`8.004468475626044}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 12, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
             "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
             7263179337424669307]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {1.4270386577052951`, 0.983276403880312, 
              0.9773621996327049, 0.9418715879994203, 0.4406284252831567, 
              0.9032157352482048, 0.5323546019198193, 1.0055768842190342`, 
              1.117909854301375, 1.1101694915254239`, 1.0156111929307807`, 
              7.019003322259136}, 
             "StandardDeviation" -> {0.7706038862878901, 0.03962061353372552, 
              0.04289572017040489, 0.049872540064823064`, 0.6050598875853601, 
              0.32053083736775817`, 0.7844128042316107, 
              0.0047809533791822656`, 0.1314433964778832, 0.1253913678267591, 
              0.07467368963097235, 6.046019133679564}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1519634882283037191]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Numerical"]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 5764960275667318102]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {0.967142857142857}, 
             "StandardDeviation" -> {0.6708398634912657}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1973973609475737390]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 2169264213102441839]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
             "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (0.967142857142857 + 
       0.6708398634912657 #& ), 
      "ProcessorFunction" -> (-1.441689603998092 + 1.4906687190526804` #& ), 
      "Name" -> "value", 
      "Quantiles" -> {-2.440437645763388, 2.612929311825199}], "Prior" -> 
    Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association["MeanFunction" -> LinearLayer[
        Association[
        "Type" -> "Linear", "Arrays" -> 
         Association[
          "Weights" -> 
           RawArray["Real32",{{
             0.24767149984836578`, -0.02493109740316868, -0.1526086926460266, \
-0.20947135984897614`, -0.10779456794261932`, -0.28909188508987427`, \
-0.06067986413836479, -0.18110749125480652`, 
             0.05621052533388138, -0.22500456869602203`, 0.08543354272842407, 
             0.17623630166053772`}}], "Biases" -> RawArray["Real32",{0.}]], 
         "Parameters" -> 
         Association[
          "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 12, 
           "$InputDimensions" -> {12}], "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]], 
         "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
        Association["Version" -> "11.3.5"]], 
      "DistributionData" -> {NormalDistribution, 0.7098005885413374}, 
      "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {-3.584434336646934*^-16, -1.1419436824715895`*^-14, \
-1.9476483917709887`*^-15, 8.881784197001252*^-17, 1.2053849981644556`*^-16, 
              1.0785023667787235`*^-16, -3.5437922437811914`*^-17, \
-3.715440653552702*^-14, 
              3.60981086292408*^-15, -1.0911906299172966`*^-15, \
-1.5511401686905759`*^-15, 1.586032892321652*^-17}, 
             "StandardDeviation" -> {1.0000000000000007`, 1.000000000000261, 
              1.0000000000000129`, 1.000000000000005, 1., 0.9999999999999999, 
              1., 1.0000000000126517`, 0.9999999999999638, 
              1.0000000000000027`, 1.0000000000000402`, 0.9999999999999998}, 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 5596334997148494819]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "NumericalVector", "Weight" -> 1],
              "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Method" -> "LinearRegression", "Options" -> 
      Association[
       "L1Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L2Regularization" -> 
        Association["Value" -> 10., "Options" -> Association[]], 
        "OptimizationMethod" -> 
        Association["Value" -> "NormalEquation", "Options" -> Association[]], 
        MaxIterations -> 
        Association["Value" -> 30, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "StandardDeviation", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[0.7252096564311997, 0.08333860539261141], 
         "StandardDeviation" -> 
         PlusMinus[0.5704088721103304, 0.04976437953862791], "EvaluationTime" -> 
         0.00006657142857142856, "TestSize" -> 35, "TrainingSize" -> 28, 
         "TrainingTime" -> 0.011559833333333333`, "TrainingMemory" -> 
         67266.66666666666, "ModelMemory" -> 14904., "ExperimentCount" -> 5, 
         "ModelUtility" -> 0.7442483033913161, "MeanCrossEntropyHistory" -> {
           PlusMinus[0.9157729709220076, 0.2654372421034144], 
           PlusMinus[0.6833170140285965, 0.10101117418074781`], 
           PlusMinus[0.8529281367731758, 0.2544674066365382], 
           PlusMinus[0.6820112322985064, 0.1247896504500001], 
           PlusMinus[0.8335246270866357, 0.22174720158218636`]}, 
         "StandardDeviationHistory" -> {
           PlusMinus[0.6187296481839631, 0.10723477552680796`], 
           PlusMinus[0.5290439241766735, 0.09549476519815182], 
           PlusMinus[0.5999092304606637, 0.11484524772556423`], 
           PlusMinus[0.5340934758839755, 0.09695137258089895], 
           PlusMinus[0.5928329235930052, 0.10694031000180362`]}, 
         "Configuration" -> {
          "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
           10., "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
         "FinalTrainingSize" -> 35], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
          "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
          "ModelMemory", "ExperimentCount", "ModelUtility", 
          "MeanCrossEntropyHistory", "StandardDeviationHistory", 
          "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 5], 
          TypeSystem`Vector[TypeSystem`AnyType, 5], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 135875727902556]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.6704455705461734`, 2.5549033001536556`], 
              "StandardDeviation" -> 
              PlusMinus[0.6561014645993389, 0.254373661503456], 
              "EvaluationTime" -> 0.000018125, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.011080249999999998`, 
              "TrainingMemory" -> 62400., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.6109587128042414, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[7.7396711741209145`, 1.8190520220389148`], 
                PlusMinus[9.960889063516028, 4.826043990537847], 
                PlusMinus[1.4817948301207076`, 0.29349002758603776`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.7730121490742902, 0.07808605681421385], 
                PlusMinus[1.4194367686947527`, 0.3406879578384447], 
                PlusMinus[0.5928120635905844, 0.04957626680787324]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.9094133992454765, 1.0446035497275232`], 
              "StandardDeviation" -> 
              PlusMinus[0.6132490411471044, 0.15978727697953088`], 
              "EvaluationTime" -> 0.00007416666666666666, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.011400000000000002`, 
              "TrainingMemory" -> 67248., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.6694496186093924, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.9971546360196271, 0.3547024707497569], 
                PlusMinus[0.7902784938125905, 0.27897840750723035`], 
                PlusMinus[6.081703211189259, 4.644974441989744], 
                PlusMinus[0.9415907005895249, 0.21821315162106078`], 
                PlusMinus[0.901399030534776, 0.31235893488664546`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6253788062804945, 0.1123031684715433], 
                PlusMinus[0.5752935445325018, 0.12674482807753637`], 
                PlusMinus[1.3563685177032498`, 0.5319831042132458], 
                PlusMinus[0.6087445612845422, 0.0860555799314327], 
                PlusMinus[0.6051978087132479, 0.11427065765668692`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00007416666666666666, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.6132490411471044, 0.15978727697953088`], 
             "TrainingMemory" -> 67248., "TrainingTime" -> 
             0.015070249999999999`], "Index" -> 1], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.4478601668096447`, 0.15596730394026012`], 
              "StandardDeviation" -> 
              PlusMinus[0.6732529833330375, 0.06080564944350356], 
              "EvaluationTime" -> 0.000016357142857142853`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.009472499999999998, 
              "TrainingMemory" -> 62368., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.6301785441426153, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.7732736000834992`, 0.07269067651973668], 
                PlusMinus[1.3302268959439343`, 0.06378196856421375], 
                PlusMinus[1.3102333607030041`, 0.06490511840699525]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.617231399389502, 0.08188487042601822], 
                PlusMinus[0.7101018492464034, 0.095092668926719], 
                PlusMinus[0.7125631214457642, 0.09583629213365256]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.0751210975243366`, 0.09183341859300152], 
              "StandardDeviation" -> 
              PlusMinus[0.6620481809974426, 0.08326195311499505], 
              "EvaluationTime" -> 0.00006435714285714286, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.009607833333333333, 
              "TrainingMemory" -> 67290.66666666666, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.6364120870574952, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.2028850767977888`, 0.2608836811656118], 
                PlusMinus[1.0396858293706455`, 0.1452344938853556], 
                PlusMinus[1.186743506916246, 0.2883200348937499], 
                PlusMinus[1.0236897063425374`, 0.1390376454467618], 
                PlusMinus[1.1451553215849501`, 0.2500094797641587]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8097938378407575, 0.17855227891912617`], 
                PlusMinus[0.6086331739283443, 0.11776959235579187`], 
                PlusMinus[0.7959928837835983, 0.21666366272211426`], 
                PlusMinus[0.5764687933523324, 0.11962707808249715`], 
                PlusMinus[0.7559992615421887, 0.20021672334391452`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00006435714285714286, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.6620481809974426, 0.08326195311499505], 
             "TrainingMemory" -> 67290.66666666666, "TrainingTime" -> 
             0.012835241666666665`], "Index" -> 2], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^-6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.6704656465390413`, 2.5572308910843846`], 
              "StandardDeviation" -> 
              PlusMinus[0.65611912531132, 0.25456971091632413`], 
              "EvaluationTime" -> 0.000013901785714285714`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.01006875, 
              "TrainingMemory" -> 62368., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.6109095725833716, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[7.741612138763352, 1.8195562630749473`], 
                PlusMinus[9.970239525448584, 4.831243169005147], 
                PlusMinus[1.4818609991828329`, 0.2935079307747998]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.7730940773238577, 0.0780985818333149], 
                PlusMinus[1.4200774856351166`, 0.34090496863826475`], 
                PlusMinus[0.5928223499528305, 0.04957782833741659]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.9368236818782579, 1.2740413573657619`], 
              "StandardDeviation" -> 
              PlusMinus[0.6287300292035675, 0.17033955501768655`], 
              "EvaluationTime" -> 0.00005747619047619046, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.009391666666666666, 
              "TrainingMemory" -> 67290.66666666666, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.6516816423859524, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.0259605480925365`, 0.4811179402311017], 
                PlusMinus[0.779252573569911, 0.2727721515061648], 
                PlusMinus[7.28604468353713, 5.3062171592600285`], 
                PlusMinus[1.0314027416884073`, 0.3358659922610018], 
                PlusMinus[1.109593283323756, 0.5082779468371811]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6282549415827812, 0.1378292290367715], 
                PlusMinus[0.5705717344971007, 0.12327878761050234`], 
                PlusMinus[1.411604257490523, 0.5196796051021049], 
                PlusMinus[0.6279192459484053, 0.10264018675649443`], 
                PlusMinus[0.6481038334172257, 0.13715136666652233`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00005747619047619046, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.6287300292035675, 0.17033955501768655`], 
             "TrainingMemory" -> 67290.66666666666, "TrainingTime" -> 
             0.013355833333333332`], "Index" -> 3], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.410932128184331, 0.8399762944702441], 
              "StandardDeviation" -> 
              PlusMinus[0.6433663911471574, 0.16251451536512737`], 
              "EvaluationTime" -> 0.000021232142857142852`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.0106725, 
              "TrainingMemory" -> 62388., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.6390781022202909, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[2.0560605680536517`, 0.47274601877557126`], 
                PlusMinus[3.9686902585155206`, 1.7307533612025021`], 
                PlusMinus[1.2151393064749778`, 0.228788464193614]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.7202600359360047, 0.07314422317220953], 
                PlusMinus[1.1124459090468144`, 0.2422354753070019], 
                PlusMinus[0.5883339416695919, 0.04960321285019926]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.8820661070651848, 0.12203624885745351`], 
              "StandardDeviation" -> 
              PlusMinus[0.6039068491054796, 0.047646190634215255`], 
              "EvaluationTime" -> 0.00005314285714285714, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.009336333333333334, 
              "TrainingMemory" -> 67280., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.7041210341319875, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.9222920764813363, 0.3302188706571544], 
                PlusMinus[0.7703748500054425, 0.24748412583515433`], 
                PlusMinus[1.0700494468992277`, 0.2882589112060302], 
                PlusMinus[0.87610462015625, 0.18512787539799774`], 
                PlusMinus[0.8373654084114779, 0.26559408378547394`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6059906289005592, 0.113082066073011], 
                PlusMinus[0.567984458146099, 0.11949638303666837`], 
                PlusMinus[0.6522440676875176, 0.09385382646596616], 
                PlusMinus[0.5915201784248552, 0.08513098588964459], 
                PlusMinus[0.5868675263829711, 0.10932446544600856`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00005314285714285714, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.6039068491054796, 0.047646190634215255`], 
             "TrainingMemory" -> 67280., "TrainingTime" -> 
             0.013940216666666666`], "Index" -> 4], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.0001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.6704636567605493`, 2.557000524026678], 
              "StandardDeviation" -> 
              PlusMinus[0.6561173730559121, 0.2545502689240211], 
              "EvaluationTime" -> 0.000020794642857142855`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.01036075, 
              "TrainingMemory" -> 62368., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.6109144421995407, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[7.741422465975189, 1.8195068958886123`], 
                PlusMinus[9.969313400191952, 4.830728096037922], 
                PlusMinus[1.4818544734169998`, 0.293506161577075]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.773085955759375, 0.07809733987047861], 
                PlusMinus[1.4200139474386977`, 0.3408834463557113], 
                PlusMinus[0.5928213285848437, 0.04957767294430942]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.9100864851288517, 1.0924702020417643`], 
              "StandardDeviation" -> 
              PlusMinus[0.6132329419482875, 0.16195552894119583`], 
              "EvaluationTime" -> 0.00006297619047619047, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.009926833333333333, 
              "TrainingMemory" -> 67290.66666666666, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.6690166659418293, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.9991704750452521, 0.3727913601691113], 
                PlusMinus[0.7880240439494874, 0.27918484346706596`], 
                PlusMinus[6.321850634091037, 4.811409809288829], 
                PlusMinus[0.9512155924873539, 0.23298029215525365`], 
                PlusMinus[0.9029976533488767, 0.32652568329882486`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6247202771639911, 0.1158163567332268], 
                PlusMinus[0.574215535488998, 0.12605098033168677`], 
                PlusMinus[1.365769916002678, 0.5322434054196541], 
                PlusMinus[0.6102739660155582, 0.08800322787449304], 
                PlusMinus[0.6040668824409284, 0.11651563066264672`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00006297619047619047, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.6132329419482875, 0.16195552894119583`], 
             "TrainingMemory" -> 67290.66666666666, "TrainingTime" -> 
             0.013835141666666667`], "Index" -> 5], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.447760969442813, 0.1559491955974712], 
              "StandardDeviation" -> 
              PlusMinus[0.6731996413420238, 0.06080896857860621], 
              "EvaluationTime" -> 0.000020053571428571425`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.0096675, 
              "TrainingMemory" -> 62352., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.6302269785166329, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.773112896204118, 0.07268284522643795], 
                PlusMinus[1.330108009897086, 0.06378512748853765], 
                PlusMinus[1.3101402714609105`, 0.06490402192468918]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6171588474444694, 0.08186866732924418], 
                PlusMinus[0.7100812368854859, 0.0950958516238887], 
                PlusMinus[0.7125284068246032, 0.09582735198056942]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.0747637924360027`, 0.09182207577902639], 
              "StandardDeviation" -> 
              PlusMinus[0.6618901107850905, 0.08324926642366974], 
              "EvaluationTime" -> 0.00007388095238095239, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.010644999999999998`, 
              "TrainingMemory" -> 67269.33333333333, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.636562717054618, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.2026976921804007`, 0.26087175122729445`], 
                PlusMinus[1.0393266503720981`, 0.14518551533013363`], 
                PlusMinus[1.1865029519145296`, 0.28836199685049274`], 
                PlusMinus[1.0233085049672812`, 0.138952311115824], 
                PlusMinus[1.144910412941115, 0.24998175402991216`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8096620840718575, 0.178453697825308], 
                PlusMinus[0.6084815874668412, 0.11775855428442075`], 
                PlusMinus[0.7958259389453437, 0.21661993010735994`], 
                PlusMinus[0.5762544829476548, 0.11957271097394466`], 
                PlusMinus[0.7558520969520608, 0.20011241502053545`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00007388095238095239, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.6618901107850905, 0.08324926642366974], 
             "TrainingMemory" -> 67269.33333333333, "TrainingTime" -> 
             0.01339325], "Index" -> 6], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.4467720242564959`, 0.15576847266955404`], 
              "StandardDeviation" -> 
              PlusMinus[0.6726683928540992, 0.060841959416658244`], 
              "EvaluationTime" -> 0.00001850892857142857, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.00988875, 
              "TrainingMemory" -> 62368., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.6307097934890483, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.7715094536756697`, 0.07260471431699383], 
                PlusMinus[1.328922677988519, 0.06381704262609923], 
                PlusMinus[1.309211192926052, 0.06489313635300578]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6164376112712683, 0.08170723720024659], 
                PlusMinus[0.7098764939390027, 0.09512775603286812], 
                PlusMinus[0.7121822904944336, 0.09573813918372633]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.0712234153540905`, 0.09171082065047269], 
              "StandardDeviation" -> 
              PlusMinus[0.660335407034666, 0.08312433783252107], 
              "EvaluationTime" -> 0.00006352380952380951, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.009407333333333332, 
              "TrainingMemory" -> 67301.33333333334, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.638048145271888, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.2008451632079227`, 0.26075125047566994`], 
                PlusMinus[1.0357752202898607`, 0.14470395407470626`], 
                PlusMinus[1.1841239511471033`, 0.28878151956788933`], 
                PlusMinus[1.0195299354065754`, 0.1381063245078299], 
                PlusMinus[1.1424864001165964`, 0.24970575377709173`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8083587875489071, 0.17747852586952212`], 
                PlusMinus[0.6069889342609868, 0.11765390050814796`], 
                PlusMinus[0.7941777714421103, 0.21618583891415544`], 
                PlusMinus[0.574141804569607, 0.11903960331173298`], 
                PlusMinus[0.7543977966237251, 0.19908026881948016`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00006352380952380951, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.660335407034666, 0.08312433783252107], 
             "TrainingMemory" -> 67301.33333333334, "TrainingTime" -> 
             0.013181316666666667`], "Index" -> 7], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.4371774270885247`, 0.1539955474444203], 
              "StandardDeviation" -> 
              PlusMinus[0.6675679079961886, 0.061151311738482594`], 
              "EvaluationTime" -> 0.00001363392857142857, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.008157000000000001, 
              "TrainingMemory" -> 62352., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.6353845715157251, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.7558242407090654`, 0.07184110419790125], 
                PlusMinus[1.3174141827330441`, 0.06416811603828158], 
                PlusMinus[1.3000978199923385`, 0.06479202330511971]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6096375764947548, 0.08015174388865244], 
                PlusMinus[0.7079619941550561, 0.09545416244453962], 
                PlusMinus[0.7088211253713107, 0.09486446676167454]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.0387470972549953`, 0.09078586209251535], 
              "StandardDeviation" -> 
              PlusMinus[0.6470535217398384, 0.08202883577224064], 
              "EvaluationTime" -> 0.00006107142857142856, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.009605666666666665, 
              "TrainingMemory" -> 67280., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.6510320315375256, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.1841831286945945`, 0.2594504789176122], 
                PlusMinus[1.0038157774560292`, 0.14059288492300326`], 
                PlusMinus[1.1627045042302346`, 0.29292605790388193`], 
                PlusMinus[0.9847919860593299, 0.1303223412747969], 
                PlusMinus[1.1204787287367919`, 0.24707298826448493`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.7965723588587814, 0.16868974741820192`], 
                PlusMinus[0.5940467451455556, 0.11703114587495772`], 
                PlusMinus[0.7795594680969217, 0.21212820885537986`], 
                PlusMinus[0.5557341121461502, 0.11463876249048621`], 
                PlusMinus[0.7413795535554736, 0.18975091873233663`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00006107142857142856, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.6470535217398384, 0.08202883577224064], 
             "TrainingMemory" -> 67280., "TrainingTime" -> 
             0.011518983333333333`], "Index" -> 8], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.1], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.6667111596729378`, 2.306672721199015], 
              "StandardDeviation" -> 
              PlusMinus[0.6543792910407902, 0.23729188798633835`], 
              "EvaluationTime" -> 0.000016366071428571427`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.011004000000000002`, 
              "TrainingMemory" -> 62368., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.6154318687955331, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[7.28711302529881, 1.711278458820391], 
                PlusMinus[9.046085251479393, 4.327574402809999], 
                PlusMinus[1.4711001463012565`, 0.29079353905803507`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.765304458419501, 0.07696991731700151], 
                PlusMinus[1.3633430666652127`, 0.32184312205845117`], 
                PlusMinus[0.5918727208649789, 0.04944414894034808]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.903744148132967, 0.5714642106315009], 
              "StandardDeviation" -> 
              PlusMinus[0.6130971851323703, 0.110016908053507], 
              "EvaluationTime" -> 0.0000561190476190476, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.009084833333333334, 
              "TrainingMemory" -> 67290.66666666667, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.6801021341319713, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.9848933942864755, 0.3498783476643399], 
                PlusMinus[0.7885075682841154, 0.2756703355078928], 
                PlusMinus[3.6681163693704817`, 2.508969784211195], 
                PlusMinus[0.9332698912072226, 0.21284261756742212`], 
                PlusMinus[0.8818326856632919, 0.30379738428138797`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6222769089225659, 0.11220666685882934`], 
                PlusMinus[0.5746796867769158, 0.12605325232708647`], 
                PlusMinus[1.0827367267922292`, 0.3608203761314973], 
                PlusMinus[0.6066565637132578, 0.08568491384925014], 
                PlusMinus[0.5995512490262664, 0.11405194844081865`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0000561190476190476, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.6130971851323703, 0.110016908053507], 
             "TrainingMemory" -> 67290.66666666667, "TrainingTime" -> 
             0.014183691666666668`], "Index" -> 9], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.091882299944496, 0.08206325892702747], 
              "StandardDeviation" -> 
              PlusMinus[0.6327828206633195, 0.06577045252018038], 
              "EvaluationTime" -> 0.000022241071428571428`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.011836, 
              "TrainingMemory" -> 62400., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.6686926509321321, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.155671114312379, 0.05454075680378771], 
                PlusMinus[1.1488071022826283`, 0.1914175973080417], 
                PlusMinus[0.9442911292031185, 0.08011072298435992]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6201483998527585, 0.067400792855706], 
                PlusMinus[0.7651792630524896, 0.13421742268618322`], 
                PlusMinus[0.6146318647845826, 0.06303325811864767]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.7252096564311997, 0.08333860539261141], 
              "StandardDeviation" -> 
              PlusMinus[0.5704088721103304, 0.04976437953862791], 
              "EvaluationTime" -> 0.00006657142857142856, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.011559833333333333`, 
              "TrainingMemory" -> 67266.66666666666, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.7442483033913161, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.9157729709220076, 0.2654372421034144], 
                PlusMinus[0.6833170140285965, 0.10101117418074781`], 
                PlusMinus[0.8529281367731758, 0.2544674066365382], 
                PlusMinus[0.6820112322985064, 0.1247896504500001], 
                PlusMinus[0.8335246270866357, 0.22174720158218636`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6187296481839631, 0.10723477552680796`], 
                PlusMinus[0.5290439241766735, 0.09549476519815182], 
                PlusMinus[0.5999092304606637, 0.11484524772556423`], 
                PlusMinus[0.5340934758839755, 0.09695137258089895], 
                PlusMinus[0.5928329235930052, 0.10694031000180362`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00006657142857142856, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.5704088721103304, 0.04976437953862791], 
             "TrainingMemory" -> 67266.66666666666, "TrainingTime" -> 
             0.015881941666666666`], "Index" -> 10], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.01], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[7.7195389765482805`, 2.565270599384934], 
              "StandardDeviation" -> 
              PlusMinus[0.7722779998956942, 0.1102724928833538], 
              "EvaluationTime" -> 0.000021714285714285715`, "TestSize" -> 28, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.007588, 
              "TrainingMemory" -> 62336, "ModelMemory" -> 14904, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.5437688455673522, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[7.7195389765482805`, 1.813920236403566]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.7722779998956942, 0.07797442749616477]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.908746420941261, 0.9773205354171419], 
              "StandardDeviation" -> 
              PlusMinus[0.6132414409094078, 0.15329831766066648`], 
              "EvaluationTime" -> 0.00006061904761904761, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.009341499999999999, 
              "TrainingMemory" -> 67216., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.6708068147534952, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.9958273445687131, 0.35238644617184267`], 
                PlusMinus[0.7903809104785509, 0.2786101921852133], 
                PlusMinus[5.741296386004834, 4.346558451717781], 
                PlusMinus[0.9399145714567386, 0.21630745833704146`], 
                PlusMinus[0.8992833681710994, 0.31020675441120277`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6251773821194132, 0.11193418076991261`], 
                PlusMinus[0.5753660955862842, 0.1267616156277665], 
                PlusMinus[1.3218717433101814`, 0.5112665395141678], 
                PlusMinus[0.6084272742528769, 0.08583856355341044], 
                PlusMinus[0.6047460901497885, 0.11404841533686663`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00006061904761904761, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.6132414409094078, 0.15329831766066648`], 
             "TrainingMemory" -> 67216., "TrainingTime" -> 0.010857525], 
           "Index" -> 11]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["LinearRegression"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Tuple[{
             
             TypeSystem`Struct[{
              "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
               "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
               "ModelMemory", "ExperimentCount", "ModelUtility", 
               "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
              TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
               TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
             
             
             TypeSystem`Struct[{
              "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
               "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
               "ModelMemory", "ExperimentCount", "ModelUtility", 
               "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
              TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Vector[TypeSystem`AnyType, 5], 
               TypeSystem`Vector[TypeSystem`AnyType, 5]}]}], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 11], 
        Association["ID" -> 135871432935260]], "MaxTrainingSize" -> 35, 
      "LastReportingTime" -> 3.740049500162341`16.32545233935645*^9, 
      "PreprocessorEvaluationTime" -> 7.43310546875`1.*^-6, 
      "PreprocessorMemory" -> 39272, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 7, "TimeBudgets" -> 0.7999999999999999, 
          "ElapsedTimes" -> 0.9373729999999999, "ExperimentCounts" -> 31], 
         Association[
         "TrainingSizes" -> 28, "TimeBudgets" -> 1., "ElapsedTimes" -> 
          0.997198, "ExperimentCounts" -> 55]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[135880022869852]], "ID" -> 
         135884317837148]]], "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> {{1.110790375957073, 0.9740401694220522, 
            0.9795401050153902, 0.9797091646939465, 0.9820971867007673, 
            0.9300655635341867, 1.0276679841897234`, 1.0084865629420083`, 
            1.1327902375294663`, 0.9915254237288136, 0.970946579194002, 
            5.920930232558139}}, "ID" -> 6317603181246307725]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 2.704583, "MaxTrainingMemory" -> 683808, "DataMemory" -> 
      14600, "FunctionMemory" -> 219328, "LanguageVersion" -> {11.3, 0}, 
      "Date" -> DateObject[{2018, 7, 8, 14, 38, 20.472868`8.06375367000816}, 
        "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739717680132369*^9, 3.739717766053022*^9, 
  3.740058146878294*^9, 3.7400637324837313`*^9, 3.740063900539363*^9},
 CellLabel->
  "Out[498]=",ExpressionUUID->"d92129fd-25b7-48f3-9933-7673a622bccc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"testData", "\[Rule]", "testResults"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7397178362833767`*^9, 3.739717857026514*^9}, 
   3.739718016503529*^9, {3.739718048670498*^9, 3.7397180507085733`*^9}},
 CellLabel->
  "In[501]:=",ExpressionUUID->"5fe87bd2-9a7f-494a-a35e-e8bb0b7cdd1d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorMeasurementsObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{}, {}, {
                GrayLevel[0.6], 
                Thickness[0.03], 
                Opacity[1.], 
                Dashing[{Small, Small}], 
                
                LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                 11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                 GrayLevel[0.4], 
                 PointSize[0.09], 
                 AbsoluteThickness[1.6], 
                 
                 PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                  2.227816320451859, 2.584653237430766}, {3.043099335090081, 
                  4.798822972025658}, {3.5728355469237116`, 
                  5.9507424155697155`}, {4.158566334344331, 
                  5.2097676165465385`}, {4.824808988689111, 
                  7.23346088027902}, {6.88649660338492, 5.297021421229134}, {
                  7.819072150835878, 6.533166043611269}, {8.437306856915493, 
                  8.81724006216815}, {8.604907881861761, 
                  11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{}, {}, {
                GrayLevel[0.6], 
                Thickness[0.03], 
                Opacity[1.], 
                Dashing[{Small, Small}], 
                
                LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                 11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                 GrayLevel[0.4], 
                 PointSize[0.09], 
                 AbsoluteThickness[1.6], 
                 
                 PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                  2.227816320451859, 2.584653237430766}, {3.043099335090081, 
                  4.798822972025658}, {3.5728355469237116`, 
                  5.9507424155697155`}, {4.158566334344331, 
                  5.2097676165465385`}, {4.824808988689111, 
                  7.23346088027902}, {6.88649660338492, 5.297021421229134}, {
                  7.819072150835878, 6.533166043611269}, {8.437306856915493, 
                  8.81724006216815}, {8.604907881861761, 
                  11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  RowBox[{
                   "0.3454817825121279107`2.270081183618479", "\[PlusMinus]", 
                    "0.0970143329834617374`2."}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorMeasurementsObject[
   Association["Model" -> PredictorFunction[
      Association[
      "ExampleNumber" -> 35, "Input" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association[
             "f1" -> Association[
               "Type" -> "NumericalVector", "Length" -> 12]], "Output" -> 
            Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"NumericalVector"}, 
                   "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                   "ExampleWeights" -> Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
            True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Processors" -> {
              MachineLearning`MLProcessor["ImputeMissing", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Imputer" -> (DimensionReducerFunction[
                  Association[
                  "ExampleNumber" -> 35, "Imputer" -> 
                   MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Fill" -> {1.4270386577052951`, 0.983276403880312, 
                    0.9773621996327049, 0.9418715879994203, 
                    0.4406284252831567, 0.9032157352482048, 
                    0.5323546019198193, 1.0055768842190342`, 
                    1.117909854301375, 1.1101694915254239`, 
                    1.0156111929307807`, 7.019003322259136}, "Method" -> 
                    "Naive", "VectorLength" -> 12, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "RandomImputer" -> 
                   MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {1.4270386577052951`, 0.983276403880312, 
                    0.9773621996327049, 0.9418715879994203, 
                    0.4406284252831567, 0.9032157352482048, 
                    0.5323546019198193, 1.0055768842190342`, 
                    1.117909854301375, 1.1101694915254239`, 
                    1.0156111929307807`, 7.019003322259136}, 
                    "StandardDeviation" -> {0.7706038862878901, 
                    0.03962061353372552, 0.04289572017040489, 
                    0.049872540064823064`, 0.6050598875853601, 
                    0.32053083736775817`, 0.7844128042316107, 
                    0.0047809533791822656`, 0.1314433964778832, 
                    0.1253913678267591, 0.07467368963097235, 
                    6.046019133679564}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 12, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "Preprocessor" -> 
                   MachineLearning`MLProcessor["ToMLDataset", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 12]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Preprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                    True, "Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed"]], "Processor" -> 
                   MachineLearning`MLProcessor["Identity"], "Padder" -> 
                   MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                   MachineLearning`MLProcessor["FromMLDataset", 
                    Association[
                    "DatasetFormat" -> Automatic, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 9]], 
                    "InversePreprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                   "Model" -> Association["Matrix" -> CompressedData["
1:eJwBcQOO/CFib1JlAgAAAAwAAAAJAAAAWp3VGK4q1b/puueME+POPyxvHEtY
lN2/pgWK8jEFyj+IopNKLCmhv9CtwEyfPZW/wrFuXuprwr9KXZXCuizSP2We
jkljAcM/LdO9qJwRvz8EOsJq5SHYP7q6DHFriMM/1N+S4PSl2j8cRWVlt2ng
v64IiB7pAdK/MWY46VUavz+c9qmQhn3Zv9K02BJQ/dY/xr9La/Admj9Nw5Bm
Am7iP7BY8Mm/RZs/Fi1IZ5z3tb++OQYwnWq3vzO354aKtd0/cI7OtzhTpz/6
mrfDwguwv+ApPidqZde/GIFHtbHZ1j93TDKAOnbXP0SIQHcK/Lm/8lSQkK1S
qb9agdaxawOWP2yEMFNLVcQ/GtXeK9re0D8KXRLuQFW7P6lfzdL8QdC/UTIj
SJ3e2j9TBz9YW6e+v1kObd3SlsO/BPoiBp/mmD8rPosR1Uq+P/faFZFeFtG/
JVnXJt8a0j94m98Jly/JPyAp13MyL6k/QoHoEM0I0b+EUG6hApy0P8IVdh0q
9rc/1Anwf4Ws4r8Qq4RBJ6DXvzwznyTKjJM/PmPyPQgG2z+kFd7f2hPWP3Fd
XYMkcNc/wr/kc1Wy1D/wqL9OELvEP+VCDI4kGdK/ZLueeMuYyL/FfXhSP6Pd
P8DJFI7iEZm/Zi7UwILv0D/EGDtDT4PQv1yQ8Cebwdg/Ap8MmZPHzj/Aw/23
p97Pv8M+dBqL4dm/YJV44JhWx7/nwJl/XIXgvxepukMlPdG/4MJu5WV0sD+y
hsZZGjOzv3SU7rlMn9y/cfzRZgRo1L+o3fnBCnS6v/rKuCwR1du/VA3tdHcR
0L9sD9SLmn6Rv6uh4YF0GsY/sB0V9cT6jD8kPwFSnVrkv8axGVG4bKU/ToWw
ZJdh1b/cjoYdey+2P/KCMRF/LNg/KFGFp5ysvL+exBHL2kTQPyVRA2Eol9u/
LqwqU+i11z8or6s03kTQv8Arh+nl29e/Cv7hZcxS07+Y3pRZeVjUPxA3S2VH
ade/9HZ054Rcwz9AcVVSwEPGP8PQmhXsK9u/mB0GAZThrT/t12E2gQjLP9h2
m6Luh8K/+iw5Ax2Kx79ZcWD4hMLUv7XqTnzmnbq/u69S9uV+4D9D39ZOLcyX
v0cbIham29c/DLS7J7a65D/U4pxfpQWlP7L9nSRMi6u/dgrGtQ==
                    "], 
                    "Processor" -> 
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {1.4270386577052951`, 0.983276403880312, 
                    0.9773621996327049, 0.9418715879994203, 
                    0.4406284252831567, 0.9032157352482048, 
                    0.5323546019198193, 1.0055768842190342`, 
                    1.117909854301375, 1.1101694915254239`, 
                    1.0156111929307807`, 7.019003322259136}, 
                    "StandardDeviation" -> {0.7706038862878901, 
                    0.03962061353372552, 0.04289572017040489, 
                    0.049872540064823064`, 0.6050598875853601, 
                    0.32053083736775817`, 0.7844128042316107, 
                    0.0047809533791822656`, 0.1314433964778832, 
                    0.1253913678267591, 0.07467368963097235, 
                    6.046019133679564}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                    "FinalDimension" -> 9, "Method" -> "Linear"], 
                   "PerformanceGoal" -> Automatic, "Invertibility" -> 
                   "Approximate", "Log" -> 
                   Association[
                    "TrainingTime" -> 0.012659, "MaxTrainingMemory" -> 65280, 
                    "DataMemory" -> 3704, "FunctionMemory" -> 23288, 
                    "LanguageVersion" -> {11.3, 0}, "Date" -> 
                    DateObject[{
                    2018, 7, 8, 14, 38, 17.860495`8.004468475626044}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "MacOSX", "SystemWordLength" -> 64, 
                    "Evaluations" -> {}]]][#, "ImputedVectors", 
                  PerformanceGoal -> "Quality"]& ), "Method" -> 
                "DimensionReduction", "VectorLength" -> 12, "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
                7263179337424669307]], 
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Mean" -> {1.4270386577052951`, 0.983276403880312, 
                 0.9773621996327049, 0.9418715879994203, 0.4406284252831567, 
                 0.9032157352482048, 0.5323546019198193, 1.0055768842190342`, 
                 1.117909854301375, 1.1101694915254239`, 1.0156111929307807`, 
                 7.019003322259136}, 
                "StandardDeviation" -> {0.7706038862878901, 
                 0.03962061353372552, 0.04289572017040489, 
                 0.049872540064823064`, 0.6050598875853601, 
                 0.32053083736775817`, 0.7844128042316107, 
                 0.0047809533791822656`, 0.1314433964778832, 
                 0.1253913678267591, 0.07467368963097235, 6.046019133679564}, 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 1519634882283037191]]}, 
            "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association["f1" -> Association["Type" -> "Numerical"]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
            True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Processors" -> {
              MachineLearning`MLProcessor["ToVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 5764960275667318102]], 
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Mean" -> {0.967142857142857}, 
                "StandardDeviation" -> {0.6708398634912657}, "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 1973973609475737390]], 
              MachineLearning`MLProcessor["FromVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 2169264213102441839]], 
              MachineLearning`MLProcessor["FirstValues", 
               Association[
               "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
                "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
            "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (0.967142857142857 + 
          0.6708398634912657 #& ), 
         "ProcessorFunction" -> (-1.441689603998092 + 
          1.4906687190526804` #& ), "Name" -> "value", 
         "Quantiles" -> {-2.440437645763388, 2.612929311825199}], "Prior" -> 
       Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
       "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
       "Model" -> Association["MeanFunction" -> LinearLayer[
           Association[
           "Type" -> "Linear", "Arrays" -> 
            Association[
             "Weights" -> 
              RawArray["Real32",{{
                0.24767149984836578`, -0.02493109740316868, \
-0.1526086926460266, -0.20947135984897614`, -0.10779456794261932`, \
-0.28909188508987427`, -0.06067986413836479, -0.18110749125480652`, 
                0.05621052533388138, -0.22500456869602203`, 
                0.08543354272842407, 0.17623630166053772`}}], "Biases" -> 
              RawArray["Real32",{0.}]], "Parameters" -> 
            Association[
             "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 
              12, "$InputDimensions" -> {12}], "Inputs" -> 
            Association[
             "Input" -> NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]], 
            "Outputs" -> 
            Association[
             "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
           
           Association["Version" -> "11.3.5"]], 
         "DistributionData" -> {NormalDistribution, 0.7098005885413374}, 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Processors" -> {
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Mean" -> {-3.584434336646934*^-16, \
-1.1419436824715895`*^-14, -1.9476483917709887`*^-15, 8.881784197001252*^-17, 
                 1.2053849981644556`*^-16, 
                 1.0785023667787235`*^-16, -3.5437922437811914`*^-17, \
-3.715440653552702*^-14, 
                 3.60981086292408*^-15, -1.0911906299172966`*^-15, \
-1.5511401686905759`*^-15, 1.586032892321652*^-17}, 
                "StandardDeviation" -> {1.0000000000000007`, 
                 1.000000000000261, 1.0000000000000129`, 1.000000000000005, 
                 1., 0.9999999999999999, 1., 1.0000000000126517`, 
                 0.9999999999999638, 1.0000000000000027`, 1.0000000000000402`,
                  0.9999999999999998}, "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 5596334997148494819]], 
              MachineLearning`MLProcessor["FirstValues", 
               Association[
               "Info" -> Association[
                 "Type" -> "NumericalVector", "Weight" -> 1], "Key" -> "f1", 
                "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
            "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], "Method" -> 
         "LinearRegression", "Options" -> 
         Association[
          "L1Regularization" -> 
           Association["Value" -> 0, "Options" -> Association[]], 
           "L2Regularization" -> 
           Association["Value" -> 10., "Options" -> Association[]], 
           "OptimizationMethod" -> 
           Association[
            "Value" -> "NormalEquation", "Options" -> Association[]], 
           MaxIterations -> 
           Association["Value" -> 30, "Options" -> Association[]]]], 
       "TrainingInformation" -> 
       Association[
        "LossName" -> "StandardDeviation", "BestModelInformation" -> Dataset[
           Association[
           "MeanCrossEntropy" -> 
            PlusMinus[0.7252096564311997, 0.08333860539261141], 
            "StandardDeviation" -> 
            PlusMinus[0.5704088721103304, 0.04976437953862791], 
            "EvaluationTime" -> 0.00006657142857142856, "TestSize" -> 35, 
            "TrainingSize" -> 28, "TrainingTime" -> 0.011559833333333333`, 
            "TrainingMemory" -> 67266.66666666666, "ModelMemory" -> 14904., 
            "ExperimentCount" -> 5, "ModelUtility" -> 0.7442483033913161, 
            "MeanCrossEntropyHistory" -> {
              PlusMinus[0.9157729709220076, 0.2654372421034144], 
              PlusMinus[0.6833170140285965, 0.10101117418074781`], 
              PlusMinus[0.8529281367731758, 0.2544674066365382], 
              PlusMinus[0.6820112322985064, 0.1247896504500001], 
              PlusMinus[0.8335246270866357, 0.22174720158218636`]}, 
            "StandardDeviationHistory" -> {
              PlusMinus[0.6187296481839631, 0.10723477552680796`], 
              PlusMinus[0.5290439241766735, 0.09549476519815182], 
              PlusMinus[0.5999092304606637, 0.11484524772556423`], 
              PlusMinus[0.5340934758839755, 0.09695137258089895], 
              PlusMinus[0.5928329235930052, 0.10694031000180362`]}, 
            "Configuration" -> {
             "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
              10., "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
            "FinalTrainingSize" -> 35], 
           
           TypeSystem`Struct[{
            "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
             "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
             "ModelMemory", "ExperimentCount", "ModelUtility", 
             "MeanCrossEntropyHistory", "StandardDeviationHistory", 
             "Configuration", "FinalTrainingSize"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[TypeSystem`AnyType, 5], 
             TypeSystem`Vector[TypeSystem`AnyType, 5], 
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`Atom[Integer]}], 
           Association["ID" -> 135875727902556]], "Configurations" -> 
         Dataset[
           Association[
           Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.6704455705461734`, 2.5549033001536556`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6561014645993389, 0.254373661503456], 
                 "EvaluationTime" -> 0.000018125, "TestSize" -> 84, 
                 "TrainingSize" -> 7, "TrainingTime" -> 0.011080249999999998`,
                  "TrainingMemory" -> 62400., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.6109587128042414,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[7.7396711741209145`, 1.8190520220389148`], 
                   PlusMinus[9.960889063516028, 4.826043990537847], 
                   PlusMinus[1.4817948301207076`, 0.29349002758603776`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.7730121490742902, 0.07808605681421385], 
                   PlusMinus[1.4194367686947527`, 0.3406879578384447], 
                   PlusMinus[0.5928120635905844, 0.04957626680787324]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.9094133992454765, 1.0446035497275232`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6132490411471044, 0.15978727697953088`], 
                 "EvaluationTime" -> 0.00007416666666666666, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.011400000000000002`, "TrainingMemory" -> 67248., 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 5, 
                 "ModelUtility" -> 0.6694496186093924, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.9971546360196271, 0.3547024707497569], 
                   PlusMinus[0.7902784938125905, 0.27897840750723035`], 
                   PlusMinus[6.081703211189259, 4.644974441989744], 
                   PlusMinus[0.9415907005895249, 0.21821315162106078`], 
                   PlusMinus[0.901399030534776, 0.31235893488664546`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6253788062804945, 0.1123031684715433], 
                   PlusMinus[0.5752935445325018, 0.12674482807753637`], 
                   PlusMinus[1.3563685177032498`, 0.5319831042132458], 
                   PlusMinus[0.6087445612845422, 0.0860555799314327], 
                   PlusMinus[0.6051978087132479, 0.11427065765668692`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00007416666666666666, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.6132490411471044, 0.15978727697953088`], 
                "TrainingMemory" -> 67248., "TrainingTime" -> 
                0.015070249999999999`], "Index" -> 1], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.*^6], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.4478601668096447`, 0.15596730394026012`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6732529833330375, 0.06080564944350356], 
                 "EvaluationTime" -> 0.000016357142857142853`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 
                 0.009472499999999998, "TrainingMemory" -> 62368., 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 3, 
                 "ModelUtility" -> 0.6301785441426153, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.7732736000834992`, 0.07269067651973668], 
                   PlusMinus[1.3302268959439343`, 0.06378196856421375], 
                   PlusMinus[1.3102333607030041`, 0.06490511840699525]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.617231399389502, 0.08188487042601822], 
                   PlusMinus[0.7101018492464034, 0.095092668926719], 
                   PlusMinus[0.7125631214457642, 0.09583629213365256]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.0751210975243366`, 0.09183341859300152], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6620481809974426, 0.08326195311499505], 
                 "EvaluationTime" -> 0.00006435714285714286, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.009607833333333333, "TrainingMemory" -> 67290.66666666666, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 5, 
                 "ModelUtility" -> 0.6364120870574952, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.2028850767977888`, 0.2608836811656118], 
                   PlusMinus[1.0396858293706455`, 0.1452344938853556], 
                   PlusMinus[1.186743506916246, 0.2883200348937499], 
                   PlusMinus[1.0236897063425374`, 0.1390376454467618], 
                   PlusMinus[1.1451553215849501`, 0.2500094797641587]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8097938378407575, 0.17855227891912617`], 
                   PlusMinus[0.6086331739283443, 0.11776959235579187`], 
                   PlusMinus[0.7959928837835983, 0.21666366272211426`], 
                   PlusMinus[0.5764687933523324, 0.11962707808249715`], 
                   PlusMinus[0.7559992615421887, 0.20021672334391452`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00006435714285714286, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.6620481809974426, 0.08326195311499505], 
                "TrainingMemory" -> 67290.66666666666, "TrainingTime" -> 
                0.012835241666666665`], "Index" -> 2], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.*^-6], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.6704656465390413`, 2.5572308910843846`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.65611912531132, 0.25456971091632413`], 
                 "EvaluationTime" -> 0.000013901785714285714`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 0.01006875, 
                 "TrainingMemory" -> 62368., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.6109095725833716,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[7.741612138763352, 1.8195562630749473`], 
                   PlusMinus[9.970239525448584, 4.831243169005147], 
                   PlusMinus[1.4818609991828329`, 0.2935079307747998]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.7730940773238577, 0.0780985818333149], 
                   PlusMinus[1.4200774856351166`, 0.34090496863826475`], 
                   PlusMinus[0.5928223499528305, 0.04957782833741659]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.9368236818782579, 1.2740413573657619`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6287300292035675, 0.17033955501768655`], 
                 "EvaluationTime" -> 0.00005747619047619046, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.009391666666666666, "TrainingMemory" -> 67290.66666666666, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 5, 
                 "ModelUtility" -> 0.6516816423859524, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.0259605480925365`, 0.4811179402311017], 
                   PlusMinus[0.779252573569911, 0.2727721515061648], 
                   PlusMinus[7.28604468353713, 5.3062171592600285`], 
                   PlusMinus[1.0314027416884073`, 0.3358659922610018], 
                   PlusMinus[1.109593283323756, 0.5082779468371811]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6282549415827812, 0.1378292290367715], 
                   PlusMinus[0.5705717344971007, 0.12327878761050234`], 
                   PlusMinus[1.411604257490523, 0.5196796051021049], 
                   PlusMinus[0.6279192459484053, 0.10264018675649443`], 
                   PlusMinus[0.6481038334172257, 0.13715136666652233`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00005747619047619046, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.6287300292035675, 0.17033955501768655`], 
                "TrainingMemory" -> 67290.66666666666, "TrainingTime" -> 
                0.013355833333333332`], "Index" -> 3], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.410932128184331, 0.8399762944702441], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6433663911471574, 0.16251451536512737`], 
                 "EvaluationTime" -> 0.000021232142857142852`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 0.0106725, 
                 "TrainingMemory" -> 62388., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.6390781022202909,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[2.0560605680536517`, 0.47274601877557126`], 
                   PlusMinus[3.9686902585155206`, 1.7307533612025021`], 
                   PlusMinus[1.2151393064749778`, 0.228788464193614]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.7202600359360047, 0.07314422317220953], 
                   PlusMinus[1.1124459090468144`, 0.2422354753070019], 
                   PlusMinus[0.5883339416695919, 0.04960321285019926]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.8820661070651848, 0.12203624885745351`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6039068491054796, 0.047646190634215255`], 
                 "EvaluationTime" -> 0.00005314285714285714, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.009336333333333334, "TrainingMemory" -> 67280., 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 5, 
                 "ModelUtility" -> 0.7041210341319875, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.9222920764813363, 0.3302188706571544], 
                   PlusMinus[0.7703748500054425, 0.24748412583515433`], 
                   PlusMinus[1.0700494468992277`, 0.2882589112060302], 
                   PlusMinus[0.87610462015625, 0.18512787539799774`], 
                   PlusMinus[0.8373654084114779, 0.26559408378547394`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6059906289005592, 0.113082066073011], 
                   PlusMinus[0.567984458146099, 0.11949638303666837`], 
                   PlusMinus[0.6522440676875176, 0.09385382646596616], 
                   PlusMinus[0.5915201784248552, 0.08513098588964459], 
                   PlusMinus[0.5868675263829711, 0.10932446544600856`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00005314285714285714, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.6039068491054796, 0.047646190634215255`], 
                "TrainingMemory" -> 67280., "TrainingTime" -> 
                0.013940216666666666`], "Index" -> 4], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.0001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.6704636567605493`, 2.557000524026678], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6561173730559121, 0.2545502689240211], 
                 "EvaluationTime" -> 0.000020794642857142855`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 0.01036075, 
                 "TrainingMemory" -> 62368., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.6109144421995407,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[7.741422465975189, 1.8195068958886123`], 
                   PlusMinus[9.969313400191952, 4.830728096037922], 
                   PlusMinus[1.4818544734169998`, 0.293506161577075]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.773085955759375, 0.07809733987047861], 
                   PlusMinus[1.4200139474386977`, 0.3408834463557113], 
                   PlusMinus[0.5928213285848437, 0.04957767294430942]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.9100864851288517, 1.0924702020417643`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6132329419482875, 0.16195552894119583`], 
                 "EvaluationTime" -> 0.00006297619047619047, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.009926833333333333, "TrainingMemory" -> 67290.66666666666, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 5, 
                 "ModelUtility" -> 0.6690166659418293, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.9991704750452521, 0.3727913601691113], 
                   PlusMinus[0.7880240439494874, 0.27918484346706596`], 
                   PlusMinus[6.321850634091037, 4.811409809288829], 
                   PlusMinus[0.9512155924873539, 0.23298029215525365`], 
                   PlusMinus[0.9029976533488767, 0.32652568329882486`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6247202771639911, 0.1158163567332268], 
                   PlusMinus[0.574215535488998, 0.12605098033168677`], 
                   PlusMinus[1.365769916002678, 0.5322434054196541], 
                   PlusMinus[0.6102739660155582, 0.08800322787449304], 
                   PlusMinus[0.6040668824409284, 0.11651563066264672`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00006297619047619047, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.6132329419482875, 0.16195552894119583`], 
                "TrainingMemory" -> 67290.66666666666, "TrainingTime" -> 
                0.013835141666666667`], "Index" -> 5], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 100000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.447760969442813, 0.1559491955974712], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6731996413420238, 0.06080896857860621], 
                 "EvaluationTime" -> 0.000020053571428571425`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 0.0096675, 
                 "TrainingMemory" -> 62352., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.6302269785166329,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.773112896204118, 0.07268284522643795], 
                   PlusMinus[1.330108009897086, 0.06378512748853765], 
                   PlusMinus[1.3101402714609105`, 0.06490402192468918]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6171588474444694, 0.08186866732924418], 
                   PlusMinus[0.7100812368854859, 0.0950958516238887], 
                   PlusMinus[0.7125284068246032, 0.09582735198056942]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.0747637924360027`, 0.09182207577902639], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6618901107850905, 0.08324926642366974], 
                 "EvaluationTime" -> 0.00007388095238095239, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.010644999999999998`, "TrainingMemory" -> 67269.33333333333,
                  "ModelMemory" -> 14904., "ExperimentCount" -> 5, 
                 "ModelUtility" -> 0.636562717054618, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.2026976921804007`, 0.26087175122729445`], 
                   PlusMinus[1.0393266503720981`, 0.14518551533013363`], 
                   PlusMinus[1.1865029519145296`, 0.28836199685049274`], 
                   PlusMinus[1.0233085049672812`, 0.138952311115824], 
                   PlusMinus[1.144910412941115, 0.24998175402991216`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8096620840718575, 0.178453697825308], 
                   PlusMinus[0.6084815874668412, 0.11775855428442075`], 
                   PlusMinus[0.7958259389453437, 0.21661993010735994`], 
                   PlusMinus[0.5762544829476548, 0.11957271097394466`], 
                   PlusMinus[0.7558520969520608, 0.20011241502053545`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00007388095238095239, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.6618901107850905, 0.08324926642366974], 
                "TrainingMemory" -> 67269.33333333333, "TrainingTime" -> 
                0.01339325], "Index" -> 6], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 10000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.4467720242564959`, 0.15576847266955404`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6726683928540992, 0.060841959416658244`], 
                 "EvaluationTime" -> 0.00001850892857142857, "TestSize" -> 84,
                  "TrainingSize" -> 7, "TrainingTime" -> 0.00988875, 
                 "TrainingMemory" -> 62368., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.6307097934890483,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.7715094536756697`, 0.07260471431699383], 
                   PlusMinus[1.328922677988519, 0.06381704262609923], 
                   PlusMinus[1.309211192926052, 0.06489313635300578]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6164376112712683, 0.08170723720024659], 
                   PlusMinus[0.7098764939390027, 0.09512775603286812], 
                   PlusMinus[0.7121822904944336, 0.09573813918372633]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.0712234153540905`, 0.09171082065047269], 
                 "StandardDeviation" -> 
                 PlusMinus[0.660335407034666, 0.08312433783252107], 
                 "EvaluationTime" -> 0.00006352380952380951, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.009407333333333332, "TrainingMemory" -> 67301.33333333334, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 5, 
                 "ModelUtility" -> 0.638048145271888, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.2008451632079227`, 0.26075125047566994`], 
                   PlusMinus[1.0357752202898607`, 0.14470395407470626`], 
                   PlusMinus[1.1841239511471033`, 0.28878151956788933`], 
                   PlusMinus[1.0195299354065754`, 0.1381063245078299], 
                   PlusMinus[1.1424864001165964`, 0.24970575377709173`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8083587875489071, 0.17747852586952212`], 
                   PlusMinus[0.6069889342609868, 0.11765390050814796`], 
                   PlusMinus[0.7941777714421103, 0.21618583891415544`], 
                   PlusMinus[0.574141804569607, 0.11903960331173298`], 
                   PlusMinus[0.7543977966237251, 0.19908026881948016`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00006352380952380951, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.660335407034666, 0.08312433783252107], 
                "TrainingMemory" -> 67301.33333333334, "TrainingTime" -> 
                0.013181316666666667`], "Index" -> 7], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.4371774270885247`, 0.1539955474444203], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6675679079961886, 0.061151311738482594`], 
                 "EvaluationTime" -> 0.00001363392857142857, "TestSize" -> 84,
                  "TrainingSize" -> 7, "TrainingTime" -> 0.008157000000000001,
                  "TrainingMemory" -> 62352., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.6353845715157251,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.7558242407090654`, 0.07184110419790125], 
                   PlusMinus[1.3174141827330441`, 0.06416811603828158], 
                   PlusMinus[1.3000978199923385`, 0.06479202330511971]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6096375764947548, 0.08015174388865244], 
                   PlusMinus[0.7079619941550561, 0.09545416244453962], 
                   PlusMinus[0.7088211253713107, 0.09486446676167454]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.0387470972549953`, 0.09078586209251535], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6470535217398384, 0.08202883577224064], 
                 "EvaluationTime" -> 0.00006107142857142856, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.009605666666666665, "TrainingMemory" -> 67280., 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 5, 
                 "ModelUtility" -> 0.6510320315375256, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.1841831286945945`, 0.2594504789176122], 
                   PlusMinus[1.0038157774560292`, 0.14059288492300326`], 
                   PlusMinus[1.1627045042302346`, 0.29292605790388193`], 
                   PlusMinus[0.9847919860593299, 0.1303223412747969], 
                   PlusMinus[1.1204787287367919`, 0.24707298826448493`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.7965723588587814, 0.16868974741820192`], 
                   PlusMinus[0.5940467451455556, 0.11703114587495772`], 
                   PlusMinus[0.7795594680969217, 0.21212820885537986`], 
                   PlusMinus[0.5557341121461502, 0.11463876249048621`], 
                   PlusMinus[0.7413795535554736, 0.18975091873233663`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00006107142857142856, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.6470535217398384, 0.08202883577224064], 
                "TrainingMemory" -> 67280., "TrainingTime" -> 
                0.011518983333333333`], "Index" -> 8], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.1], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.6667111596729378`, 2.306672721199015], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6543792910407902, 0.23729188798633835`], 
                 "EvaluationTime" -> 0.000016366071428571427`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 
                 0.011004000000000002`, "TrainingMemory" -> 62368., 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 3, 
                 "ModelUtility" -> 0.6154318687955331, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[7.28711302529881, 1.711278458820391], 
                   PlusMinus[9.046085251479393, 4.327574402809999], 
                   PlusMinus[1.4711001463012565`, 0.29079353905803507`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.765304458419501, 0.07696991731700151], 
                   PlusMinus[1.3633430666652127`, 0.32184312205845117`], 
                   PlusMinus[0.5918727208649789, 0.04944414894034808]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.903744148132967, 0.5714642106315009], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6130971851323703, 0.110016908053507], 
                 "EvaluationTime" -> 0.0000561190476190476, "TestSize" -> 35, 
                 "TrainingSize" -> 28, "TrainingTime" -> 0.009084833333333334,
                  "TrainingMemory" -> 67290.66666666667, "ModelMemory" -> 
                 14904., "ExperimentCount" -> 5, "ModelUtility" -> 
                 0.6801021341319713, "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.9848933942864755, 0.3498783476643399], 
                   PlusMinus[0.7885075682841154, 0.2756703355078928], 
                   PlusMinus[3.6681163693704817`, 2.508969784211195], 
                   PlusMinus[0.9332698912072226, 0.21284261756742212`], 
                   PlusMinus[0.8818326856632919, 0.30379738428138797`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6222769089225659, 0.11220666685882934`], 
                   PlusMinus[0.5746796867769158, 0.12605325232708647`], 
                   PlusMinus[1.0827367267922292`, 0.3608203761314973], 
                   PlusMinus[0.6066565637132578, 0.08568491384925014], 
                   PlusMinus[0.5995512490262664, 0.11405194844081865`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.0000561190476190476, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.6130971851323703, 0.110016908053507], 
                "TrainingMemory" -> 67290.66666666667, "TrainingTime" -> 
                0.014183691666666668`], "Index" -> 9], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 10.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.091882299944496, 0.08206325892702747], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6327828206633195, 0.06577045252018038], 
                 "EvaluationTime" -> 0.000022241071428571428`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 0.011836, 
                 "TrainingMemory" -> 62400., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.6686926509321321,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.155671114312379, 0.05454075680378771], 
                   PlusMinus[1.1488071022826283`, 0.1914175973080417], 
                   PlusMinus[0.9442911292031185, 0.08011072298435992]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6201483998527585, 0.067400792855706], 
                   PlusMinus[0.7651792630524896, 0.13421742268618322`], 
                   PlusMinus[0.6146318647845826, 0.06303325811864767]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.7252096564311997, 0.08333860539261141], 
                 "StandardDeviation" -> 
                 PlusMinus[0.5704088721103304, 0.04976437953862791], 
                 "EvaluationTime" -> 0.00006657142857142856, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.011559833333333333`, "TrainingMemory" -> 67266.66666666666,
                  "ModelMemory" -> 14904., "ExperimentCount" -> 5, 
                 "ModelUtility" -> 0.7442483033913161, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.9157729709220076, 0.2654372421034144], 
                   PlusMinus[0.6833170140285965, 0.10101117418074781`], 
                   PlusMinus[0.8529281367731758, 0.2544674066365382], 
                   PlusMinus[0.6820112322985064, 0.1247896504500001], 
                   PlusMinus[0.8335246270866357, 0.22174720158218636`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6187296481839631, 0.10723477552680796`], 
                   PlusMinus[0.5290439241766735, 0.09549476519815182], 
                   PlusMinus[0.5999092304606637, 0.11484524772556423`], 
                   PlusMinus[0.5340934758839755, 0.09695137258089895], 
                   PlusMinus[0.5928329235930052, 0.10694031000180362`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00006657142857142856, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.5704088721103304, 0.04976437953862791], 
                "TrainingMemory" -> 67266.66666666666, "TrainingTime" -> 
                0.015881941666666666`], "Index" -> 10], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.01], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[7.7195389765482805`, 2.565270599384934], 
                 "StandardDeviation" -> 
                 PlusMinus[0.7722779998956942, 0.1102724928833538], 
                 "EvaluationTime" -> 0.000021714285714285715`, "TestSize" -> 
                 28, "TrainingSize" -> 7, "TrainingTime" -> 0.007588, 
                 "TrainingMemory" -> 62336, "ModelMemory" -> 14904, 
                 "ExperimentCount" -> 1, "ModelUtility" -> 0.5437688455673522,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[7.7195389765482805`, 1.813920236403566]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.7722779998956942, 0.07797442749616477]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.908746420941261, 0.9773205354171419], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6132414409094078, 0.15329831766066648`], 
                 "EvaluationTime" -> 0.00006061904761904761, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.009341499999999999, "TrainingMemory" -> 67216., 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 5, 
                 "ModelUtility" -> 0.6708068147534952, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.9958273445687131, 0.35238644617184267`], 
                   PlusMinus[0.7903809104785509, 0.2786101921852133], 
                   PlusMinus[5.741296386004834, 4.346558451717781], 
                   PlusMinus[0.9399145714567386, 0.21630745833704146`], 
                   PlusMinus[0.8992833681710994, 0.31020675441120277`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6251773821194132, 0.11193418076991261`], 
                   PlusMinus[0.5753660955862842, 0.1267616156277665], 
                   PlusMinus[1.3218717433101814`, 0.5112665395141678], 
                   PlusMinus[0.6084272742528769, 0.08583856355341044], 
                   PlusMinus[0.6047460901497885, 0.11404841533686663`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00006061904761904761, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.6132414409094078, 0.15329831766066648`], 
                "TrainingMemory" -> 67216., "TrainingTime" -> 0.010857525], 
              "Index" -> 11]], 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration["LinearRegression"]], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Tuple[{
                
                TypeSystem`Struct[{
                 "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                  "TestSize", "TrainingSize", "TrainingTime", 
                  "TrainingMemory", "ModelMemory", "ExperimentCount", 
                  "ModelUtility", "MeanCrossEntropyHistory", 
                  "StandardDeviationHistory"}, {
                 TypeSystem`AnyType, TypeSystem`AnyType, 
                  TypeSystem`Atom[Real], 
                  TypeSystem`Atom[Integer], 
                  TypeSystem`Atom[Integer], 
                  TypeSystem`Atom[Real], 
                  TypeSystem`Atom[Real], 
                  TypeSystem`Atom[Real], 
                  TypeSystem`Atom[Integer], 
                  TypeSystem`Atom[Real], 
                  TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                  TypeSystem`Vector[
                  TypeSystem`AnyType, TypeSystem`AnyLength]}], 
                
                TypeSystem`Struct[{
                 "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                  "TestSize", "TrainingSize", "TrainingTime", 
                  "TrainingMemory", "ModelMemory", "ExperimentCount", 
                  "ModelUtility", "MeanCrossEntropyHistory", 
                  "StandardDeviationHistory"}, {
                 TypeSystem`AnyType, TypeSystem`AnyType, 
                  TypeSystem`Atom[Real], 
                  TypeSystem`Atom[Integer], 
                  TypeSystem`Atom[Integer], 
                  TypeSystem`Atom[Real], 
                  TypeSystem`Atom[Real], 
                  TypeSystem`Atom[Real], 
                  TypeSystem`Atom[Integer], 
                  TypeSystem`Atom[Real], 
                  TypeSystem`Vector[TypeSystem`AnyType, 5], 
                  TypeSystem`Vector[TypeSystem`AnyType, 5]}]}], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "ModelMemory", "StandardDeviation", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 11], 
           Association["ID" -> 135871432935260]], "MaxTrainingSize" -> 35, 
         "LastReportingTime" -> 3.740049500162341`16.32545233935645*^9, 
         "PreprocessorEvaluationTime" -> 7.43310546875`1.*^-6, 
         "PreprocessorMemory" -> 39272, "RoundPartitioning" -> Dataset[{
            Association[
            "TrainingSizes" -> 7, "TimeBudgets" -> 0.7999999999999999, 
             "ElapsedTimes" -> 0.9373729999999999, "ExperimentCounts" -> 31], 
            
            Association[
            "TrainingSizes" -> 28, "TimeBudgets" -> 1., "ElapsedTimes" -> 
             0.997198, "ExperimentCounts" -> 55]}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 2], 
           Association[
           "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
              Dataset`DatasetHandle[135880022869852]], "ID" -> 
            135884317837148]]], "Log" -> 
       Association["Example" -> MachineLearning`MLDataset[
           Association[
           "f1" -> Association[
             "Type" -> "NumericalVector", "Weight" -> 1, 
              "Values" -> {{1.110790375957073, 0.9740401694220522, 
               0.9795401050153902, 0.9797091646939465, 0.9820971867007673, 
               0.9300655635341867, 1.0276679841897234`, 1.0084865629420083`, 
               1.1327902375294663`, 0.9915254237288136, 0.970946579194002, 
               5.920930232558139}}, "ID" -> 6317603181246307725]], 
           Association[
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> 
            False]], "TrainingTime" -> 2.704583, "MaxTrainingMemory" -> 
         683808, "DataMemory" -> 14600, "FunctionMemory" -> 219328, 
         "LanguageVersion" -> {11.3, 0}, "Date" -> 
         DateObject[{2018, 7, 8, 14, 38, 20.472868`8.06375367000816}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
         "SystemWordLength" -> 64, "Evaluations" -> {}]]], "TestSet" -> 
    Association["Input" -> CompressedData["
1:eJx1kltQ1AUYxRcaJRgYkVUTFJBbKA8tJY5h6fnLljNEuEI5hG7r7g5Iabgb
JCvYgsu0kChXITQQmeEikDDtmBQR1xmMYhRDV0QddKlV9vK/7BWlRfvjAz35
zXwP38s55/vNCZHKktPdORyOF7ve7F5rzNcZJBSe3jMcMZ0hcduj84+6ZSSe
j9R0l1eboXmWOdub8gh7lvfau5JuQxR8pTLa9yF6P34rQ7KSwWZV1Jr8yzQq
Ol8N2G2k0OzalC3+gELob0dWD5vCCSXX82j1lAXbclbpfpCS+PCjp7yUQBIx
Mblt+Z1mJPRs9mhSPcIr2Qlyt/k7kI7xh2ruT+Noe9r14VAG2sF9hQ2eNtju
lDTqmiksNDa5HxCSyHNurc0o4BHdx7Rhc6VWJM7fkugpCqKEQg/jAoXIT11J
Q2E00o1rjtdfZLDjr7jqw8Yp7Mt+nbWwLOlHlBpjucFWbO8O/eztdhtSYi8P
hA1ZkCU2hHt8F0SM60Rnr41Y8DUKrmb3k+jcMi09mUbi73KvoFySRLFDxn/Q
Z0U552ZFcySDYWLQ+CTZiecvhuVyyXlxltXPtBfHZbnROCBc/IBGlXH7qvbp
ECLTUWTiW+klfUXRyTNjo2Z0JZ9rX9hlRgxLJydQj01Kp0viNw2tpeX01Hk7
rLpobuobDIRxfttuamioJu/NrlDbkV67LrK2wYIrAz3v/lsXTKj7Sy85WD6B
75QwezUU2r36q33OUbhQ2fpF33vsXfVQ8Od5A6J2/6qQ+g5heWcsV6O3oFLv
3uZ7lX4pn4loN38f7lqi3lswHl5vRvT7HWll4xSyJkdVP4opfL+x9mDdmzQC
LozxkoQOiPkZrjKVAbY98oifH88t8b8/dVpRwfbOuEL9j7uIRv6NJBWvi8JM
2S9h1LevDUaJOshvRo3onizgBRXTiOMrQu52UJDE0PETAgqKwL1+rngDdq7r
cc08mQEjGNl5+LodO9YfDB1bxkB+SMA5EWHCDXnynF7jQM5A6/4iuQWfhCwW
NJgQKM/ub22zQr12S39ZPI05sTAxV0nj2eoSfyXrx3kxDHw2tMwTX5L4/Jjy
1q5hZin/V+qGE3d5NiymlzX9n197fGNyX/EGolcfsZ7L8iEdD079rqNxKOFx
90QJjRrtyjxnCw1/n59MbVUM2HKmeqZasbXPkCjLs0EWsJBCx76cj/d8YX8j
j0P8B+369Rk=
       "], 
      "Output" -> {1.9, 1.68, 1.14, 1.36, 1., 0.76, 0.67, 0.41, 0.38, -0.06}],
     "Predictions" -> {1.6858672639316943`, 1.7246587194849659`, 
     0.9229037251437496, 1.202008715080216, 1.1371180560461935`, 
     1.5867347064483046`, 0.47344370819190695`, 0.7831052087480221, 
     0.7474531920328084, 0.18183050843300785`}, "Distributions" -> {
      NormalDistribution[1.6858672639316943`, 0.4761625299230908], 
      NormalDistribution[1.7246587194849659`, 0.4761625299230908], 
      NormalDistribution[0.9229037251437496, 0.4761625299230908], 
      NormalDistribution[1.202008715080216, 0.4761625299230908], 
      NormalDistribution[1.1371180560461935`, 0.4761625299230908], 
      NormalDistribution[1.5867347064483046`, 0.4761625299230908], 
      NormalDistribution[0.47344370819190695`, 0.4761625299230908], 
      NormalDistribution[0.7831052087480221, 0.4761625299230908], 
      NormalDistribution[0.7474531920328084, 0.4761625299230908], 
      NormalDistribution[0.18183050843300785`, 0.4761625299230908]}, 
    "Modes" -> {1.6858672639316943`, 1.7246587194849659`, 0.9229037251437496, 
     1.202008715080216, 1.1371180560461935`, 1.5867347064483046`, 
     0.47344370819190695`, 0.7831052087480221, 0.7474531920328084, 
     0.18183050843300785`}, "Weights" -> 
    SparseArray[Automatic, {10}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.0052075, "SingleEvaluationTime" -> 
    0.0037038518518518523`2., "Version" -> {11.3, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739718054842402*^9, 3.740058151301886*^9, 
  3.740064038249103*^9},
 CellLabel->
  "Out[501]=",ExpressionUUID->"814e2698-c342-4e0f-8c72-ecb4d0610068"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"\"\<ResidualPlot\>\"", ",", "\"\<StandardDeviation\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{3.740064087496936*^9},
 CellLabel->
  "In[502]:=",ExpressionUUID->"20ea7c6f-2155-4774-9923-a5fc6ce8f2bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQ/WHP/s/+P3/Zb/A2nbo547T9Sf3ze41n/LZnmBv2
vfHusv2XtWan5Ha8tZ+zzLvn/MnT9lNzempzrT/bF3g++cJnecTep/fZ5kWG
n+wTskzmi/Ye3J/0q/Kdc/JP+yKbq+FzSl7tfzHj9LVnPvfsvxyeuO6gxkn7
e2fmLDfif2lf35+0+suD6/vbvR99UXr93H7PvaUpUS3X919wnHjbwu24fV1n
UZjvl3P7Ye5jgAK4+6AA5j4YH+Y+GB/mPhgf5j4YH+Y+GB/mPhgf5j4YH+Y+
GH+whx8AynHncA==
      "], {{{}, {}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
         LineBox[{12, 2}], LineBox[{15, 5}], LineBox[{16, 6}], 
         LineBox[{18, 8}], LineBox[{19, 9}], LineBox[{20, 10}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
         LineBox[{11, 1}], LineBox[{13, 3}], LineBox[{14, 4}], 
         LineBox[{17, 7}]}}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], 
         PointBox[{21, 22, 23, 24, 25, 26, 27, 28, 29, 
          30}]}, {}}}], {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{None, None},
    AxesOrigin->{0.157723817635321, 0.},
    DisplayFunction->Identity,
    Frame->{{True, False}, {True, False}},
    FrameLabel->{{
       FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
       FormBox["\"predicted value\"", TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.18183050843300785`, 
     1.7246587194849659`}, {-0.8680714417707198, 0.8680714417707198}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", "0.3454817825121279`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.739718071796795*^9, 3.740064042394636*^9},
 CellLabel->
  "Out[502]=",ExpressionUUID->"6b9f859f-cd95-40f2-9bbd-529cd16c00b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input",
 CellLabel->
  "In[503]:=",ExpressionUUID->"fe628341-3682-4101-ae6b-4e864fd06258"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           GraphicsBox[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             AbsoluteThickness[1.], 
             RGBColor[0.34398, 0.49112, 0.89936], 
             CircleBox[{0, 0}, 
              Offset[{1.8, 1.8}, {0., 0.}]]}], {0., 0.}], {{{
          1.6858672639316943`, 1.9}}, {{1.7246587194849659`, 1.68}}, {{
          0.9229037251437496, 1.14}}, {{1.202008715080216, 1.36}}, {{
          1.1371180560461935`, 1.}}, {{1.5867347064483046`, 0.76}}, {{
          0.47344370819190695`, 0.67}}, {{0.7831052087480221, 0.41}}, {{
          0.7474531920328084, 0.38}}, {{
          0.18183050843300785`, -0.06}}}]}, {}}, {
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.6858672639316943`, 1.9}]}}, 
          RowBox[{"{", 
            RowBox[{"1.6858672639316943`", ",", "1.9`"}], "}"}]], 
         Annotation[#, {1.6858672639316943`, 1.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.7246587194849659`, 1.68}]}}, 
          RowBox[{"{", 
            RowBox[{"1.7246587194849659`", ",", "1.68`"}], "}"}]], 
         Annotation[#, {1.7246587194849659`, 1.68}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9229037251437496, 1.14}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9229037251437496`", ",", "1.14`"}], "}"}]], 
         Annotation[#, {0.9229037251437496, 1.14}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.202008715080216, 1.36}]}}, 
          RowBox[{"{", 
            RowBox[{"1.202008715080216`", ",", "1.36`"}], "}"}]], 
         Annotation[#, {1.202008715080216, 1.36}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1371180560461935`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1371180560461935`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1371180560461935`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.5867347064483046`, 0.76}]}}, 
          RowBox[{"{", 
            RowBox[{"1.5867347064483046`", ",", "0.76`"}], "}"}]], 
         Annotation[#, {1.5867347064483046`, 0.76}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.47344370819190695`, 0.67}]}}, 
          RowBox[{"{", 
            RowBox[{"0.47344370819190695`", ",", "0.67`"}], "}"}]], 
         Annotation[#, {0.47344370819190695`, 0.67}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.7831052087480221, 0.41}]}}, 
          RowBox[{"{", 
            RowBox[{"0.7831052087480221`", ",", "0.41`"}], "}"}]], 
         Annotation[#, {0.7831052087480221, 0.41}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.7474531920328084, 0.38}]}}, 
          RowBox[{"{", 
            RowBox[{"0.7474531920328084`", ",", "0.38`"}], "}"}]], 
         Annotation[#, {0.7474531920328084, 0.38}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.18183050843300785`, -0.06}]}}, 
          RowBox[{"{", 
            RowBox[{"0.18183050843300785`", ",", 
              RowBox[{"-", "0.06`"}]}], "}"}]], 
         Annotation[#, {0.18183050843300785`, -0.06}, 
          "Tooltip"]& ]}}, {}, {}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           GrayLevel[0.2], 
           Opacity[0.5], 
           AbsoluteThickness[1.], 
           AbsoluteDashing[{2, 4}]], 
          LineBox[CompressedData["
1:eJxFxVlIEwAYAOBphoUpajLQTFJ7WKiYJR4lqA9rhRdKcw5sc1KpFV44L+a8
WhbGhEmGznuyzNLcPPLIyhmpIPNIUhTnNl1TyyOP5bxWPfj/Dx+fY2xSxD1j
AoEQ8s//y6xbJDTfL5+Ot6xr8qx1xovdX71fMsfzgmv7stQDcMITwbCwGPfb
S1fNz8lglcrfKr6gH6bHilQbZX0w0YvkxRqXwDnscDExVAiHe81625eX+B8/
RBLKrlPewamJXfZ3n/fAu9Obn3PcB+CU5CLy5cMh2JnR2HMqTg5TAqjqRacJ
uJxTyYxSTsKDbWqyoWQKjuCVp9tlz8D6/LKam1fmYO6ZgmdsayWcRO3KUD5W
wWttVurbCjUsZIpSTlAX4akLUTm9Ug0c6E5uaXbTwra9ktLuuiU4NzpwR36w
DNsEneY4sH/C3mHb3IzJX/DQGMNrxXUNLqoxOvuyfh1e6V/oEOduwI0z6u1q
v9/weamjxUUdTrdJ1biJNmHXKsboJGMLHmyNziBYbMO2hRX6rm7cmJPGt0jb
gaUGpmrJUQfrX2tvxChw0/m8B9H8P/DIBD1ec20XJq3KM810eLCASuls0MOm
jEzSEWsPzlqaWZg4tw9LD0PvuA7jBb7MZSfeAWxLyL9a7XkIx/PUNLESD/VQ
8oOER/B+3Hoh+5YBjqlw8cgNxr+OxCmehuECD6VPJRUn7Y+tylh4JF9Ks8zG
W9vZLm+acKJWMt3ejHNs13gfW3EK975yvBNXUGgvdmW42ayPgTyLJ5uz34Yp
8O/+Ejpdhdc3XGp/pMV9Eu0SSrfw6tpIYpUON/kmGBDr8VFvM4ceA27XIdKw
jAgBx4fIAz/8MMbztPOChyZ4G4GbsHES/wtzXI/l
           "]]}, 
         Annotation[#, "Charting`Private`Tag$479933#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{-0.158, 2.0029}, {-0.158, 2.0029}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-0.158, 2.0029}, {-0.158, 2.0029}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}], ",", "Automatic"}], 
                    "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect predictions\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.13333333333333336`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.2`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.2], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.740064183044853*^9},
 CellLabel->
  "Out[503]=",ExpressionUUID->"2339f822-a37a-4023-a187-529ef6e53c4d"]
}, Open  ]],

Cell["\<\
We looked for a pattern in least certain examples. They appear to correspond \
to ketals.\
\>", "Text",
 CellChangeTimes->{{3.740064778788622*^9, 
  3.740064795788426*^9}},ExpressionUUID->"797dc18e-26a2-4d52-8c12-\
9ba04665207e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<LeastCertainExamples\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.740064626686257*^9, 3.740064642601893*^9}},
 CellLabel->
  "In[516]:=",ExpressionUUID->"3c85e3e3-ae21-4e11-88a2-1fa37d2a0df5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.9494523433868608`", ",", "0.9243065992621943`", ",", 
      "0.9069346369726599`", ",", "0.8931349340547853`", ",", 
      "0.6982097186700768`", ",", "0.3487355604121136`", ",", 
      "0.5019762845849802`", ",", "1.0042432814710043`", ",", 
      "0.9906607087068892`", ",", "0.9661016949152543`", ",", 
      "0.9465791940018744`", ",", "10.460465116279071`"}], "}"}], "\[Rule]", 
    "1.9`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1.115620095414868`", ",", "0.9182948490230907`", ",", 
      "0.9098316132536666`", ",", "0.8961785593506932`", ",", 
      "0.7033248081841433`", ",", "0.3902591320636903`", ",", 
      "0.48221343873517786`", ",", "1.0084865629420083`", ",", 
      "1.1898484317753646`", ",", "0.9576271186440678`", ",", 
      "0.9175257731958762`", ",", "15.748837209302327`"}], "}"}], "\[Rule]", 
    "1.68`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1.1596595191727324`", ",", "0.966662112310425`", ",", 
      "0.9684953829440521`", ",", "0.9731146432194792`", ",", 
      "1.040920716112532`", ",", "0.404932875429285`", ",", 
      "1.0790513833992095`", ",", "1.0084865629420083`", ",", 
      "1.13258669494173`", ",", "1.228813559322034`", ",", 
      "1.1096532333645734`", ",", "7.6465116279069765`"}], "}"}], "\[Rule]", 
    "1.14`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1.1107917739847044`", ",", "0.9294985653777839`", ",", 
      "0.9185225420966866`", ",", "0.9352384173148461`", ",", 
      "1.1713554987212278`", ",", "1.0096784264751795`", ",", 
      "1.3952569169960474`", ",", "0.9999999999999999`", ",", 
      "1.1327902375294663`", ",", "0.9689265536723163`", ",", 
      "0.9690721649484536`", ",", "8.934883720930234`"}], "}"}], "\[Rule]", 
    "1.36`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.9983234024181634`", ",", "0.9294985653777839`", ",", 
      "0.8995111352525801`", ",", "0.883665877578627`", ",", 
      "0.659846547314578`", ",", "0.4698719950046831`", ",", 
      "1.2885375494071145`", ",", "1.0113154172560113`", ",", 
      "0.9904571661191528`", ",", "1.2824858757062148`", ",", 
      "1.1012183692596065`", ",", "7.90232558139535`"}], "}"}], "\[Rule]", 
    "1.`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1.1596581211451007`", ",", "0.9591474245115453`", ",", 
      "0.9561832337497737`", ",", "0.9458911058505243`", ",", 
      "0.8005115089514067`", ",", "0.13331251951295658`", ",", 
      "1.118577075098814`", ",", "0.9929278642149929`", ",", 
      "1.13258669494173`", ",", "1.228813559322034`", ",", 
      "1.1096532333645734`", ",", "6.018604651162791`"}], "}"}], "\[Rule]", 
    "0.76`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.8940605210304002`", ",", "0.962836453067359`", ",", 
      "0.9493029150823828`", ",", "0.9748055461616503`", ",", 
      "1.3350383631713556`", ",", "0.797065251326881`", ",", 
      "1.4940711462450593`", ",", "1.0084865629420083`", ",", 
      "0.92426322316788`", ",", "0.9802259887005651`", ",", 
      "0.9587628865979381`", ",", 
      RowBox[{"-", "5.883720930232558`"}]}], "}"}], "\[Rule]", "0.67`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.8369774476913723`", ",", "0.9852438857767456`", ",", 
      "0.9583559659605287`", ",", "0.9472438282042611`", ",", 
      "0.7902813299232737`", ",", "0.5928816734311583`", ",", 
      "1.300395256916996`", ",", "1.0014144271570014`", ",", 
      "0.8483276372965758`", ",", "1.3559322033898304`", ",", 
      "1.0899718837863168`", ",", "7.939534883720931`"}], "}"}], "\[Rule]", 
    "0.41`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1.1661742761569547`", ",", "0.9777291979778658`", ",", 
      "0.9840666304544631`", ",", "0.9852891444031113`", ",", "1.`", ",", 
      "0.9200749297533563`", ",", "1.0474308300395256`", ",", 
      "1.0084865629420083`", ",", "1.1991829895199233`", ",", 
      "0.9887005649717514`", ",", "0.9587628865979381`", ",", 
      "8.265116279069767`"}], "}"}], "\[Rule]", "0.38`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.8940520810858098`", ",", "0.9963109714441863`", ",", 
      "0.9856961796125294`", ",", "0.9890091308758878`", ",", 
      "1.0358056265984656`", ",", "1.1467374336559475`", ",", 
      "1.217391304347826`", ",", "1.0141442715700142`", ",", 
      "0.92426322316788`", ",", "0.9802259887005651`", ",", 
      "0.9587628865979381`", ",", "2.0232558139534884`"}], "}"}], "\[Rule]", 
    RowBox[{"-", "0.06`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.740064643066533*^9},
 CellLabel->
  "Out[516]=",ExpressionUUID->"0388dcb2-3ad7-4e78-a826-1ebc3fe54f10"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["NeuralNetwork", "Section",
 CellChangeTimes->{{3.7397176223262377`*^9, 
  3.739717629954794*^9}},ExpressionUUID->"2d29dd3f-9e25-4fb7-ad84-\
d351e80d135f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", " ", "=", " ", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", "20", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "\"\<Sigmoid\>\"", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "10", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "1", "]"}]}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "12"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739718110586678*^9, 3.7397182113335342`*^9}, {
  3.7397191796394243`*^9, 3.7397191853923798`*^9}, {3.739719246418309*^9, 
  3.739719436135602*^9}, {3.739719482794931*^9, 3.7397195176659822`*^9}, {
  3.739719626607998*^9, 3.7397196974488697`*^9}, {3.7400642851159153`*^9, 
  3.740064285286982*^9}, {3.740064392409301*^9, 3.7400643973789043`*^9}, {
  3.740064434620173*^9, 3.740064452019197*^9}},
 CellLabel->
  "In[513]:=",ExpressionUUID->"5350096b-5ff6-4dfc-9f35-a109567ff2f2"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{20, 12}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {20}, "$OutputSize" -> 20, 
                    "$InputSize" -> 12, "$InputDimensions" -> {12}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {"Sigmoid", 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 20}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 20, "$InputDimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 10}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Sigmoid\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.739719734976653*^9, 3.740060621952793*^9, 3.740060677561245*^9, 
   3.7400642421461573`*^9, 3.7400642881446953`*^9, 3.740064399570386*^9, {
   3.7400644417291813`*^9, 3.740064453853364*^9}},
 CellLabel->
  "Out[513]=",ExpressionUUID->"4e206f61-debe-40d5-9f81-d2f81028f16e"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNetwork", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"network", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"trainingData", "\[Rule]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", "trainingResults", "}"}], "]"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ValidationSet", "\[Rule]", 
     RowBox[{"Thread", "[", 
      RowBox[{"testData", "\[Rule]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", "testResults", "}"}], "]"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7397181639609213`*^9, 3.739718166677147*^9}, {
  3.739718221873056*^9, 3.739718246883932*^9}, {3.739718361769885*^9, 
  3.739718444820704*^9}, {3.7397185183422337`*^9, 3.7397185218227777`*^9}},
 CellLabel->
  "In[511]:=",ExpressionUUID->"c4f3861d-5c91-4c72-84c9-9b17d1ed6c19"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 12}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{20}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {20}, "$OutputSize" -> 20, 
                    "$InputSize" -> 12, "$InputDimensions" -> {12}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {"Sigmoid", 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 20}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 20, "$InputDimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1, 10}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{1}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Sigmoid\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739719745188765*^9, 3.7400642590135612`*^9, 
  3.7400643035546083`*^9, 3.7400644147695837`*^9},
 CellLabel->
  "Out[511]=",ExpressionUUID->"a4a61c7e-1ec4-4833-b433-5b8b91185236"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predictedTestResults", "=", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"trainedNetwork", ",", "testData"}], "]"}], 
   "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.739718661118753*^9, 3.739718674808096*^9}, {
  3.739718794704632*^9, 3.7397188112759132`*^9}, {3.739719021554905*^9, 
  3.739719046729044*^9}},
 CellLabel->
  "In[514]:=",ExpressionUUID->"42863f70-54d0-4c7a-829e-c66bc147bacf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.3967316150665283`", ",", "1.842205286026001`", ",", 
   "0.9991915822029114`", ",", "0.7566049695014954`", ",", 
   "0.9703758955001831`", ",", "1.0692389011383057`", ",", 
   "0.3812353014945984`", ",", "0.763088583946228`", ",", 
   "0.7849020957946777`", ",", "0.04021117836236954`"}], "}"}]], "Output",
 CellChangeTimes->{{3.739718797744746*^9, 3.739718811923533*^9}, 
   3.739719047243208*^9, {3.739719203420803*^9, 3.739719262701404*^9}, {
   3.739719295855566*^9, 3.7397194483523397`*^9}, {3.73971951008816*^9, 
   3.739719530000822*^9}, 3.739719656864594*^9, 3.7397196874308863`*^9, 
   3.7400643128310623`*^9, 3.7400644591005697`*^9},
 CellLabel->
  "Out[514]=",ExpressionUUID->"2ce2812b-2d32-4b24-8341-03663407f0ed"]
}, Open  ]],

Cell["StandardDeviation:", "Text",
 CellChangeTimes->{{3.73971914737335*^9, 
  3.7397191483610373`*^9}},ExpressionUUID->"ede7a238-225a-43f3-86de-\
058c39dd18bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "@", 
  RowBox[{"Mean", "[", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"predictedTestResults", "-", "testResults"}], ")"}], "2"], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739719079008553*^9, 3.739719122886141*^9}},
 CellLabel->
  "In[515]:=",ExpressionUUID->"ed0ba45e-298d-4c69-b190-80c3673aea5f"],

Cell[BoxData["0.3379427566392777`"], "Output",
 CellChangeTimes->{{3.7397191132329483`*^9, 3.7397191233883877`*^9}, {
   3.739719209250967*^9, 3.7397194484281473`*^9}, {3.739719510179358*^9, 
   3.739719530076449*^9}, {3.739719658445691*^9, 3.739719687490967*^9}, 
   3.7400643165294123`*^9, 3.740064461088966*^9},
 CellLabel->
  "Out[515]=",ExpressionUUID->"33b59ba2-f32f-4507-8f1f-efe903410865"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.740064468562181*^9, 
  3.740064469346609*^9}},ExpressionUUID->"781112b5-900a-4470-9184-\
00d4c2e9b66b"]
}, Closed]],

Cell[CellGroupData[{

Cell["With Structural Information", "Chapter",
 CellChangeTimes->{{3.740064874181787*^9, 
  3.74006487877232*^9}},ExpressionUUID->"1a90b346-d4bc-457a-81e4-\
f79e7e6cea6b"],

Cell[CellGroupData[{

Cell["Creating Data", "Section",
 CellChangeTimes->{{3.7397172950148706`*^9, 
  3.73971730033615*^9}},ExpressionUUID->"c6414235-55dc-4de5-92e0-\
8eb6926553f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"structuraldata", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://github.com/madsutherland/Project/blob/master/Molecular%\
20Structures%20Real/Descriptors%202.xlsx?raw=true\>\"", ",", "\"\<XLSX\>\""}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7400611358595667`*^9, 3.740061145581107*^9}, {
   3.740064900803495*^9, 3.7400649024857903`*^9}, {3.740064967751609*^9, 
   3.740064990736321*^9}, 3.7400652878601723`*^9},
 CellLabel->
  "In[530]:=",ExpressionUUID->"a87af709-2a1b-48c2-8975-4ffd05127aff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "structuraldata"}]], "Input",
 CellChangeTimes->{{3.740065066154613*^9, 3.740065072000901*^9}},
 CellLabel->
  "In[531]:=",ExpressionUUID->"ef127605-d0b2-4f57-98a6-751f3f86b2be"],

Cell[BoxData[
 RowBox[{"{", "4", "}"}]], "Output",
 CellChangeTimes->{3.7400650730155487`*^9, 3.7400652912131653`*^9, 
  3.740065323354805*^9},
 CellLabel->
  "Out[531]=",ExpressionUUID->"72fa1d09-ae46-4ac1-96ff-f3baa320bb65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"structuraldata", "=", 
  RowBox[{"structuraldata", "[", 
   RowBox[{"[", 
    RowBox[{"4", ",", 
     RowBox[{"4", ";;", "49"}], ",", 
     RowBox[{"4", ";;"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.740065066154613*^9, 3.7400650828875637`*^9}, {
  3.740065112987721*^9, 3.740065144706218*^9}, {3.740065248668828*^9, 
  3.7400653186374826`*^9}},
 CellLabel->
  "In[532]:=",ExpressionUUID->"baf10b46-3cfa-4336-9c5a-8cc8504197e8"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "1.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "0.`", "0.`", "0.`"},
     {"1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "0.`", "0.`", "1.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "1.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "1.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "1.`", "0.`"},
     {"1.`", "0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "0.`", "0.`", "1.`"},
     {"0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "1.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "0.`", "0.`", "1.`"},
     {"1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "0.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "1.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "1.`", "0.`"},
     {"1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "1.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.7400650834246807`*^9, 3.740065150967568*^9}, {
  3.740065254277807*^9, 3.740065326918997*^9}},
 CellLabel->
  "Out[532]=",ExpressionUUID->"d38ce108-84a2-4bb6-9c08-e4409d371d33"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "structuraldata"}]], "Input",
 CellChangeTimes->{{3.740065066154613*^9, 3.7400650828875637`*^9}, {
  3.740065112987721*^9, 3.740065144706218*^9}, {3.740065248668828*^9, 
  3.7400653186374826`*^9}, {3.74006540617561*^9, 3.740065413791087*^9}},
 CellLabel->
  "In[533]:=",ExpressionUUID->"fff08bc9-9c6c-4821-ac89-3efc3816095b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"46", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{3.7400654142040243`*^9},
 CellLabel->
  "Out[533]=",ExpressionUUID->"13bb0e35-f75e-44b6-9a81-ae176d295c35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"structuraldata", "=", 
  RowBox[{"Drop", "[", 
   RowBox[{"structuraldata", ",", 
    RowBox[{"{", "43", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.74006542887259*^9, 3.740065475947021*^9}},
 CellLabel->
  "In[538]:=",ExpressionUUID->"a0b1707d-53cc-48bd-a963-d7215db07064"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "1.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "0.`", "0.`", "0.`"},
     {"1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "0.`", "0.`", "1.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "1.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "1.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "1.`", "0.`"},
     {"1.`", "0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "0.`", "0.`", "1.`"},
     {"0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "1.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "0.`", "0.`", "1.`"},
     {"1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "0.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "1.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "1.`", "0.`"},
     {"1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "1.`", "1.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.740065439307626*^9, 3.7400654830084887`*^9}},
 CellLabel->
  "Out[538]=",ExpressionUUID->"a70d6ea9-79f3-4267-8f2c-5239bb0244f1"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "structuraldata"}]], "Input",
 CellChangeTimes->{{3.740065066154613*^9, 3.7400650828875637`*^9}, {
  3.740065112987721*^9, 3.740065144706218*^9}, {3.740065248668828*^9, 
  3.7400653186374826`*^9}, {3.74006540617561*^9, 3.740065413791087*^9}},
 CellLabel->
  "In[539]:=",ExpressionUUID->"e1b72221-16ef-454b-b552-d4129393d8cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"45", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7400654142040243`*^9, {3.740065448835966*^9, 3.7400654871618223`*^9}},
 CellLabel->
  "Out[539]=",ExpressionUUID->"5a2be02d-7132-4195-8d36-09b0b5d1c563"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "command", " ", "to", " ", "split", " ", "observations", " ", "randomly"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7400610733847446`*^9, 
  3.740061091697364*^9}},ExpressionUUID->"db176245-014e-4662-a88b-\
2228bb52c664"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainingIndices", "=", 
  RowBox[{"Sort", "@", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Range", "[", "45", "]"}], ",", "35"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.740063301142845*^9, 3.740063341168515*^9}, {
  3.74006358488455*^9, 3.7400635849755497`*^9}, {3.740063818102213*^9, 
  3.7400638251061296`*^9}, {3.7400638632721977`*^9, 3.74006386473177*^9}},
 CellLabel->
  "In[494]:=",ExpressionUUID->"6addbb7f-0ac4-4489-b1dd-d09d8dc53397"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "6", ",", "7", ",", "9", ",", "10", 
   ",", "11", ",", "12", ",", "13", ",", "14", ",", "17", ",", "18", ",", 
   "19", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", ",", "26", 
   ",", "27", ",", "29", ",", "30", ",", "32", ",", "33", ",", "34", ",", 
   "35", ",", "38", ",", "39", ",", "40", ",", "41", ",", "42", ",", "43", 
   ",", "45"}], "}"}]], "Output",
 CellChangeTimes->{{3.740063320933115*^9, 3.7400633419772673`*^9}, 
   3.7400635890882072`*^9, 3.740063826725049*^9, 3.7400638654173613`*^9},
 CellLabel->
  "Out[494]=",ExpressionUUID->"1a1ead15-0716-4770-8e84-182431551d3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullData", "=", 
  RowBox[{"ArrayFlatten", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"inputfinal", ",", "structuraldata"}], "}"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.74006560611694*^9, 3.740065639429126*^9}, {
  3.7400657297071323`*^9, 3.740065731453459*^9}},
 CellLabel->
  "In[541]:=",ExpressionUUID->"0d5878b1-20f0-4670-86a2-9b5587cac2ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "4.262882734011833`", ",", "1.0075146877988796`", ",", 
     "1.0287887017925041`", ",", "0.9337166046668922`", ",", 
     RowBox[{"-", "0.4092071611253197`"}], ",", "1.0121760849203871`", ",", 
     "0.1818181818181818`", ",", "0.9999999999999999`", ",", 
     "1.2977212697270635`", ",", "1.0706214689265536`", ",", 
     "1.2408622305529522`", ",", "11.418604651162791`", ",", "1.`", ",", 
     "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "1.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658427261373125`", ",", "0.9734936466730428`", ",", 
     "0.9827992033315227`", ",", "0.8890767669935746`", ",", 
     RowBox[{"-", "0.4347826086956522`"}], ",", "0.6231657820793006`", ",", 
     "0.5335968379446641`", ",", "1.0014144271570014`", ",", 
     "1.2088346950174667`", ",", "1.2033898305084747`", ",", 
     "1.0121836925960639`", ",", "11.404651162790698`", ",", "1.`", ",", 
     "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "1.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0048401269968303`", ",", "0.9196611558956141`", ",", 
     "0.9105558573239182`", ",", "0.8965167399391274`", ",", 
     "0.6982097186700768`", ",", "0.38526381517327507`", ",", 
     "0.4980237154150197`", ",", "1.007072135785007`", ",", 
     "1.0570534606973463`", ",", "0.9576271186440678`", ",", 
     "0.9353327085285849`", ",", "12.92093023255814`", ",", "1.`", ",", "0.`",
      ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0602279106067993`", ",", "0.9187047410848477`", ",", 
     "0.9120043454644214`", ",", "0.8953331078796077`", ",", 
     "0.659846547314578`", ",", "0.40056197315017167`", ",", 
     "0.4980237154150197`", ",", "1.0028288543140027`", ",", 
     "1.1234509462363556`", ",", "0.9576271186440678`", ",", 
     "0.9353327085285849`", ",", "15.38139534883721`", ",", "1.`", ",", "0.`",
      ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9494523433868608`", ",", "0.9243065992621943`", ",", 
     "0.9069346369726599`", ",", "0.8931349340547853`", ",", 
     "0.6982097186700768`", ",", "0.3487355604121136`", ",", 
     "0.5019762845849802`", ",", "1.0042432814710043`", ",", 
     "0.9906607087068892`", ",", "0.9661016949152543`", ",", 
     "0.9465791940018744`", ",", "10.460465116279071`", ",", "1.`", ",", 
     "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", 
     "1.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.6212282314800304`", ",", "0.9889329143325593`", ",", 
     "0.8654716639507515`", ",", "0.8566114305038891`", ",", 
     "0.7314578005115089`", ",", "0.7798938495160788`", ",", 
     RowBox[{"-", "0.592885375494071`"}], ",", "1.007072135785007`", ",", 
     "1.275232180556476`", ",", "1.1638418079096047`", ",", 
     "1.0028116213683225`", ",", "12.84186046511628`", ",", "1.`", ",", "0.`",
      ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.4610883603688585`", ",", "1.0075146877988796`", ",", 
     "1.0296940068803186`", ",", "0.9345620561379777`", ",", 
     RowBox[{"-", "0.4092071611253197`"}], ",", "1.0212300967842647`", ",", 
     "0.1818181818181818`", ",", "1.0028288543140027`", ",", 
     "1.2313285177366062`", ",", "1.115819209039548`", ",", 
     "1.2820993439550141`", ",", "9.981395348837209`", ",", "0.`", ",", "1.`",
      ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.115620095414868`", ",", "0.9182948490230907`", ",", 
     "0.9098316132536666`", ",", "0.8961785593506932`", ",", 
     "0.7033248081841433`", ",", "0.3902591320636903`", ",", 
     "0.48221343873517786`", ",", "1.0084865629420083`", ",", 
     "1.1898484317753646`", ",", "0.9576271186440678`", ",", 
     "0.9175257731958762`", ",", "15.748837209302327`", ",", "1.`", ",", 
     "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", 
     "1.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5104501270988344`", ",", "0.9729471239240335`", ",", 
     "0.9873257287705958`", ",", "0.8953331078796077`", ",", 
     RowBox[{"-", "0.4040920716112532`"}], ",", "0.660318451451764`", ",", 
     RowBox[{"-", "0.5177865612648221`"}], ",", "0.9999999999999999`", ",", 
     "1.1424419430270096`", ",", "1.2175141242937852`", ",", 
     "1.0309278350515465`", ",", "8.944186046511629`", ",", "1.`", ",", "0.`",
      ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.510440703357022`", ",", "0.9554583959557318`", ",", 
     "0.9645120405576679`", ",", "0.8850185999323639`", ",", 
     RowBox[{"-", "0.23785166240409208`"}], ",", "1.2541367467998752`", ",", 
     RowBox[{"-", "0.8656126482213439`"}], ",", "1.0084865629420083`", ",", 
     "1.1424419430270096`", ",", "1.248587570621469`", ",", 
     "1.0309278350515465`", ",", "8.106976744186047`", ",", "0.`", ",", "1.`",
      ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0553980358126007`", ",", "0.9331875939335975`", ",", 
     "0.9235922505884483`", ",", "0.9428474805546161`", ",", 
     "1.2148337595907928`", ",", "0.9862628785513581`", ",", 
     "1.3794466403162053`", ",", "1.0084865629420083`", ",", 
     "1.066392751990457`", ",", "0.9689265536723163`", ",", 
     "0.9821930646672915`", ",", "6.474418604651163`", ",", "1.`", ",", "0.`",
      ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.949447217285545`", ",", "0.9293619346905315`", ",", 
     "0.9096505522361036`", ",", "0.8963476496449104`", ",", 
     "0.710997442455243`", ",", "0.41305026537620976`", ",", 
     "0.49407114624505927`", ",", "1.0127298444130126`", ",", 
     "0.9906607087068892`", ",", "0.9858757062146892`", ",", 
     "0.9484536082474228`", ",", "11.483720930232558`", ",", "0.`", ",", 
     "1.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", 
     "1.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658386873908212`", ",", "0.9777291979778658`", ",", 
     "0.9655984066630455`", ",", "0.8853567805207981`", ",", 
     RowBox[{"-", "0.2480818414322251`"}], ",", "1.2750546362784887`", ",", 
     RowBox[{"-", "0.8695652173913043`"}], ",", "0.9999999999999999`", ",", 
     "1.2088346950174667`", ",", "1.231638418079096`", ",", 
     "1.021555763823805`", ",", "10.567441860465117`", ",", "0.`", ",", "1.`",
      ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8940548771410729`", ",", "1.141276130618937`", ",", 
     "0.9310157523085281`", ",", "0.9217111937774771`", ",", 
     "0.7902813299232737`", ",", "0.5051514205432407`", ",", 
     "0.525691699604743`", ",", "1.00990099009901`", ",", "0.92426322316788`",
      ",", "0.9971751412429378`", ",", "0.9615745079662605`", ",", 
     "9.023255813953488`", ",", "0.`", ",", "1.`", ",", "1.`", ",", "0.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "1.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1596595191727324`", ",", "0.966662112310425`", ",", 
     "0.9684953829440521`", ",", "0.9731146432194792`", ",", 
     "1.040920716112532`", ",", "0.404932875429285`", ",", 
     "1.0790513833992095`", ",", "1.0084865629420083`", ",", 
     "1.13258669494173`", ",", "1.228813559322034`", ",", 
     "1.1096532333645734`", ",", "7.6465116279069765`", ",", "1.`", ",", 
     "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", 
     "1.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1107917739847044`", ",", "0.9294985653777839`", ",", 
     "0.9185225420966866`", ",", "0.9352384173148461`", ",", 
     "1.1713554987212278`", ",", "1.0096784264751795`", ",", 
     "1.3952569169960474`", ",", "0.9999999999999999`", ",", 
     "1.1327902375294663`", ",", "0.9689265536723163`", ",", 
     "0.9690721649484536`", ",", "8.934883720930234`", ",", "1.`", ",", "0.`",
      ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.45505680315714`", ",", "0.9963109714441863`", ",", 
     "0.9818938982437081`", ",", "0.9020967196482922`", ",", 
     RowBox[{"-", "0.22506393861892582`"}], ",", "1.366843584139869`", ",", 
     RowBox[{"-", "0.8814229249011858`"}], ",", "1.0014144271570014`", ",", 
     "1.0760444574880004`", ",", "1.271186440677966`", ",", 
     "1.0496719775070291`", ",", "5.646511627906977`", ",", "0.`", ",", "1.`",
      ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9983192083352687`", ",", "0.9926219428883727`", ",", 
     "0.9764620677168205`", ",", "0.9935745688197498`", ",", 
     "1.2352941176470589`", ",", "0.48048704339681547`", ",", 
     "1.2885375494071145`", ",", "0.9999999999999999`", ",", 
     "0.9904571661191528`", ",", "1.2824858757062148`", ",", 
     "1.1012183692596065`", ",", "7.90232558139535`", ",", "1.`", ",", "0.`", 
     ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1107917739847044`", ",", "0.9926219428883727`", ",", 
     "0.9967409016838674`", ",", "0.9994927291173487`", ",", 
     "1.0383631713554988`", ",", "0.9494224164845457`", ",", 
     "1.0474308300395256`", ",", "1.0084865629420083`", ",", 
     "1.1327902375294663`", ",", "0.9689265536723163`", ",", 
     "0.9690721649484536`", ",", "7.306976744186047`", ",", "1.`", ",", "0.`",
      ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9983234024181634`", ",", "0.9294985653777839`", ",", 
     "0.8995111352525801`", ",", "0.883665877578627`", ",", 
     "0.659846547314578`", ",", "0.4698719950046831`", ",", 
     "1.2885375494071145`", ",", "1.0113154172560113`", ",", 
     "0.9904571661191528`", ",", "1.2824858757062148`", ",", 
     "1.1012183692596065`", ",", "7.90232558139535`", ",", "1.`", ",", "0.`", 
     ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", 
     ",", "0.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1661813180739136`", ",", "0.9442546796010384`", ",", 
     "0.9167119319210574`", ",", "0.9347311464321948`", ",", 
     "1.1892583120204605`", ",", "1.0227911333125195`", ",", 
     "1.391304347826087`", ",", "1.0084865629420083`", ",", 
     "1.1991829895199233`", ",", "0.9661016949152543`", ",", 
     "0.9578256794751641`", ",", "11.395348837209303`", ",", "1.`", ",", 
     "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "1.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0553980358126007`", ",", "0.9926219428883727`", ",", 
     "0.9967409016838674`", ",", "0.9989854582346974`", ",", 
     "1.030690537084399`", ",", "0.9644083671557914`", ",", 
     "0.8893280632411067`", ",", "1.00990099009901`", ",", 
     "1.066392751990457`", ",", "0.9943502824858758`", ",", 
     "0.9840674789128397`", ",", "5.869767441860465`", ",", "0.`", ",", "1.`",
      ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.2167313047331054`", ",", "1.0075146877988796`", ",", 
     "1.0325909831613254`", ",", "1.0079472438282044`", ",", 
     "0.6572890025575447`", ",", "0.40212300967842646`", ",", 
     "1.0632411067193677`", ",", "1.00990099009901`", ",", 
     "1.2085222808130343`", ",", "0.96045197740113`", ",", 
     "1.0018744142455482`", ",", "2.9627906976744187`", ",", "1.`", ",", 
     "0.`", ",", "1.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "1.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1107847320677455`", ",", "0.9814182265336795`", ",", 
     "0.9855151185949664`", ",", "0.9859655055799798`", ",", 
     "0.9948849104859335`", ",", "0.934748673118951`", ",", 
     "1.0434782608695652`", ",", "1.00990099009901`", ",", 
     "1.1327902375294663`", ",", "0.9915254237288136`", ",", 
     "0.970946579194002`", ",", 
     RowBox[{"-", "8.567441860465117`"}], ",", "0.`", ",", "1.`", ",", "0.`", 
     ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", 
     ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.510440703357022`", ",", "0.9740401694220522`", ",", 
     "0.9956545355784899`", ",", "0.9245857287791681`", ",", 
     RowBox[{"-", "0.07672634271099744`"}], ",", "1.2238526381517327`", ",", 
     "1.158102766798419`", ",", "1.007072135785007`", ",", 
     "1.1424419430270096`", ",", "1.248587570621469`", ",", 
     "1.0309278350515465`", ",", "5.804651162790698`", ",", "0.`", ",", "1.`",
      ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.510440703357022`", ",", "0.9703511408662386`", ",", 
     "1.0083288068078942`", ",", "0.9298275278998985`", ",", 
     RowBox[{"-", "0.1790281329923274`"}], ",", "1.1595379331876365`", ",", 
     "1.142292490118577`", ",", "1.0014144271570014`", ",", 
     "1.1424419430270096`", ",", "1.248587570621469`", ",", 
     "1.0309278350515465`", ",", 
     RowBox[{"-", "4.665116279069768`"}], ",", "0.`", ",", "1.`", ",", "0.`", 
     ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.45505680315714`", ",", "1.`", ",", "1.002353793228318`", ",", 
     "0.9279675346635105`", ",", 
     RowBox[{"-", "0.12531969309462918`"}], ",", "1.2516390883546675`", ",", 
     "1.158102766798419`", ",", "0.9929278642149929`", ",", 
     "1.0760444574880004`", ",", "1.271186440677966`", ",", 
     "1.0496719775070291`", ",", "3.344186046511628`", ",", "0.`", ",", "1.`",
      ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1596581211451007`", ",", "0.9591474245115453`", ",", 
     "0.9561832337497737`", ",", "0.9458911058505243`", ",", 
     "0.8005115089514067`", ",", "0.13331251951295658`", ",", 
     "1.118577075098814`", ",", "0.9929278642149929`", ",", 
     "1.13258669494173`", ",", "1.228813559322034`", ",", 
     "1.1096532333645734`", ",", "6.018604651162791`", ",", "1.`", ",", "0.`",
      ",", "1.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", 
     ",", "0.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.510440703357022`", ",", "0.962836453067359`", ",", 
     "0.9789969219627014`", ",", "0.9015894487656408`", ",", 
     RowBox[{"-", "0.1918158567774936`"}], ",", "1.3799562909772087`", ",", 
     RowBox[{"-", "0.8932806324110671`"}], ",", "0.9971711456859971`", ",", 
     "1.1424419430270096`", ",", "1.248587570621469`", ",", 
     "1.0309278350515465`", ",", "8.106976744186047`", ",", "0.`", ",", "1.`",
      ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658386873908212`", ",", "0.9591474245115453`", ",", 
     "0.9601665761361579`", ",", "0.8828204261075414`", ",", 
     RowBox[{"-", "0.20971867007672634`"}], ",", "1.2622541367467999`", ",", 
     RowBox[{"-", "0.8774703557312252`"}], ",", "1.0084865629420083`", ",", 
     "1.2088346950174667`", ",", "1.231638418079096`", ",", 
     "1.021555763823805`", ",", "10.567441860465117`", ",", "0.`", ",", "1.`",
      ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8940605210304002`", ",", "0.962836453067359`", ",", 
     "0.9493029150823828`", ",", "0.9748055461616503`", ",", 
     "1.3350383631713556`", ",", "0.797065251326881`", ",", 
     "1.4940711462450593`", ",", "1.0084865629420083`", ",", 
     "0.92426322316788`", ",", "0.9802259887005651`", ",", 
     "0.9587628865979381`", ",", 
     RowBox[{"-", "5.883720930232558`"}], ",", "1.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6267553078319632`", ",", "1.066949036753655`", ",", 
     "1.0811153358681875`", ",", "1.0720324653364897`", ",", 
     "0.9462915601023018`", ",", "0.4892288479550421`", ",", 
     "0.7075098814229248`", ",", "0.9999999999999999`", ",", 
     "0.7064016510617349`", ",", "0.9943502824858758`", ",", 
     "0.8791002811621368`", ",", "10.423255813953489`", ",", "1.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.621222587590703`", ",", "0.9591474245115453`", ",", 
     "0.9616150642766612`", ",", "0.8833276969901929`", ",", 
     RowBox[{"-", "0.22506393861892582`"}], ",", "1.2697471120824229`", ",", 
     RowBox[{"-", "0.8656126482213439`"}], ",", "1.007072135785007`", ",", 
     "1.275232180556476`", ",", "1.2175141242937852`", ",", 
     "1.0028116213683225`", ",", "13.027906976744188`", ",", "0.`", ",", 
     "1.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "1.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.3809274235702178`", ",", "0.9889329143325593`", ",", 
     "1.0121310881767156`", ",", "0.9585728779168076`", ",", 
     "0.2020460358056266`", ",", "1.0536996565719638`", ",", 
     "1.0553359683794468`", ",", "1.007072135785007`", ",", 
     "1.4265968626040195`", ",", "1.1242937853107344`", ",", 
     "1.0243673851921276`", ",", "13.069767441860465`", ",", "1.`", ",", 
     "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", 
     "1.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9983192083352687`", ",", "0.9852438857767456`", ",", 
     "0.9646931015752309`", ",", "0.9928982076428813`", ",", 
     "1.3913043478260871`", ",", "0.4274118014361536`", ",", 
     "1.0474308300395256`", ",", "1.0084865629420083`", ",", 
     "0.9904571661191528`", ",", "1.2824858757062148`", ",", 
     "1.1012183692596065`", ",", "7.90232558139535`", ",", "1.`", ",", "0.`", 
     ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", 
     ",", "0.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8369774476913723`", ",", "0.9852438857767456`", ",", 
     "0.9583559659605287`", ",", "0.9472438282042611`", ",", 
     "0.7902813299232737`", ",", "0.5928816734311583`", ",", 
     "1.300395256916996`", ",", "1.0014144271570014`", ",", 
     "0.8483276372965758`", ",", "1.3559322033898304`", ",", 
     "1.0899718837863168`", ",", "7.939534883720931`", ",", "1.`", ",", "0.`",
      ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1661742761569547`", ",", "0.9777291979778658`", ",", 
     "0.9840666304544631`", ",", "0.9852891444031113`", ",", "1.`", ",", 
     "0.9200749297533563`", ",", "1.0474308300395256`", ",", 
     "1.0084865629420083`", ",", "1.1991829895199233`", ",", 
     "0.9887005649717514`", ",", "0.9587628865979381`", ",", 
     "8.265116279069767`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "1.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658386873908212`", ",", "0.9591474245115453`", ",", 
     "0.9500271591526344`", ",", "0.9355765979032804`", ",", 
     "0.7314578005115089`", ",", "0.9522322822354042`", ",", 
     "1.185770750988142`", ",", "1.0056577086280056`", ",", 
     "1.2088346950174667`", ",", "1.231638418079096`", ",", 
     "1.021555763823805`", ",", "8.265116279069767`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5658386873908212`", ",", "0.9777291979778658`", ",", 
     "1.0018106101756292`", ",", "0.924247548190734`", ",", 
     RowBox[{"-", "0.17135549872122763`"}], ",", "1.1710896034967218`", ",", 
     "1.1264822134387351`", ",", "1.0042432814710043`", ",", 
     "1.2088346950174667`", ",", "1.231638418079096`", ",", 
     "1.021555763823805`", ",", "8.265116279069767`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0553951879785366`", ",", "1.`", ",", "1.000181061017563`", ",", 
     "0.9996618194115657`", ",", "0.9923273657289003`", ",", 
     "0.9790821105213863`", ",", "0.9683794466403162`", ",", 
     "1.016973125884017`", ",", "1.066392751990457`", ",", 
     "0.9689265536723163`", ",", "0.9821930646672915`", ",", 
     "4.8465116279069775`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.110790375957073`", ",", "0.9740401694220522`", ",", 
     "0.9795401050153902`", ",", "0.9797091646939465`", ",", 
     "0.9820971867007673`", ",", "0.9300655635341867`", ",", 
     "1.0276679841897234`", ",", "1.0084865629420083`", ",", 
     "1.1327902375294663`", ",", "0.9915254237288136`", ",", 
     "0.970946579194002`", ",", "5.920930232558139`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0553937899509052`", ",", "0.9889329143325593`", ",", 
     "0.9923954372623573`", ",", "0.9928982076428813`", ",", 
     "0.9974424552429668`", ",", "1.0106150483921323`", ",", 
     "0.9841897233201581`", ",", "1.0084865629420083`", ",", 
     "1.066392751990457`", ",", "0.9943502824858758`", ",", 
     "0.9840674789128397`", ",", "3.46046511627907`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9999929580830412`", ",", "1.018718404153573`", ",", 
     "1.035487959442332`", ",", "1.0157253973621914`", ",", 
     "0.7365728900255754`", ",", "0.45238838588822977`", ",", 
     "1.2055335968379446`", ",", "1.0042432814710043`", ",", "1.`", ",", 
     "1.`", ",", "1.`", ",", 
     RowBox[{"-", "14.325581395348838`"}], ",", "0.`", ",", "1.`", ",", "1.`",
      ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8940520810858098`", ",", "0.9963109714441863`", ",", 
     "0.9856961796125294`", ",", "0.9890091308758878`", ",", 
     "1.0358056265984656`", ",", "1.1467374336559475`", ",", 
     "1.217391304347826`", ",", "1.0141442715700142`", ",", 
     "0.92426322316788`", ",", "0.9802259887005651`", ",", 
     "0.9587628865979381`", ",", "2.0232558139534884`", ",", "1.`", ",", 
     "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8386582911349049`", ",", "0.9963109714441863`", ",", 
     "0.9855151185949664`", ",", "0.9888400405816706`", ",", 
     "1.0383631713554988`", ",", "1.1626600062441461`", ",", 
     "1.2134387351778655`", ",", "1.0084865629420083`", ",", 
     "0.8578704711774228`", ",", "1.0169491525423728`", ",", 
     "0.9756326148078724`", ",", "0.586046511627907`", ",", "0.`", ",", "1.`",
      ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
     ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`", ",", "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.740065640224868*^9, 3.740065642325498*^9}, 
   3.7400657325099297`*^9},
 CellLabel->
  "Out[541]=",ExpressionUUID->"0156893c-d68a-44aa-a303-11eb00883986"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{
   "fullData", "\[LeftDoubleBracket]", "trainingIndices", 
    "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740063355718787*^9, 3.740063383372497*^9}, 
   3.740063591451613*^9, {3.7400637131453733`*^9, 3.740063713381859*^9}, {
   3.740063829895092*^9, 3.740063830634275*^9}, 3.740063870088669*^9, 
   3.740065740841456*^9},
 CellLabel->
  "In[542]:=",ExpressionUUID->"9f997e3d-9365-4680-989c-e58078b9e516"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingResults", "=", 
   RowBox[{
   "logMU", "\[LeftDoubleBracket]", "trainingIndices", 
    "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740063605928694*^9, 3.740063635607089*^9}, {
   3.740063719322806*^9, 3.740063719606303*^9}, {3.740063837647252*^9, 
   3.7400638380585403`*^9}, 3.74006387461493*^9},
 CellLabel->
  "In[543]:=",ExpressionUUID->"cbbed523-7a6e-4b0a-a199-1f3ec7c34c0f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testIndices", "=", 
  RowBox[{"Complement", "[", 
   RowBox[{
    RowBox[{"Range", "[", "45", "]"}], ",", "trainingIndices"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7400638037885857`*^9, 3.7400638557798147`*^9}},
 CellLabel->
  "In[544]:=",ExpressionUUID->"87b1df61-12e7-41c9-beee-7f470b96a106"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "8", ",", "15", ",", "16", ",", "20", ",", "28", ",", "31", ",", 
   "36", ",", "37", ",", "44"}], "}"}]], "Output",
 CellChangeTimes->{3.740063856401866*^9, 3.740063889060755*^9, 
  3.740065762827427*^9},
 CellLabel->
  "Out[544]=",ExpressionUUID->"774a5ada-c312-41f2-9146-9a161e72ee9d"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testData", "=", 
  RowBox[{
  "fullData", "\[LeftDoubleBracket]", "testIndices", 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.740063912798501*^9, 3.7400639635001497`*^9}, 
   3.740065772866777*^9},
 CellLabel->
  "In[545]:=",ExpressionUUID->"51d0001c-11b1-4a2b-985d-ec3e5a2a9005"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.9494523433868608`", "0.9243065992621943`", "0.9069346369726599`", 
      "0.8931349340547853`", "0.6982097186700768`", "0.3487355604121136`", 
      "0.5019762845849802`", "1.0042432814710043`", "0.9906607087068892`", 
      "0.9661016949152543`", "0.9465791940018744`", "10.460465116279071`", 
      "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "1.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.115620095414868`", "0.9182948490230907`", "0.9098316132536666`", 
      "0.8961785593506932`", "0.7033248081841433`", "0.3902591320636903`", 
      "0.48221343873517786`", "1.0084865629420083`", "1.1898484317753646`", 
      "0.9576271186440678`", "0.9175257731958762`", "15.748837209302327`", 
      "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "1.`", "0.`", "1.`", "0.`", "0.`"},
     {"1.1596595191727324`", "0.966662112310425`", "0.9684953829440521`", 
      "0.9731146432194792`", "1.040920716112532`", "0.404932875429285`", 
      "1.0790513833992095`", "1.0084865629420083`", "1.13258669494173`", 
      "1.228813559322034`", "1.1096532333645734`", "7.6465116279069765`", 
      "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "1.`", "0.`", "0.`"},
     {"1.1107917739847044`", "0.9294985653777839`", "0.9185225420966866`", 
      "0.9352384173148461`", "1.1713554987212278`", "1.0096784264751795`", 
      "1.3952569169960474`", "1.`", "1.1327902375294663`", 
      "0.9689265536723163`", "0.9690721649484536`", "8.934883720930234`", 
      "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.9983234024181634`", "0.9294985653777839`", "0.8995111352525801`", 
      "0.883665877578627`", "0.659846547314578`", "0.4698719950046831`", 
      "1.2885375494071145`", "1.0113154172560113`", "0.9904571661191528`", 
      "1.2824858757062148`", "1.1012183692596065`", "7.90232558139535`", 
      "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "0.`", "0.`", "1.`"},
     {"1.1596581211451007`", "0.9591474245115453`", "0.9561832337497737`", 
      "0.9458911058505243`", "0.8005115089514067`", "0.13331251951295658`", 
      "1.118577075098814`", "0.9929278642149929`", "1.13258669494173`", 
      "1.228813559322034`", "1.1096532333645734`", "6.018604651162791`", 
      "1.`", "0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "0.`", "0.`", "1.`"},
     {"0.8940605210304002`", "0.962836453067359`", "0.9493029150823828`", 
      "0.9748055461616503`", "1.3350383631713556`", "0.797065251326881`", 
      "1.4940711462450593`", "1.0084865629420083`", "0.92426322316788`", 
      "0.9802259887005651`", "0.9587628865979381`", 
      RowBox[{"-", "5.883720930232558`"}], "1.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`"},
     {"0.8369774476913723`", "0.9852438857767456`", "0.9583559659605287`", 
      "0.9472438282042611`", "0.7902813299232737`", "0.5928816734311583`", 
      "1.300395256916996`", "1.0014144271570014`", "0.8483276372965758`", 
      "1.3559322033898304`", "1.0899718837863168`", "7.939534883720931`", 
      "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "1.`", "0.`", "0.`", "0.`"},
     {"1.1661742761569547`", "0.9777291979778658`", "0.9840666304544631`", 
      "0.9852891444031113`", "1.`", "0.9200749297533563`", 
      "1.0474308300395256`", "1.0084865629420083`", "1.1991829895199233`", 
      "0.9887005649717514`", "0.9587628865979381`", "8.265116279069767`", 
      "0.`", "1.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "1.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.8940520810858098`", "0.9963109714441863`", "0.9856961796125294`", 
      "0.9890091308758878`", "1.0358056265984656`", "1.1467374336559475`", 
      "1.217391304347826`", "1.0141442715700142`", "0.92426322316788`", 
      "0.9802259887005651`", "0.9587628865979381`", "2.0232558139534884`", 
      "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.7400639642677593`*^9, {3.74006577347841*^9, 3.740065777746242*^9}},
 CellLabel->
  "Out[545]=",ExpressionUUID->"99d2871d-d817-4aec-96ed-26d5ff9ba6f9"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testResults", "=", 
  RowBox[{
  "logMU", "\[LeftDoubleBracket]", "testIndices", 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.740063973612764*^9, 3.740063977738372*^9}, {
  3.7400640249739037`*^9, 3.7400640272030973`*^9}},
 CellLabel->
  "In[546]:=",ExpressionUUID->"dd1345cc-bab4-4e27-bc8f-9f071b474bfa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.9`", ",", "1.68`", ",", "1.14`", ",", "1.36`", ",", "1.`", ",", "0.76`", 
   ",", "0.67`", ",", "0.41`", ",", "0.38`", ",", 
   RowBox[{"-", "0.06`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7400640286939173`*^9, 3.740065782035119*^9},
 CellLabel->
  "Out[546]=",ExpressionUUID->"09bee878-fba3-4287-a4a9-8f6e28d235ae"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predict", "Section",
 CellChangeTimes->{{3.7397176223262377`*^9, 3.739717629954794*^9}, {
  3.73971809182152*^9, 
  3.739718093056931*^9}},ExpressionUUID->"d790d9b8-9734-4813-9a0f-\
99084aecbfad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{"trainingData", "\[Rule]", "trainingResults"}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7397176315254803`*^9, 3.739717672195689*^9}, {
  3.7397177591274347`*^9, 3.7397177631548777`*^9}},
 CellLabel->
  "In[547]:=",ExpressionUUID->"77e62de3-71ee-484e-903b-edb34917901a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "28", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "28", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["35", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[
   Association[
   "ExampleNumber" -> 35, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Length" -> 28]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 35, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {1.4270386577052951`, 0.983276403880312, 
                    0.9773621996327049, 0.9418715879994203, 
                    0.4406284252831567, 0.9032157352482048, 
                    0.5323546019198193, 1.0055768842190342`, 
                    1.117909854301375, 1.1101694915254239`, 
                    1.0156111929307807`, 7.019003322259136, 
                    0.42857142857142855`, 0.5714285714285714, 
                    0.39999999999999997`, 0.45714285714285713`, 
                    0.14285714285714285`, 0.02857142857142857, 
                    0.02857142857142857, 0.45714285714285713`, 
                    0.05714285714285714, 0.2571428571428571, 
                    0.14285714285714285`, 0.02857142857142857, 
                    0.05714285714285714, 0.7428571428571429, 
                    0.11428571428571428`, 0.02857142857142857}, "Method" -> 
                   "Naive", "VectorLength" -> 28, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {1.4270386577052951`, 0.983276403880312, 
                    0.9773621996327049, 0.9418715879994203, 
                    0.4406284252831567, 0.9032157352482048, 
                    0.5323546019198193, 1.0055768842190342`, 
                    1.117909854301375, 1.1101694915254239`, 
                    1.0156111929307807`, 7.019003322259136, 
                    0.42857142857142855`, 0.5714285714285714, 
                    0.39999999999999997`, 0.45714285714285713`, 
                    0.14285714285714285`, 0.02857142857142857, 
                    0.02857142857142857, 0.45714285714285713`, 
                    0.05714285714285714, 0.2571428571428571, 
                    0.14285714285714285`, 0.02857142857142857, 
                    0.05714285714285714, 0.7428571428571429, 
                    0.11428571428571428`, 0.02857142857142857}, 
                   "StandardDeviation" -> {0.7706038862878901, 
                    0.03962061353372552, 0.04289572017040489, 
                    0.049872540064823064`, 0.6050598875853601, 
                    0.32053083736775817`, 0.7844128042316107, 
                    0.0047809533791822656`, 0.1314433964778832, 
                    0.1253913678267591, 0.07467368963097235, 
                    6.046019133679564, 0.4948716593053935, 0.4948716593053935,
                     0.4898979485566356, 0.4981598792617913, 
                    0.3499271061118826, 0.16659862556700858`, 
                    0.16659862556700858`, 0.4981598792617913, 
                    0.23211538298959886`, 0.4370588154508101, 
                    0.3499271061118826, 0.16659862556700858`, 
                    0.23211538298959886`, 0.4370588154508101, 
                    0.318157963590287, 0.16659862556700858`}, "Method" -> 
                   "NaiveSampler", "VectorLength" -> 28, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 28]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                   True, "Invertibility" -> "Perfect", "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Padder" -> 
                MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                MachineLearning`MLProcessor["FromMLDataset", 
                  Association[
                  "DatasetFormat" -> Automatic, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 14]], 
                   "InversePreprocessor" -> 
                   MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                "Model" -> Association["Matrix" -> CompressedData["
1:eJw11Wk4FAoXB/CxXbeuVoUSRYSsSSFyQm4qUihli9C92ZW1LFmylbUyiCRb
jWiY7MsZw1gmY8bWCJXtZkvRVSnS63m974f/cz6d5/f8v5wjccnD1ImbQCDs
WMn6lajVpb3jt+vEyIi71O6Tj5HUEbo/yLwTIugOpyrtelBR655WrO1j1NUM
l9bmpiCT77nyt5waNM0TLqpf9wJM65TaZYrJKD/Hm7VzsQiGzMKeaVi6oLWu
QOwZxwog8BeK+wTJo9R2X9Ej+5NxKcZv4VFQBZzIyedy/PYCnLrsTZREm6CC
L7mPVlCJeUqdp/m/d+JN/bmr37U5wKMTklojWYOxO77otKzM8w0Gydpp5dga
8bdAkB0DdboJvz4HFoPNZJ4dqZ2Fgc2CFKPocVjKiZq5+6ga/pJ02T0plQoX
KmUvH97LhqvXN5M7Xdiwjr84Y11NCzraxxmcaKDgxv7lgK3HumEz/8wevrMl
YNQ3wH1PkY2DJjJ5BXlEiLqVRROIf4IO08E/Qs4wUc17rd6aiBB8T5vnJv14
iZsjQ2YW5F5jtNaVpfVaPbCmL+n00c+NMHZX7XTifBN4UBkvCwKpKNvhtmeP
cjpMye6IpHk1QakkXdSgjoqa1I6ve4Q78Ix64wuurhygKx7QPBdYiH+/NY7q
GKNhuhfo2Q2Vg5xgT9awcC1GyWV7FmaQcZ7t/O18FQc0lDxjuvmLUWhYbcfL
rSt7shmXRcvT4La1bV3pmxoYUDdemlCvxonuAUbHbSbWz35/J34+Fw9Ipg+t
dUsDXmND10XPu/hjOXj5sXkBvPckCwjm1EP8X9lQNv4CcpIHzHT5eyD8aJLv
+jI2nrIb/7D0kQ2y5v6x5l7V6BiWf5PtRMTKl+2GZRE0GDKVrTWb9UbDs5bp
FoVE1B74xLIrrEOJA/nb5ctygF+kspLnZDb8tiVd7pMQEQZj8qyOGgxAhqSz
4OXyZnCNVte738EBzmYhtUvneuCH4obNa6SoEPB62iLJoh68/lxQ9BRrxIZ1
jtcSUmohPvW++ZRlJxbemaSEUZqgWzb07XJSHBLdFS0CVaqQGhQ/uKjnhTT3
nyqdwWSgjA8Pl8Q+R/5rR/nMbfIgPfOmzlseCkBoUmYbqxkkDRq3OBzIwwm+
db96ppjo2juU8kWLiiyLF1/jiCxo571zyFEgE5x7l8aOa/Sg+PL+cxsU60F1
iuilU1CKTZYJmcz5Bug5+TW727ILrp+n96QqPIL+wse/vXnABiOmhK1L4TD2
vX/Qcli7Ew9Z/Ix9eScfj+QF3wjafQ1FHTnTud50vHQwe2dpy2tgHBrQvfgb
FcP2GTgcrqsF90TuL4dic9FeZuv4dbtbYPfKL6W64DRqCPxTc+qPOmBO0aO3
fGbjxzcfdvhffgaBZmGy6abN6LS/WYn5jo1X1X28XN/Xg+0HeWnxZjpsov/y
qXjHAW0/m6qeJ09BTYG7TFW5FDMC4hc80klgXvL04Kfn9yC31N2dgCWYdiHY
lpvTgPVjuhJj5iQ07dTW8omtxHR1cte29jrYMzneyP2sGv0SujfL9rbjvWWK
tEI4EeoKGbFTK33e9mYMfU6m4sSN+F05bgWQenV9++j5Cnx44fH0TY82VKUO
pEtXlAGB20SfYBmJcvNTG9mcbBDfzXbMXKiBZeapnWLkO0gOG4+5PeIP64Q3
JxYUZYHxnQhjxgYajk9U9lvd7MGG0sk1Qw9T8H44YelZUCnQPj3i1FwhgRkL
+iMGcvCw/AfGl2+lkHziPMXkRRt60EVYqbO9+HPIOG3RIxN69oVoXLRKxEuL
YV5cRgPwbXhd62c5NhyU6tP0ZiB6NqVkplxsgD7MsK7q70aabuJc3gc68PpG
XLR/kojKkQKLpFgWKG2qyvskTYEFVR//s986QG/Lv6ZNlS9Q73R5nxajCkYO
zbKa9CrhdylLFtfBbtSJtDlyUJcCD7QaZHVIVIg0O1Eg2ZT+fw85qx40rXq4
4PNfD/7nofKqh0urHhqueqC66mH/qof8qx6Yr3r4aNVD51UPprpif3+rlw96
v9pC9h7sRfFta7WIWXVgcx/9AusbcdR0xmZTRhM+cWgtJr9tRFrWgVEGvRaU
foYst555Ccl0r4rJ451gE65sxGWcBCK1Ev1015U+6ieDHIM5WJ0gHHLGKhMC
XQhLkylFcFPZeG6BnA2DH0l3ec93QmKTYMllq1sgo5Jhd3p7MYxtdfocwuqE
GQvrXUz9Pgi8xKq0NsyFicPLs0qDr2AkOHU66TAZ9JrjvlQaFSBBxzM0IIMK
blzivoG/0+CII7FUaHsFWge/bpexrsO4tMqranbl6A9pMl3JteAsW+Vlb0LD
WbZ7nxMxH3iEFtMvKVcgy/sMv+QFBppLCObSC1vR8MjY0oXwUQy+lrqvZ8ND
pAXtc6f95ICC8yHHsf48fL/Pl/NVg41d6XNt4xLZyEO9yBXAU47HFMXSzopF
oGdl0FlfoWxorP9pxttAwtqvx+ZeGz/A8u0HdoYNloOX9F4FH+1XeKumcMce
mUYkJJBdiFQSfCGSywZFurHE+ORdkRv/4FPJXPehdA46hBiqfhcsQ68bnHKi
VDxWkMvVm5rrUVz5qZD8IgXaGTTWO0syMttv++uPsyFwjQp9sbgDqKcGN8m9
eoR0DjmO9KsVCbU8pcUf7qLvjW+uXb0dmPxpvHEnnQNTEm/kcboTT6XJyLo9
6INDfDJRbB4mzMYrqif6+YJFwBqPgX9bcD6D6dld2AL7t1Y9j7TpBmdR7+Nm
t6ox/LCl28/ENiyv5woduk+DTUXDuqEMNj4x6jK/9IAEP2pzhEbmSBA7IZti
HkgHKaeF/UKcQkjLLlcrN6WhtYjaX+7y1yErarC9Nb8JNp7rCsjnfQRrqcJD
b/ObcESEFpCrX4JXu4SUx153Q2r4CNFfoQ/jY/vXDD6rQeP3HdHHNLNxt9Um
ARGpZqyXVhY+AM8hVy6qxyqnHMU1u0f6tlWCJy85IlAjG6KV+sFosgWs1h+/
kDNfgi0jtkJ6FiXgTnsYp/KrC09N+oU2vynDrJq9sR8pDfiu7qjmiVEWqMwk
7WBcCYGNd78KB8m1g+7fEqna+s9xy4zIYKayN1qIkekBAZ1QkOByJlUhD/cv
Ge3tMmnD9KXJy48y6pHm/MXsX0MKTDsKWBOksrGFkOhTp0+D7O1UKZNAJtbU
BjnxrfwhwnA8Vc07DvhDj3CXT/WhmBWDflSMAq3eVwxNTWnQtNPBwUu7GKSi
ZTLdizmYHH8ti/ZnPEa67nhdltQAW1+4nfHfR4XGc4yQX7IteCOOGra1oQHd
vyesk9uZhJfVnP9l2aegyfPjuscuZ8Olk/bFgfoUvAIFWs0vX8Fub8MbRUwm
vHmMXuwWNghGmdff4+rBmEifqeDjPZhz0UDwnm4bms+5KKhq9wPPLGPs6xgL
nZs3mIlz6NhsoifJymKDY7GMakdLPVRvFlZObynCl8cyfhut6AVpis/oYgEH
Zvm159q562D6oQBJ+Z9KJEnWRKTuYqLdfOHh9o0PkSClMW1zTR/9Y9wrlFfu
f+jW6x7R0TRQkV6+8EEiFgz57d2WDYhIMEk4F6P4FB1rbR8oeDbgYLab9h4j
Frr6k8WvKLBRJXXb3rXVTJx5ckheQZcOn+89fqrnQQaq2nDH2HEmJm6X47UX
LcJcjJ4I1y0D6Y9bgnQdqnDXx5a2HzI+MJQtqqjTb44xBrbqulJxMD2psCXV
IwdTHT4HlNmSMGKhLYT0exccNe3w6FEpgWghU+wfLoGR9w0efCt3gSqqWjYq
2YHvnV5dt1r7BvQ/jU02+tSDTsGMvYwZHQsVh3zFVNvhY//+9SJtZNA4bkwn
9iYDKWcXZ3scGyY0D5su32jDslfduj7j5bDNPWf5VUISahL8YjTKGdB9k1td
8GEnjLZAxZ8urcAtpjKWk1UM0W0TEpQ/utF1cOaJTVob8EWdv/2si4O9a+aJ
I0U9sHR1sPW6YwuOqp5N1q9j4MlR/WN+fDm4nmv8VrxNPfwHihdv1Q==
                   
                   "], "Processor" -> 
                  MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {1.4270386577052951`, 0.983276403880312, 
                    0.9773621996327049, 0.9418715879994203, 
                    0.4406284252831567, 0.9032157352482048, 
                    0.5323546019198193, 1.0055768842190342`, 
                    1.117909854301375, 1.1101694915254239`, 
                    1.0156111929307807`, 7.019003322259136, 
                    0.42857142857142855`, 0.5714285714285714, 
                    0.39999999999999997`, 0.45714285714285713`, 
                    0.14285714285714285`, 0.02857142857142857, 
                    0.02857142857142857, 0.45714285714285713`, 
                    0.05714285714285714, 0.2571428571428571, 
                    0.14285714285714285`, 0.02857142857142857, 
                    0.05714285714285714, 0.7428571428571429, 
                    0.11428571428571428`, 0.02857142857142857}, 
                    "StandardDeviation" -> {0.7706038862878901, 
                    0.03962061353372552, 0.04289572017040489, 
                    0.049872540064823064`, 0.6050598875853601, 
                    0.32053083736775817`, 0.7844128042316107, 
                    0.0047809533791822656`, 0.1314433964778832, 
                    0.1253913678267591, 0.07467368963097235, 
                    6.046019133679564, 0.4948716593053935, 0.4948716593053935,
                     0.4898979485566356, 0.4981598792617913, 
                    0.3499271061118826, 0.16659862556700858`, 
                    0.16659862556700858`, 0.4981598792617913, 
                    0.23211538298959886`, 0.4370588154508101, 
                    0.3499271061118826, 0.16659862556700858`, 
                    0.23211538298959886`, 0.4370588154508101, 
                    0.318157963590287, 0.16659862556700858`}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                  "FinalDimension" -> 14, "Method" -> "Linear"], 
                "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.038225, "MaxTrainingMemory" -> 75240, 
                  "DataMemory" -> 8312, "FunctionMemory" -> 28152, 
                  "LanguageVersion" -> {11.3, 0}, "Date" -> 
                  DateObject[{2018, 7, 8, 15, 9, 54.348944`8.487766084593655},
                     "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 28, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
             "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
             7263179337424669307]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {1.4270386577052951`, 0.983276403880312, 
              0.9773621996327049, 0.9418715879994203, 0.4406284252831567, 
              0.9032157352482048, 0.5323546019198193, 1.0055768842190342`, 
              1.117909854301375, 1.1101694915254239`, 1.0156111929307807`, 
              7.019003322259136, 0.42857142857142855`, 0.5714285714285714, 
              0.39999999999999997`, 0.45714285714285713`, 
              0.14285714285714285`, 0.02857142857142857, 0.02857142857142857, 
              0.45714285714285713`, 0.05714285714285714, 0.2571428571428571, 
              0.14285714285714285`, 0.02857142857142857, 0.05714285714285714, 
              0.7428571428571429, 0.11428571428571428`, 0.02857142857142857}, 
             "StandardDeviation" -> {0.7706038862878901, 0.03962061353372552, 
              0.04289572017040489, 0.049872540064823064`, 0.6050598875853601, 
              0.32053083736775817`, 0.7844128042316107, 
              0.0047809533791822656`, 0.1314433964778832, 0.1253913678267591, 
              0.07467368963097235, 6.046019133679564, 0.4948716593053935, 
              0.4948716593053935, 0.4898979485566356, 0.4981598792617913, 
              0.3499271061118826, 0.16659862556700858`, 0.16659862556700858`, 
              0.4981598792617913, 0.23211538298959886`, 0.4370588154508101, 
              0.3499271061118826, 0.16659862556700858`, 0.23211538298959886`, 
              0.4370588154508101, 0.318157963590287, 0.16659862556700858`}, 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1519634882283037191]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Numerical"]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 5764960275667318102]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {0.967142857142857}, 
             "StandardDeviation" -> {0.6708398634912657}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1973973609475737390]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 2169264213102441839]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
             "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (0.967142857142857 + 
       0.6708398634912657 #& ), 
      "ProcessorFunction" -> (-1.441689603998092 + 1.4906687190526804` #& ), 
      "Name" -> "value", 
      "Quantiles" -> {-2.440437645763388, 2.612929311825199}], "Prior" -> 
    Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association["MeanFunction" -> LinearLayer[
        Association[
        "Type" -> "Linear", "Arrays" -> 
         Association[
          "Weights" -> 
           RawArray["Real32",{{
             0.10963018983602524`, -0.031017892062664032`, \
-0.08153165876865387, -0.13081079721450806`, -0.08099935948848724, \
-0.0563490130007267, -0.015535853803157806`, -0.1233263835310936, 
             0.0852622240781784, -0.011419243179261684`, 
             0.045310091227293015`, 0.04249418154358864, 
             0.12640498578548431`, -0.12640498578548431`, 
             0.10271129012107849`, -0.0508921779692173, \
-0.19376681745052338`, -0.10479545593261719`, 
             0.012088705785572529`, -0.06900270283222198, 
             0.11300166696310043`, -0.013282837346196175`, 
             0.12466952204704285`, -0.1576896458864212, \
-0.014665255323052406`, 0.22619503736495972`, 
             0.10731412470340729`, -0.032521236687898636`}}], "Biases" -> 
           RawArray["Real32",{0.}]], "Parameters" -> 
         Association[
          "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 28, 
           "$InputDimensions" -> {28}], "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT]], 
         "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
        Association["Version" -> "11.3.5"]], 
      "DistributionData" -> {NormalDistribution, 0.8426670705998219}, 
      "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {-3.584434336646934*^-16, -1.1419436824715895`*^-14, \
-1.9476483917709887`*^-15, 8.881784197001252*^-17, 1.2053849981644556`*^-16, 
              1.0785023667787235`*^-16, -3.5437922437811914`*^-17, \
-3.715440653552702*^-14, 
              3.60981086292408*^-15, -1.0911906299172966`*^-15, \
-1.5511401686905759`*^-15, 1.586032892321652*^-17, 4.440892098500626*^-17, 
              6.344131569286608*^-17, 1.0150610510858574`*^-16, 
              1.9032394707859827`*^-17, 3.489272363107635*^-17, 0., 
              1.1419436824715895`*^-16, 
              3.172065784643304*^-17, -5.868321701590113*^-17, 
              6.344131569286608*^-17, 2.5376526277146434`*^-17, 
              1.0150610510858574`*^-16, -3.409970718491552*^-17, \
-6.344131569286608*^-17, -3.1720657846433043`*^-18, 0.}, 
             "StandardDeviation" -> {1.0000000000000007`, 1.000000000000261, 
              1.0000000000000129`, 1.000000000000005, 1., 0.9999999999999999, 
              1., 1.0000000000126517`, 0.9999999999999638, 
              1.0000000000000027`, 1.0000000000000402`, 0.9999999999999998, 
              1., 1., 1.0000000000000002`, 1., 1., 1.0000000000000002`, 
              0.9999999999999999, 1., 1.0000000000000007`, 1., 
              1.0000000000000002`, 1.0000000000000007`, 1.0000000000000004`, 
              1., 1.0000000000000002`, 1.0000000000000004`}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 5596334997148494819]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "NumericalVector", "Weight" -> 1],
              "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Method" -> "LinearRegression", "Options" -> 
      Association[
       "L1Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L2Regularization" -> 
        Association["Value" -> 10., "Options" -> Association[]], 
        "OptimizationMethod" -> 
        Association["Value" -> "NormalEquation", "Options" -> Association[]], 
        MaxIterations -> 
        Association["Value" -> 30, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "StandardDeviation", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[0.7610711331707295, 0.12068757093897303`], 
         "StandardDeviation" -> 
         PlusMinus[0.528137727366044, 0.06956305572706055], "EvaluationTime" -> 
         0.000013741071428571428`, "TestSize" -> 84, "TrainingSize" -> 7, 
         "TrainingTime" -> 0.0077220000000000006`, "TrainingMemory" -> 
         102468., "ModelMemory" -> 16696., "ExperimentCount" -> 3, 
         "ModelUtility" -> 0.7968486604518735, "MeanCrossEntropyHistory" -> {
           PlusMinus[0.7439172048726392, 0.054837921147717746`], 
           PlusMinus[1.0840576314950712`, 0.24160645785793713`], 
           PlusMinus[0.7637344916644822, 0.12472551391990931`]}, 
         "StandardDeviationHistory" -> {
           PlusMinus[0.49423123596602897`, 0.04721251024739097], 
           PlusMinus[0.6898223105417973, 0.10802698621944112`], 
           PlusMinus[0.5335037852660983, 0.06289617583172387]}, 
         "Configuration" -> {
          "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
           10., "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
         "FinalTrainingSize" -> 35], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
          "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
          "ModelMemory", "ExperimentCount", "ModelUtility", 
          "MeanCrossEntropyHistory", "StandardDeviationHistory", 
          "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 3], 
          TypeSystem`Vector[TypeSystem`AnyType, 3], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 46810991087301]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.7896254558136988, 4.137952276023104*^7], 
              "StandardDeviation" -> 
              PlusMinus[0.47212214877166137`, 1533.3835659134118`], 
              "EvaluationTime" -> 0.00003382142857142857, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.0200205, 
              "TrainingMemory" -> 102500., "ModelMemory" -> 16696., 
              "ExperimentCount" -> 3, "ModelUtility" -> 
              0.0014062631134540244`, "MeanCrossEntropyHistory" -> {
                PlusMinus[7.167595760698129*^7, 4.9801050889270626`*^7], 
                PlusMinus[1.433428723219082*^8, 6.786311379189187*^7], 
                PlusMinus[0.7896254529554128, 0.21821635269490233`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[2180.15435333323, 816.9108639790816], 
                PlusMinus[5285.325194405401, 1290.1481527343738`], 
                PlusMinus[0.47210480949528694`, 0.05188351046283571]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[3.637209240451754, 5.7516782827399686`*^7], 
              "StandardDeviation" -> 
              PlusMinus[1.1378024587365332`, 3553.2600212671064`], 
              "EvaluationTime" -> 0.00005452380952380952, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.010485000000000001`, 
              "TrainingMemory" -> 112933.33333333333`, "ModelMemory" -> 
              16696., "ExperimentCount" -> 5, "ModelUtility" -> 
              0.000606825307769033, "MeanCrossEntropyHistory" -> {
                PlusMinus[2.1409180336014542`*^8, 2.140918002768769*^8], 
                PlusMinus[4.971024688617952*^7, 4.971024531292735*^7], 
                PlusMinus[5.3633401535826586`*^7, 5.363339912343709*^7], 
                PlusMinus[3.6372089662408853`, 2.319561582868929], 
                PlusMinus[3.0344582396693003`*^8, 2.0071054589919525`*^8]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[9747.275974687984, 6891.781008081209], 
                PlusMinus[6628.753552769381, 4686.7402639280745`], 
                PlusMinus[6387.768041221804, 4516.210730593924], 
                PlusMinus[1.1376472467094192`, 0.3610745922459117], 
                PlusMinus[21594.077786299236`, 7634.659406067307]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00005452380952380952, "ModelMemory" -> 
             16696., "StandardDeviation" -> 
             PlusMinus[1.1378024587365332`, 3553.2600212671064`], 
             "TrainingMemory" -> 112933.33333333333`, "TrainingTime" -> 
             0.02369025], "Index" -> 1], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.4478486234280197`, 0.15596505644220945`], 
              "StandardDeviation" -> 
              PlusMinus[0.6732462291080368, 0.0608060633926081], 
              "EvaluationTime" -> 0.000014642857142857144`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.01125225, 
              "TrainingMemory" -> 102452., "ModelMemory" -> 16696., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.6301829531132163, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.7732552121933278`, 0.07268979618732867], 
                PlusMinus[1.330217350409908, 0.06378155450877111], 
                PlusMinus[1.3102200059594018`, 0.06490523559462263]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6172217754868695, 0.08188428434223781], 
                PlusMinus[0.7100960152555772, 0.09509135918979295], 
                PlusMinus[0.7125589806269671, 0.0958357433130543]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[2.039093010403067, 0.12848495105958588`], 
              "StandardDeviation" -> 
              PlusMinus[0.6722748374517389, 0.07670848067850657], 
              "EvaluationTime" -> 0.00005324489795918367, "TestSize" -> 42, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.007495142857142856, 
              "TrainingMemory" -> 112945.14285714286`, "ModelMemory" -> 
              16696., "ExperimentCount" -> 6, "ModelUtility" -> 
              0.628158352772421, "MeanCrossEntropyHistory" -> {
                PlusMinus[2.006701767923196, 0.3065250009596632], 
                PlusMinus[2.081672096592824, 0.32030710513608474`], 
                PlusMinus[2.0129764503351737`, 0.30781588112190994`], 
                PlusMinus[2.0908239660091534`, 0.32201713873275123`], 
                PlusMinus[2.0301243003221416`, 0.3108963668656094], 
                PlusMinus[2.0199166927948276`, 0.3090894546284298]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8097660714879432, 0.17854862449164466`], 
                PlusMinus[0.6086088687418807, 0.1177654148951112], 
                PlusMinus[0.7959691883359689, 0.21665150281871393`], 
                PlusMinus[0.5764500643488086, 0.11962790438218068`], 
                PlusMinus[0.7559729061387803, 0.20021054471099425`], 
                PlusMinus[0.7802360298235425, 0.21902889355657731`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00005324489795918367, "ModelMemory" -> 
             16696., "StandardDeviation" -> 
             PlusMinus[0.6722748374517389, 0.07670848067850657], 
             "TrainingMemory" -> 112945.14285714286`, "TrainingTime" -> 
             0.01387555], "Index" -> 2], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^-6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.7895931706892579, 4.138581406673057*^13], 
              "StandardDeviation" -> 
              PlusMinus[0.4720984716082217, 1.5336298976832523`*^6], 
              "EvaluationTime" -> 0.000013901785714285712`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.00771225, 
              "TrainingMemory" -> 102420., "ModelMemory" -> 16696., 
              "ExperimentCount" -> 3, "ModelUtility" -> 1.408199663799266*^-6,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[7.168233848043667*^13, 4.98054861610194*^13], 
                PlusMinus[1.4336466535235275`*^14, 6.787343121076452*^13], 
                PlusMinus[0.7895931706892552, 0.21820148423420369`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[2.1802510860859435`*^6, 816947.1629004583], 
                PlusMinus[5.285726619587732*^6, 1.2902461424562966`*^6], 
                PlusMinus[0.4720984542684078, 0.05188188397248825]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[18.955834301025842`, 7.846531277073706*^13], 
              "StandardDeviation" -> 
              PlusMinus[1.1887286762953893`, 3.5537470920520234`*^6], 
              "EvaluationTime" -> 0.00005669047619047617, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.008433166666666665, 
              "TrainingMemory" -> 112949.33333333333`, "ModelMemory" -> 
              16696., "ExperimentCount" -> 5, "ModelUtility" -> 
              6.077125552206409*^-7, "MeanCrossEntropyHistory" -> {
                PlusMinus[2.5433351089801488`*^14, 2.543335108980083*^14], 
                PlusMinus[6.952144260386945*^13, 6.952144260386576*^13], 
                PlusMinus[6.423227674301698*^13, 6.423227674301562*^13], 
                PlusMinus[18.955834301017724`, 14.381200332559544`], 
                PlusMinus[4.270681672043867*^14, 2.82479040823738*^14]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[9.747977629157081*^6, 6.892860293345363*^6], 
                PlusMinus[6.626707586646969*^6, 4.685789133248691*^6], 
                PlusMinus[6.386607575754316*^6, 4.516013112655332*^6], 
                PlusMinus[1.188728463254995, 0.42301015986864765`], 
                PlusMinus[2.1595370499696743`*^7, 7.635116461285713*^6]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00005669047619047617, "ModelMemory" -> 
             16696., "StandardDeviation" -> 
             PlusMinus[1.1887286762953893`, 3.5537470920520234`*^6], 
             "TrainingMemory" -> 112949.33333333333`, "TrainingTime" -> 
             0.010663858333333333`], "Index" -> 3], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.8029128783122608, 33.40085788912602], 
              "StandardDeviation" -> 
              PlusMinus[0.49580852317582597`, 1.3142936234855647`], 
              "EvaluationTime" -> 0.000013375, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.007358, 
              "TrainingMemory" -> 102436., "ModelMemory" -> 16696., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5693300818105121, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[55.30723317988695, 37.032420462731324`], 
                PlusMinus[116.43730064733383`, 55.17858943200948], 
                PlusMinus[0.7990766184164064, 0.22216718466446897`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[2.1456826899367427`, 0.7521710004776289], 
                PlusMinus[4.977863186295967, 1.2125476437438156`], 
                PlusMinus[0.4787782377548402, 0.053434073277416234`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.9192553531289431, 31.86831967595153], 
              "StandardDeviation" -> 
              PlusMinus[0.4735272411659872, 2.895176511269519], 
              "EvaluationTime" -> 0.000048469387755102034`, "TestSize" -> 42, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.007902999999999999, 
              "TrainingMemory" -> 112926.85714285713`, "ModelMemory" -> 
              16696., "ExperimentCount" -> 6, "ModelUtility" -> 
              0.4103623806872987, "MeanCrossEntropyHistory" -> {
                PlusMinus[86.90782980537037, 85.91519781512052], 
                PlusMinus[28.786599620096926`, 27.86179043276618], 
                PlusMinus[40.795620933184765`, 39.94394642163347], 
                PlusMinus[0.9166008143758759, 0.10632578977736525`], 
                PlusMinus[211.93853062421596`, 139.54030681532288`], 
                PlusMinus[16.05044367216576, 9.996117848865035]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[9.901374923850192, 6.659325160373619], 
                PlusMinus[6.6898519636359755`, 4.483571133948881], 
                PlusMinus[6.719287865019994, 4.474483106212146], 
                PlusMinus[0.43010727132288634`, 0.1304500430004497], 
                PlusMinus[21.47250798173573, 7.5884869960341685`], 
                PlusMinus[5.475090287724077, 1.9226064096333066`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000048469387755102034`, "ModelMemory" -> 
             16696., "StandardDeviation" -> 
             PlusMinus[0.4735272411659872, 2.895176511269519], 
             "TrainingMemory" -> 112926.85714285713`, "TrainingTime" -> 
             0.010124049999999999`], "Index" -> 4], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.0001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.7895958423206758, 4.1385186147440667`*^9], 
              "StandardDeviation" -> 
              PlusMinus[0.47210071376983304`, 15336.053924028289`], 
              "EvaluationTime" -> 0.000013589285714285714`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.007398, 
              "TrainingMemory" -> 102420., "ModelMemory" -> 16696., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.0001408007614622669,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[7.168170959515373*^9, 4.980504918840827*^9], 
                PlusMinus[1.433624901830184*^10, 6.787240141683785*^9], 
                PlusMinus[0.7895958422920996, 0.2182029048749538]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[21802.415268889697`, 8169.435805099243], 
                PlusMinus[52856.865325650106`, 12902.363571938338`], 
                PlusMinus[0.4720989797933964, 0.051882050186724475`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[4.797511684340397, 5.943660022814528*^9], 
              "StandardDeviation" -> 
              PlusMinus[1.196685228061838, 35536.90525726954], 
              "EvaluationTime" -> 0.00005616666666666666, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.008323833333333332, 
              "TrainingMemory" -> 112885.33333333333`, "ModelMemory" -> 
              16696., "ExperimentCount" -> 5, "ModelUtility" -> 
              0.00006076209388363156, "MeanCrossEntropyHistory" -> {
                PlusMinus[2.2745899872113274`*^10, 2.2745899867894444`*^10], 
                PlusMinus[5.503633492556154*^9, 5.503633490432209*^9], 
                PlusMinus[5.523503415382562*^9, 5.523503412229386*^9], 
                PlusMinus[4.797511679416324, 3.202831416715779], 
                PlusMinus[3.1178731485166466`*^10, 2.0622792425271473`*^10]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[97478.44073639158, 68926.99992677323], 
                PlusMinus[66269.71056617223, 46859.175002234995`], 
                PlusMinus[63867.399020214376`, 45160.35173082216], 
                PlusMinus[1.19666707999515, 0.39042387859837013`], 
                PlusMinus[215952.1864748814, 76350.6277328836]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00005616666666666666, "ModelMemory" -> 
             16696., "StandardDeviation" -> 
             PlusMinus[1.196685228061838, 35536.90525726954], 
             "TrainingMemory" -> 112885.33333333333`, "TrainingTime" -> 
             0.010311341666666666`], "Index" -> 5], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.447645580607525, 0.15592672360868987`], 
              "StandardDeviation" -> 
              PlusMinus[0.6731321362183562, 0.06081310842474542], 
              "EvaluationTime" -> 0.00001325, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.007619000000000001, 
              "TrainingMemory" -> 102452., "ModelMemory" -> 16696., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.6302865757706457, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.772929073199563, 0.07267404473575827], 
                PlusMinus[1.3300125900743116`, 0.06378098731950049], 
                PlusMinus[1.310006781738205, 0.06490519698353359]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.617062671328357, 0.08186281213646938], 
                PlusMinus[0.7100229178897883, 0.09508275460558195], 
                PlusMinus[0.7124870185288551, 0.0958218674373699]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[2.0383556700163417`, 0.12842692533534358`], 
              "StandardDeviation" -> 
              PlusMinus[0.6719202525212254, 0.07668203535164647], 
              "EvaluationTime" -> 0.00004951020408163265, "TestSize" -> 42, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.007992714285714285, 
              "TrainingMemory" -> 112881.14285714286`, "ModelMemory" -> 
              16696., "ExperimentCount" -> 6, "ModelUtility" -> 
              0.6284872829711177, "MeanCrossEntropyHistory" -> {
                PlusMinus[2.0059886281501633`, 0.30639166309537413`], 
                PlusMinus[2.080856425571024, 0.32015406718531336`], 
                PlusMinus[2.012239935076388, 0.3076783832221216], 
                PlusMinus[2.0900470609440664`, 0.32187133561554543`], 
                PlusMinus[2.0293647623105895`, 0.31075426910653253`], 
                PlusMinus[2.019279230921725, 0.3089707112551365]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.809384802618677, 0.17841726472590577`], 
                PlusMinus[0.608239040896427, 0.11771696363378192`], 
                PlusMinus[0.7955893513503851, 0.21649842912186254`], 
                PlusMinus[0.57606766358371, 0.11958105194645552`], 
                PlusMinus[0.7555889362127749, 0.20005076421273418`], 
                PlusMinus[0.7798835712814473, 0.2189937531132945]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00004951020408163265, "ModelMemory" -> 
             16696., "StandardDeviation" -> 
             PlusMinus[0.6719202525212254, 0.07668203535164647], 
             "TrainingMemory" -> 112881.14285714286`, "TrainingTime" -> 
             0.01041645], "Index" -> 6], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.4456226100652776`, 0.15554405259106238`], 
              "StandardDeviation" -> 
              PlusMinus[0.6719970360087489, 0.060883386794258254`], 
              "EvaluationTime" -> 0.000013267857142857143`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.009234, 
              "TrainingMemory" -> 102452., "ModelMemory" -> 16696., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.6313193241796788, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.7696767932162418`, 0.07251699175587167], 
                PlusMinus[1.3279720142920388`, 0.06377567832373493], 
                PlusMinus[1.3078820409146545`, 0.06490520353386686]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6154821019553233, 0.08164924532899104], 
                PlusMinus[0.7092953851015579, 0.09499682087512662], 
                PlusMinus[0.7117703852889727, 0.09568365808051683]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[2.031053556549214, 0.12785253016731177`], 
              "StandardDeviation" -> 
              PlusMinus[0.6684506997431798, 0.07642282854750115], 
              "EvaluationTime" -> 0.000053816326530612236`, "TestSize" -> 42, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.011325000000000002`, 
              "TrainingMemory" -> 112899.42857142857`, "ModelMemory" -> 
              16696., "ExperimentCount" -> 6, "ModelUtility" -> 
              0.6317241345516694, "MeanCrossEntropyHistory" -> {
                PlusMinus[1.998927554070584, 0.3050715169483591], 
                PlusMinus[2.0727864101384674`, 0.3186400175354243], 
                PlusMinus[2.004945668539878, 0.3063167168588846], 
                PlusMinus[2.082348817322368, 0.32042664300999973`], 
                PlusMinus[2.0218422156299383`, 0.3093469996483254], 
                PlusMinus[2.012964273860176, 0.30779453699926707`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8056236731125374, 0.17712509936336426`], 
                PlusMinus[0.6046131665977417, 0.1172559175667409], 
                PlusMinus[0.7918480671645749, 0.2149805858972522], 
                PlusMinus[0.5723198103325289, 0.11913054560208364`], 
                PlusMinus[0.7518049410819992, 0.19847707458024788`], 
                PlusMinus[0.7764171160831, 0.21864613596562785`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000053816326530612236`, "ModelMemory" -> 
             16696., "StandardDeviation" -> 
             PlusMinus[0.6684506997431798, 0.07642282854750115], 
             "TrainingMemory" -> 112899.42857142857`, "TrainingTime" -> 
             0.01319775], "Index" -> 7], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.4261078571940409`, 0.15178188463057038`], 
              "StandardDeviation" -> 
              PlusMinus[0.6612062712177917, 0.06156274267389573], 
              "EvaluationTime" -> 0.000013687499999999999`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.0073115, 
              "TrainingMemory" -> 102452., "ModelMemory" -> 16696., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.6413066324147492, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.7380351987505225`, 0.07099115606528536], 
                PlusMinus[1.3082445781147967`, 0.0637571345589946], 
                PlusMinus[1.2873558475963223`, 0.06494275736939308]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6006706220283268, 0.07962363089153082], 
                PlusMinus[0.7023494500692159, 0.09414830123817701], 
                PlusMinus[0.704888991527966, 0.09435422746068282]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.9644763018400337`, 0.12263651626389807`], 
              "StandardDeviation" -> 
              PlusMinus[0.6402043800466681, 0.07423508981233477], 
              "EvaluationTime" -> 0.00005267346938775509, "TestSize" -> 42, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.007793714285714286, 
              "TrainingMemory" -> 112945.14285714286`, "ModelMemory" -> 
              16696., "ExperimentCount" -> 6, "ModelUtility" -> 
              0.6593865315560525, "MeanCrossEntropyHistory" -> {
                PlusMinus[1.9346095404400712`, 0.2930540358165943], 
                PlusMinus[1.9998679682128357`, 0.3049650399046099], 
                PlusMinus[1.938428084577708, 0.29390609835740605`], 
                PlusMinus[2.0117953443791485`, 0.3071906491964678], 
                PlusMinus[1.9532141228666506`, 0.29651569697076485`], 
                PlusMinus[1.9552489713078485`, 0.297058115198698]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.7725486719156293, 0.16606308667993844`], 
                PlusMinus[0.5745438519849135, 0.11444426008485074`], 
                PlusMinus[0.7594318006974565, 0.20100484551125947`], 
                PlusMinus[0.5413867729738258, 0.11607929083980721`], 
                PlusMinus[0.7188292561858335, 0.18484422181807306`], 
                PlusMinus[0.7467850771820747, 0.21546621367292618`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00005267346938775509, "ModelMemory" -> 
             16696., "StandardDeviation" -> 
             PlusMinus[0.6402043800466681, 0.07423508981233477], 
             "TrainingMemory" -> 112945.14285714286`, "TrainingTime" -> 
             0.010039300000000001`], "Index" -> 8], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.1], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.7925696999615892, 4072.4121649496606`], 
              "StandardDeviation" -> 
              PlusMinus[0.4744637851224155, 15.0927163360201], 
              "EvaluationTime" -> 0.000013303571428571429`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.007789000000000001, 
              "TrainingMemory" -> 102436., "ModelMemory" -> 16696., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.1236562308231329, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[7089.106024849484, 4923.791456115466], 
                PlusMinus[14107.985119730745`, 6679.270601924599], 
                PlusMinus[0.7925403605845783, 0.21956454568135436`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[21.71192780490129, 8.130232916431861], 
                PlusMinus[52.46573968172257, 12.806701740877218`], 
                PlusMinus[0.47273492189092475`, 0.052044191978268095`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.8251571204550383, 4256.8727573324795`], 
              "StandardDeviation" -> 
              PlusMinus[0.46377407560548695`, 35.43738149260344], 
              "EvaluationTime" -> 0.00005330952380952381, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.007636666666666667, 
              "TrainingMemory" -> 112896., "ModelMemory" -> 16696., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.05720007252433838, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[11044.878268753593`, 11043.624886215644`], 
                PlusMinus[3319.9728081990397`, 3319.073062985326], 
                PlusMinus[4433.772759924874, 4432.778623572641], 
                PlusMinus[0.8251511545055199, 0.09149407139010154], 
                PlusMinus[24003.496517919168`, 15876.184390684992`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[97.61269811445513, 68.60364620881774], 
                PlusMinus[66.41463175283407, 46.69369390008685], 
                PlusMinus[64.2507264063764, 45.08779979752075], 
                PlusMinus[0.4622009247189938, 0.11485270786879642`], 
                PlusMinus[215.80769438869703`, 76.29909156932231]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00005330952380952381, "ModelMemory" -> 
             16696., "StandardDeviation" -> 
             PlusMinus[0.46377407560548695`, 35.43738149260344], 
             "TrainingMemory" -> 112896., "TrainingTime" -> 
             0.010461833333333333`], "Index" -> 9], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.7610711331707295, 0.12068757093897303`], 
              "StandardDeviation" -> 
              PlusMinus[0.528137727366044, 0.06956305572706055], 
              "EvaluationTime" -> 0.000013741071428571428`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.0077220000000000006`, 
              "TrainingMemory" -> 102468., "ModelMemory" -> 16696., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.7968486604518735, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.7439172048726392, 0.054837921147717746`], 
                PlusMinus[1.0840576314950712`, 0.24160645785793713`], 
                PlusMinus[0.7637344916644822, 0.12472551391990931`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.49423123596602897`, 0.04721251024739097], 
                PlusMinus[0.6898223105417973, 0.10802698621944112`], 
                PlusMinus[0.5335037852660983, 0.06289617583172387]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.2995475490813988`, 0.2297151206904432], 
              "StandardDeviation" -> 
              PlusMinus[0.6377735366317779, 0.24382760704367742`], 
              "EvaluationTime" -> 0.00005275510204081632, "TestSize" -> 42, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.007548571428571428, 
              "TrainingMemory" -> 112917.71428571428`, "ModelMemory" -> 
              16696., "ExperimentCount" -> 6, "ModelUtility" -> 
              0.6291442041502004, "MeanCrossEntropyHistory" -> {
                PlusMinus[1.6074285401637274`, 0.5423704204408977], 
                PlusMinus[1.388926547525615, 0.25943145075381635`], 
                PlusMinus[1.4548460265627114`, 0.3888665070140061], 
                PlusMinus[1.1539724205843487`, 0.14815709430005208`], 
                PlusMinus[2.57377403272554, 0.9746215061037393], 
                PlusMinus[1.3938838055354317`, 0.22347654893295266`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.1824873546861432`, 0.4964119672205926], 
                PlusMinus[0.8747690004243539, 0.3558845178924109], 
                PlusMinus[1.030642805420038, 0.4453131398057412], 
                PlusMinus[0.46470249818363624`, 0.11660570842543092`], 
                PlusMinus[2.0927755722629717`, 0.6994101592707151], 
                PlusMinus[0.8555157390328542, 0.24286786345890202`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00005275510204081632, "ModelMemory" -> 
             16696., "StandardDeviation" -> 
             PlusMinus[0.6377735366317779, 0.24382760704367742`], 
             "TrainingMemory" -> 112917.71428571428`, "TrainingTime" -> 
             0.010364], "Index" -> 10], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.01], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.7899127589936384, 413225.51331843436`], 
              "StandardDeviation" -> 
              PlusMinus[0.4723351757139457, 153.1167329205843], 
              "EvaluationTime" -> 0.000013785714285714285`, "TestSize" -> 84, 
              "TrainingSize" -> 7, "TrainingTime" -> 0.00931325, 
              "TrainingMemory" -> 102452., "ModelMemory" -> 16696., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.013890420202300332`,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[716170.9857993075, 497599.7820850589], 
                PlusMinus[1.4314558667577042`*^6, 677697.2239281163], 
                PlusMinus[0.7899124724988167, 0.21834906415939298`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[217.92892957497946`, 81.65814911276966], 
                PlusMinus[528.171900909402, 128.92677025243842`], 
                PlusMinus[0.4721618310706262, 0.05189817596360957]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.3047670579690522`, 521056.78561209294`], 
              "StandardDeviation" -> 
              PlusMinus[0.7902507055574388, 355.1456364233273], 
              "EvaluationTime" -> 0.000053333333333333326`, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.0075334999999999985`, 
              "TrainingMemory" -> 112864., "ModelMemory" -> 16696., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.006014143830345779, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.7153974392454384`*^6, 1.7153955140021625`*^6], 
                PlusMinus[380213.79611999734`, 380212.827542898], 
                PlusMinus[505581.5234656563, 505580.1740583814], 
                PlusMinus[1.3047652759203427`, 0.5449630418846091], 
                PlusMinus[2.8236578205134636`*^6, 1.867673404972712*^6]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[974.7280693687471, 688.7431831006711], 
                PlusMinus[663.3391429810471, 468.7293530049173], 
                PlusMinus[639.3350059185221, 451.64127028031044`], 
                PlusMinus[0.7897717932221721, 0.2005846241380973], 
                PlusMinus[2159.0620117913927`, 763.3436056682184]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000053333333333333326`, "ModelMemory" -> 
             16696., "StandardDeviation" -> 
             PlusMinus[0.7902507055574388, 355.1456364233273], 
             "TrainingMemory" -> 112864., "TrainingTime" -> 0.011949975], 
           "Index" -> 11], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.00001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[7.168227457851912*^11, 7.04355312187538*^11], 
              "StandardDeviation" -> 
              PlusMinus[218025.01158379638`, 115533.72433641432`], 
              "EvaluationTime" -> 0.0000135, "TestSize" -> 28, "TrainingSize" -> 
              7, "TrainingTime" -> 0.007595, "TrainingMemory" -> 102424, 
              "ModelMemory" -> 16696, "ExperimentCount" -> 1, "ModelUtility" -> 
              1.7912700201812498`*^-6, "MeanCrossEntropyHistory" -> {
                PlusMinus[7.168227457851912*^11, 4.9805441761257574`*^11]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[218025.01158379638`, 81694.67993401582]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[10.720957134532728`, 6.705123286322184*^11], 
              "StandardDeviation" -> 
              PlusMinus[1.1937143054798394`, 355374.2256758333], 
              "EvaluationTime" -> 0.00005466666666666666, "TestSize" -> 35, 
              "TrainingSize" -> 28, "TrainingTime" -> 0.008448333333333332, 
              "TrainingMemory" -> 112938.66666666666`, "ModelMemory" -> 
              16696., "ExperimentCount" -> 5, "ModelUtility" -> 
              6.077041932204821*^-6, "MeanCrossEntropyHistory" -> {
                PlusMinus[2.421436403048282*^12, 2.4214364030430044`*^12], 
                PlusMinus[6.612814060594734*^11, 6.612814060569215*^11], 
                PlusMinus[6.102308407394685*^11, 6.10230840737205*^11], 
                PlusMinus[10.720957134273984`, 7.849888900126463], 
                PlusMinus[3.5990954496736807`*^12, 2.380577876154183*^12]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[974796.2758657256, 689284.3316614714], 
                PlusMinus[662673.2128993534, 468580.1091379145], 
                PlusMinus[638661.6299035369, 451601.3950091812], 
                PlusMinus[1.1937123088536654`, 0.40951358591442605`], 
                PlusMinus[2.1595358041649763`*^6, 763511.2056698818]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00005466666666666666, "ModelMemory" -> 
             16696., "StandardDeviation" -> 
             PlusMinus[1.1937143054798394`, 355374.2256758333], 
             "TrainingMemory" -> 112938.66666666666`, "TrainingTime" -> 
             0.010551916666666666`], "Index" -> 12]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["LinearRegression"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
              "ModelMemory", "ExperimentCount", "ModelUtility", 
              "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 12], 
        Association["ID" -> 46806696120005]], "MaxTrainingSize" -> 35, 
      "LastReportingTime" -> 3.740051396563289`16.325452559566436*^9, 
      "PreprocessorEvaluationTime" -> 4.45947265625`3.*^-6, 
      "PreprocessorMemory" -> 43368, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 7, "TimeBudgets" -> 0.8000000000000002, 
          "ElapsedTimes" -> 0.8971439999999999, "ExperimentCounts" -> 34], 
         Association[
         "TrainingSizes" -> 28, "TimeBudgets" -> 1., "ElapsedTimes" -> 
          0.9939470000000001, "ExperimentCounts" -> 66]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[46815286054597]], "ID" -> 46819581021893]]], 
    "Log" -> Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> {{1.110790375957073, 0.9740401694220522, 
            0.9795401050153902, 0.9797091646939465, 0.9820971867007673, 
            0.9300655635341867, 1.0276679841897234`, 1.0084865629420083`, 
            1.1327902375294663`, 0.9915254237288136, 0.970946579194002, 
            5.920930232558139, 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0.,
             0., 1., 0., 0.}}, "ID" -> 6317603181246307725]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 2.669028, "MaxTrainingMemory" -> 714424, "DataMemory" -> 
      28600, "FunctionMemory" -> 239520, "LanguageVersion" -> {11.3, 0}, 
      "Date" -> DateObject[{2018, 7, 8, 15, 9, 56.88481`8.507571285730872}, 
        "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739717680132369*^9, 3.739717766053022*^9, 
  3.740058146878294*^9, 3.7400637324837313`*^9, 3.740063900539363*^9, 
  3.740065796960766*^9},
 CellLabel->
  "Out[547]=",ExpressionUUID->"73d07fc6-d834-43af-97cd-e1ca99eadfb7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"testData", "\[Rule]", "testResults"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7397178362833767`*^9, 3.739717857026514*^9}, 
   3.739718016503529*^9, {3.739718048670498*^9, 3.7397180507085733`*^9}},
 CellLabel->
  "In[548]:=",ExpressionUUID->"54f0e8da-e5db-4541-9afa-aca12138535f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorMeasurementsObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{}, {}, {
                GrayLevel[0.6], 
                Thickness[0.03], 
                Opacity[1.], 
                Dashing[{Small, Small}], 
                
                LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                 11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                 GrayLevel[0.4], 
                 PointSize[0.09], 
                 AbsoluteThickness[1.6], 
                 
                 PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                  2.227816320451859, 2.584653237430766}, {3.043099335090081, 
                  4.798822972025658}, {3.5728355469237116`, 
                  5.9507424155697155`}, {4.158566334344331, 
                  5.2097676165465385`}, {4.824808988689111, 
                  7.23346088027902}, {6.88649660338492, 5.297021421229134}, {
                  7.819072150835878, 6.533166043611269}, {8.437306856915493, 
                  8.81724006216815}, {8.604907881861761, 
                  11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{}, {}, {
                GrayLevel[0.6], 
                Thickness[0.03], 
                Opacity[1.], 
                Dashing[{Small, Small}], 
                
                LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                 11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                 GrayLevel[0.4], 
                 PointSize[0.09], 
                 AbsoluteThickness[1.6], 
                 
                 PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                  2.227816320451859, 2.584653237430766}, {3.043099335090081, 
                  4.798822972025658}, {3.5728355469237116`, 
                  5.9507424155697155`}, {4.158566334344331, 
                  5.2097676165465385`}, {4.824808988689111, 
                  7.23346088027902}, {6.88649660338492, 5.297021421229134}, {
                  7.819072150835878, 6.533166043611269}, {8.437306856915493, 
                  8.81724006216815}, {8.604907881861761, 
                  11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  RowBox[{
                   "0.3330645602861335708`2.535971801721356", "\[PlusMinus]", 
                    "0.0716909517868576929`2."}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorMeasurementsObject[
   Association["Model" -> PredictorFunction[
      Association[
      "ExampleNumber" -> 35, "Input" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association[
             "f1" -> Association[
               "Type" -> "NumericalVector", "Length" -> 28]], "Output" -> 
            Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"NumericalVector"}, 
                   "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                   "ExampleWeights" -> Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
            True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Processors" -> {
              MachineLearning`MLProcessor["ImputeMissing", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Imputer" -> (DimensionReducerFunction[
                  Association[
                  "ExampleNumber" -> 35, "Imputer" -> 
                   MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Fill" -> {1.4270386577052951`, 0.983276403880312, 
                    0.9773621996327049, 0.9418715879994203, 
                    0.4406284252831567, 0.9032157352482048, 
                    0.5323546019198193, 1.0055768842190342`, 
                    1.117909854301375, 1.1101694915254239`, 
                    1.0156111929307807`, 7.019003322259136, 
                    0.42857142857142855`, 0.5714285714285714, 
                    0.39999999999999997`, 0.45714285714285713`, 
                    0.14285714285714285`, 0.02857142857142857, 
                    0.02857142857142857, 0.45714285714285713`, 
                    0.05714285714285714, 0.2571428571428571, 
                    0.14285714285714285`, 0.02857142857142857, 
                    0.05714285714285714, 0.7428571428571429, 
                    0.11428571428571428`, 0.02857142857142857}, "Method" -> 
                    "Naive", "VectorLength" -> 28, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "RandomImputer" -> 
                   MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {1.4270386577052951`, 0.983276403880312, 
                    0.9773621996327049, 0.9418715879994203, 
                    0.4406284252831567, 0.9032157352482048, 
                    0.5323546019198193, 1.0055768842190342`, 
                    1.117909854301375, 1.1101694915254239`, 
                    1.0156111929307807`, 7.019003322259136, 
                    0.42857142857142855`, 0.5714285714285714, 
                    0.39999999999999997`, 0.45714285714285713`, 
                    0.14285714285714285`, 0.02857142857142857, 
                    0.02857142857142857, 0.45714285714285713`, 
                    0.05714285714285714, 0.2571428571428571, 
                    0.14285714285714285`, 0.02857142857142857, 
                    0.05714285714285714, 0.7428571428571429, 
                    0.11428571428571428`, 0.02857142857142857}, 
                    "StandardDeviation" -> {0.7706038862878901, 
                    0.03962061353372552, 0.04289572017040489, 
                    0.049872540064823064`, 0.6050598875853601, 
                    0.32053083736775817`, 0.7844128042316107, 
                    0.0047809533791822656`, 0.1314433964778832, 
                    0.1253913678267591, 0.07467368963097235, 
                    6.046019133679564, 0.4948716593053935, 0.4948716593053935,
                     0.4898979485566356, 0.4981598792617913, 
                    0.3499271061118826, 0.16659862556700858`, 
                    0.16659862556700858`, 0.4981598792617913, 
                    0.23211538298959886`, 0.4370588154508101, 
                    0.3499271061118826, 0.16659862556700858`, 
                    0.23211538298959886`, 0.4370588154508101, 
                    0.318157963590287, 0.16659862556700858`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 28, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "Preprocessor" -> 
                   MachineLearning`MLProcessor["ToMLDataset", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 28]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Preprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                    True, "Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed"]], "Processor" -> 
                   MachineLearning`MLProcessor["Identity"], "Padder" -> 
                   MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                   MachineLearning`MLProcessor["FromMLDataset", 
                    Association[
                    "DatasetFormat" -> Automatic, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 14]], 
                    "InversePreprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                   "Model" -> Association["Matrix" -> CompressedData["
1:eJw11Wk4FAoXB/CxXbeuVoUSRYSsSSFyQm4qUihli9C92ZW1LFmylbUyiCRb
jWiY7MsZw1gmY8bWCJXtZkvRVSnS63m974f/cz6d5/f8v5wjccnD1ImbQCDs
WMn6lajVpb3jt+vEyIi71O6Tj5HUEbo/yLwTIugOpyrtelBR655WrO1j1NUM
l9bmpiCT77nyt5waNM0TLqpf9wJM65TaZYrJKD/Hm7VzsQiGzMKeaVi6oLWu
QOwZxwog8BeK+wTJo9R2X9Ej+5NxKcZv4VFQBZzIyedy/PYCnLrsTZREm6CC
L7mPVlCJeUqdp/m/d+JN/bmr37U5wKMTklojWYOxO77otKzM8w0Gydpp5dga
8bdAkB0DdboJvz4HFoPNZJ4dqZ2Fgc2CFKPocVjKiZq5+6ga/pJ02T0plQoX
KmUvH97LhqvXN5M7Xdiwjr84Y11NCzraxxmcaKDgxv7lgK3HumEz/8wevrMl
YNQ3wH1PkY2DJjJ5BXlEiLqVRROIf4IO08E/Qs4wUc17rd6aiBB8T5vnJv14
iZsjQ2YW5F5jtNaVpfVaPbCmL+n00c+NMHZX7XTifBN4UBkvCwKpKNvhtmeP
cjpMye6IpHk1QakkXdSgjoqa1I6ve4Q78Ix64wuurhygKx7QPBdYiH+/NY7q
GKNhuhfo2Q2Vg5xgT9awcC1GyWV7FmaQcZ7t/O18FQc0lDxjuvmLUWhYbcfL
rSt7shmXRcvT4La1bV3pmxoYUDdemlCvxonuAUbHbSbWz35/J34+Fw9Ipg+t
dUsDXmND10XPu/hjOXj5sXkBvPckCwjm1EP8X9lQNv4CcpIHzHT5eyD8aJLv
+jI2nrIb/7D0kQ2y5v6x5l7V6BiWf5PtRMTKl+2GZRE0GDKVrTWb9UbDs5bp
FoVE1B74xLIrrEOJA/nb5ctygF+kspLnZDb8tiVd7pMQEQZj8qyOGgxAhqSz
4OXyZnCNVte738EBzmYhtUvneuCH4obNa6SoEPB62iLJoh68/lxQ9BRrxIZ1
jtcSUmohPvW++ZRlJxbemaSEUZqgWzb07XJSHBLdFS0CVaqQGhQ/uKjnhTT3
nyqdwWSgjA8Pl8Q+R/5rR/nMbfIgPfOmzlseCkBoUmYbqxkkDRq3OBzIwwm+
db96ppjo2juU8kWLiiyLF1/jiCxo571zyFEgE5x7l8aOa/Sg+PL+cxsU60F1
iuilU1CKTZYJmcz5Bug5+TW727ILrp+n96QqPIL+wse/vXnABiOmhK1L4TD2
vX/Qcli7Ew9Z/Ix9eScfj+QF3wjafQ1FHTnTud50vHQwe2dpy2tgHBrQvfgb
FcP2GTgcrqsF90TuL4dic9FeZuv4dbtbYPfKL6W64DRqCPxTc+qPOmBO0aO3
fGbjxzcfdvhffgaBZmGy6abN6LS/WYn5jo1X1X28XN/Xg+0HeWnxZjpsov/y
qXjHAW0/m6qeJ09BTYG7TFW5FDMC4hc80klgXvL04Kfn9yC31N2dgCWYdiHY
lpvTgPVjuhJj5iQ07dTW8omtxHR1cte29jrYMzneyP2sGv0SujfL9rbjvWWK
tEI4EeoKGbFTK33e9mYMfU6m4sSN+F05bgWQenV9++j5Cnx44fH0TY82VKUO
pEtXlAGB20SfYBmJcvNTG9mcbBDfzXbMXKiBZeapnWLkO0gOG4+5PeIP64Q3
JxYUZYHxnQhjxgYajk9U9lvd7MGG0sk1Qw9T8H44YelZUCnQPj3i1FwhgRkL
+iMGcvCw/AfGl2+lkHziPMXkRRt60EVYqbO9+HPIOG3RIxN69oVoXLRKxEuL
YV5cRgPwbXhd62c5NhyU6tP0ZiB6NqVkplxsgD7MsK7q70aabuJc3gc68PpG
XLR/kojKkQKLpFgWKG2qyvskTYEFVR//s986QG/Lv6ZNlS9Q73R5nxajCkYO
zbKa9CrhdylLFtfBbtSJtDlyUJcCD7QaZHVIVIg0O1Eg2ZT+fw85qx40rXq4
4PNfD/7nofKqh0urHhqueqC66mH/qof8qx6Yr3r4aNVD51UPprpif3+rlw96
v9pC9h7sRfFta7WIWXVgcx/9AusbcdR0xmZTRhM+cWgtJr9tRFrWgVEGvRaU
foYst555Ccl0r4rJ451gE65sxGWcBCK1Ev1015U+6ieDHIM5WJ0gHHLGKhMC
XQhLkylFcFPZeG6BnA2DH0l3ec93QmKTYMllq1sgo5Jhd3p7MYxtdfocwuqE
GQvrXUz9Pgi8xKq0NsyFicPLs0qDr2AkOHU66TAZ9JrjvlQaFSBBxzM0IIMK
blzivoG/0+CII7FUaHsFWge/bpexrsO4tMqranbl6A9pMl3JteAsW+Vlb0LD
WbZ7nxMxH3iEFtMvKVcgy/sMv+QFBppLCObSC1vR8MjY0oXwUQy+lrqvZ8ND
pAXtc6f95ICC8yHHsf48fL/Pl/NVg41d6XNt4xLZyEO9yBXAU47HFMXSzopF
oGdl0FlfoWxorP9pxttAwtqvx+ZeGz/A8u0HdoYNloOX9F4FH+1XeKumcMce
mUYkJJBdiFQSfCGSywZFurHE+ORdkRv/4FPJXPehdA46hBiqfhcsQ68bnHKi
VDxWkMvVm5rrUVz5qZD8IgXaGTTWO0syMttv++uPsyFwjQp9sbgDqKcGN8m9
eoR0DjmO9KsVCbU8pcUf7qLvjW+uXb0dmPxpvHEnnQNTEm/kcboTT6XJyLo9
6INDfDJRbB4mzMYrqif6+YJFwBqPgX9bcD6D6dld2AL7t1Y9j7TpBmdR7+Nm
t6ox/LCl28/ENiyv5woduk+DTUXDuqEMNj4x6jK/9IAEP2pzhEbmSBA7IZti
HkgHKaeF/UKcQkjLLlcrN6WhtYjaX+7y1yErarC9Nb8JNp7rCsjnfQRrqcJD
b/ObcESEFpCrX4JXu4SUx153Q2r4CNFfoQ/jY/vXDD6rQeP3HdHHNLNxt9Um
ARGpZqyXVhY+AM8hVy6qxyqnHMU1u0f6tlWCJy85IlAjG6KV+sFosgWs1h+/
kDNfgi0jtkJ6FiXgTnsYp/KrC09N+oU2vynDrJq9sR8pDfiu7qjmiVEWqMwk
7WBcCYGNd78KB8m1g+7fEqna+s9xy4zIYKayN1qIkekBAZ1QkOByJlUhD/cv
Ge3tMmnD9KXJy48y6pHm/MXsX0MKTDsKWBOksrGFkOhTp0+D7O1UKZNAJtbU
BjnxrfwhwnA8Vc07DvhDj3CXT/WhmBWDflSMAq3eVwxNTWnQtNPBwUu7GKSi
ZTLdizmYHH8ti/ZnPEa67nhdltQAW1+4nfHfR4XGc4yQX7IteCOOGra1oQHd
vyesk9uZhJfVnP9l2aegyfPjuscuZ8Olk/bFgfoUvAIFWs0vX8Fub8MbRUwm
vHmMXuwWNghGmdff4+rBmEifqeDjPZhz0UDwnm4bms+5KKhq9wPPLGPs6xgL
nZs3mIlz6NhsoifJymKDY7GMakdLPVRvFlZObynCl8cyfhut6AVpis/oYgEH
Zvm159q562D6oQBJ+Z9KJEnWRKTuYqLdfOHh9o0PkSClMW1zTR/9Y9wrlFfu
f+jW6x7R0TRQkV6+8EEiFgz57d2WDYhIMEk4F6P4FB1rbR8oeDbgYLab9h4j
Frr6k8WvKLBRJXXb3rXVTJx5ckheQZcOn+89fqrnQQaq2nDH2HEmJm6X47UX
LcJcjJ4I1y0D6Y9bgnQdqnDXx5a2HzI+MJQtqqjTb44xBrbqulJxMD2psCXV
IwdTHT4HlNmSMGKhLYT0exccNe3w6FEpgWghU+wfLoGR9w0efCt3gSqqWjYq
2YHvnV5dt1r7BvQ/jU02+tSDTsGMvYwZHQsVh3zFVNvhY//+9SJtZNA4bkwn
9iYDKWcXZ3scGyY0D5su32jDslfduj7j5bDNPWf5VUISahL8YjTKGdB9k1td
8GEnjLZAxZ8urcAtpjKWk1UM0W0TEpQ/utF1cOaJTVob8EWdv/2si4O9a+aJ
I0U9sHR1sPW6YwuOqp5N1q9j4MlR/WN+fDm4nmv8VrxNPfwHihdv1Q==
                    
                    "], "Processor" -> 
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {1.4270386577052951`, 0.983276403880312, 
                    0.9773621996327049, 0.9418715879994203, 
                    0.4406284252831567, 0.9032157352482048, 
                    0.5323546019198193, 1.0055768842190342`, 
                    1.117909854301375, 1.1101694915254239`, 
                    1.0156111929307807`, 7.019003322259136, 
                    0.42857142857142855`, 0.5714285714285714, 
                    0.39999999999999997`, 0.45714285714285713`, 
                    0.14285714285714285`, 0.02857142857142857, 
                    0.02857142857142857, 0.45714285714285713`, 
                    0.05714285714285714, 0.2571428571428571, 
                    0.14285714285714285`, 0.02857142857142857, 
                    0.05714285714285714, 0.7428571428571429, 
                    0.11428571428571428`, 0.02857142857142857}, 
                    "StandardDeviation" -> {0.7706038862878901, 
                    0.03962061353372552, 0.04289572017040489, 
                    0.049872540064823064`, 0.6050598875853601, 
                    0.32053083736775817`, 0.7844128042316107, 
                    0.0047809533791822656`, 0.1314433964778832, 
                    0.1253913678267591, 0.07467368963097235, 
                    6.046019133679564, 0.4948716593053935, 0.4948716593053935,
                     0.4898979485566356, 0.4981598792617913, 
                    0.3499271061118826, 0.16659862556700858`, 
                    0.16659862556700858`, 0.4981598792617913, 
                    0.23211538298959886`, 0.4370588154508101, 
                    0.3499271061118826, 0.16659862556700858`, 
                    0.23211538298959886`, 0.4370588154508101, 
                    0.318157963590287, 0.16659862556700858`}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                    "FinalDimension" -> 14, "Method" -> "Linear"], 
                   "PerformanceGoal" -> Automatic, "Invertibility" -> 
                   "Approximate", "Log" -> 
                   Association[
                    "TrainingTime" -> 0.038225, "MaxTrainingMemory" -> 75240, 
                    "DataMemory" -> 8312, "FunctionMemory" -> 28152, 
                    "LanguageVersion" -> {11.3, 0}, "Date" -> 
                    DateObject[{
                    2018, 7, 8, 15, 9, 54.348944`8.487766084593655}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "MacOSX", "SystemWordLength" -> 64, 
                    "Evaluations" -> {}]]][#, "ImputedVectors", 
                  PerformanceGoal -> "Quality"]& ), "Method" -> 
                "DimensionReduction", "VectorLength" -> 28, "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
                7263179337424669307]], 
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Mean" -> {1.4270386577052951`, 0.983276403880312, 
                 0.9773621996327049, 0.9418715879994203, 0.4406284252831567, 
                 0.9032157352482048, 0.5323546019198193, 1.0055768842190342`, 
                 1.117909854301375, 1.1101694915254239`, 1.0156111929307807`, 
                 7.019003322259136, 0.42857142857142855`, 0.5714285714285714, 
                 0.39999999999999997`, 0.45714285714285713`, 
                 0.14285714285714285`, 0.02857142857142857, 
                 0.02857142857142857, 0.45714285714285713`, 
                 0.05714285714285714, 0.2571428571428571, 
                 0.14285714285714285`, 0.02857142857142857, 
                 0.05714285714285714, 0.7428571428571429, 
                 0.11428571428571428`, 0.02857142857142857}, 
                "StandardDeviation" -> {0.7706038862878901, 
                 0.03962061353372552, 0.04289572017040489, 
                 0.049872540064823064`, 0.6050598875853601, 
                 0.32053083736775817`, 0.7844128042316107, 
                 0.0047809533791822656`, 0.1314433964778832, 
                 0.1253913678267591, 0.07467368963097235, 6.046019133679564, 
                 0.4948716593053935, 0.4948716593053935, 0.4898979485566356, 
                 0.4981598792617913, 0.3499271061118826, 0.16659862556700858`,
                  0.16659862556700858`, 0.4981598792617913, 
                 0.23211538298959886`, 0.4370588154508101, 0.3499271061118826,
                  0.16659862556700858`, 0.23211538298959886`, 
                 0.4370588154508101, 0.318157963590287, 0.16659862556700858`},
                 "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 1519634882283037191]]}, 
            "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association["f1" -> Association["Type" -> "Numerical"]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
            True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Processors" -> {
              MachineLearning`MLProcessor["ToVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 5764960275667318102]], 
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Mean" -> {0.967142857142857}, 
                "StandardDeviation" -> {0.6708398634912657}, "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 1973973609475737390]], 
              MachineLearning`MLProcessor["FromVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 2169264213102441839]], 
              MachineLearning`MLProcessor["FirstValues", 
               Association[
               "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
                "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
            "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (0.967142857142857 + 
          0.6708398634912657 #& ), 
         "ProcessorFunction" -> (-1.441689603998092 + 
          1.4906687190526804` #& ), "Name" -> "value", 
         "Quantiles" -> {-2.440437645763388, 2.612929311825199}], "Prior" -> 
       Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
       "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
       "Model" -> Association["MeanFunction" -> LinearLayer[
           Association[
           "Type" -> "Linear", "Arrays" -> 
            Association[
             "Weights" -> 
              RawArray["Real32",{{
                0.10963018983602524`, -0.031017892062664032`, \
-0.08153165876865387, -0.13081079721450806`, -0.08099935948848724, \
-0.0563490130007267, -0.015535853803157806`, -0.1233263835310936, 
                0.0852622240781784, -0.011419243179261684`, 
                0.045310091227293015`, 0.04249418154358864, 
                0.12640498578548431`, -0.12640498578548431`, 
                0.10271129012107849`, -0.0508921779692173, \
-0.19376681745052338`, -0.10479545593261719`, 
                0.012088705785572529`, -0.06900270283222198, 
                0.11300166696310043`, -0.013282837346196175`, 
                0.12466952204704285`, -0.1576896458864212, \
-0.014665255323052406`, 0.22619503736495972`, 
                0.10731412470340729`, -0.032521236687898636`}}], "Biases" -> 
              RawArray["Real32",{0.}]], "Parameters" -> 
            Association[
             "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 
              28, "$InputDimensions" -> {28}], "Inputs" -> 
            Association[
             "Input" -> NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT]], 
            "Outputs" -> 
            Association[
             "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
           
           Association["Version" -> "11.3.5"]], 
         "DistributionData" -> {NormalDistribution, 0.8426670705998219}, 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Processors" -> {
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                
                "Mean" -> {-3.584434336646934*^-16, \
-1.1419436824715895`*^-14, -1.9476483917709887`*^-15, 8.881784197001252*^-17, 
                 1.2053849981644556`*^-16, 
                 1.0785023667787235`*^-16, -3.5437922437811914`*^-17, \
-3.715440653552702*^-14, 
                 3.60981086292408*^-15, -1.0911906299172966`*^-15, \
-1.5511401686905759`*^-15, 1.586032892321652*^-17, 4.440892098500626*^-17, 
                 6.344131569286608*^-17, 1.0150610510858574`*^-16, 
                 1.9032394707859827`*^-17, 3.489272363107635*^-17, 0., 
                 1.1419436824715895`*^-16, 
                 3.172065784643304*^-17, -5.868321701590113*^-17, 
                 6.344131569286608*^-17, 2.5376526277146434`*^-17, 
                 1.0150610510858574`*^-16, -3.409970718491552*^-17, \
-6.344131569286608*^-17, -3.1720657846433043`*^-18, 0.}, 
                "StandardDeviation" -> {1.0000000000000007`, 
                 1.000000000000261, 1.0000000000000129`, 1.000000000000005, 
                 1., 0.9999999999999999, 1., 1.0000000000126517`, 
                 0.9999999999999638, 1.0000000000000027`, 1.0000000000000402`,
                  0.9999999999999998, 1., 1., 1.0000000000000002`, 1., 1., 
                 1.0000000000000002`, 0.9999999999999999, 1., 
                 1.0000000000000007`, 1., 1.0000000000000002`, 
                 1.0000000000000007`, 1.0000000000000004`, 1., 
                 1.0000000000000002`, 1.0000000000000004`}, "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 5596334997148494819]], 
              MachineLearning`MLProcessor["FirstValues", 
               Association[
               "Info" -> Association[
                 "Type" -> "NumericalVector", "Weight" -> 1], "Key" -> "f1", 
                "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
            "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], "Method" -> 
         "LinearRegression", "Options" -> 
         Association[
          "L1Regularization" -> 
           Association["Value" -> 0, "Options" -> Association[]], 
           "L2Regularization" -> 
           Association["Value" -> 10., "Options" -> Association[]], 
           "OptimizationMethod" -> 
           Association[
            "Value" -> "NormalEquation", "Options" -> Association[]], 
           MaxIterations -> 
           Association["Value" -> 30, "Options" -> Association[]]]], 
       "TrainingInformation" -> 
       Association[
        "LossName" -> "StandardDeviation", "BestModelInformation" -> Dataset[
           Association[
           "MeanCrossEntropy" -> 
            PlusMinus[0.7610711331707295, 0.12068757093897303`], 
            "StandardDeviation" -> 
            PlusMinus[0.528137727366044, 0.06956305572706055], 
            "EvaluationTime" -> 0.000013741071428571428`, "TestSize" -> 84, 
            "TrainingSize" -> 7, "TrainingTime" -> 0.0077220000000000006`, 
            "TrainingMemory" -> 102468., "ModelMemory" -> 16696., 
            "ExperimentCount" -> 3, "ModelUtility" -> 0.7968486604518735, 
            "MeanCrossEntropyHistory" -> {
              PlusMinus[0.7439172048726392, 0.054837921147717746`], 
              PlusMinus[1.0840576314950712`, 0.24160645785793713`], 
              PlusMinus[0.7637344916644822, 0.12472551391990931`]}, 
            "StandardDeviationHistory" -> {
              PlusMinus[0.49423123596602897`, 0.04721251024739097], 
              PlusMinus[0.6898223105417973, 0.10802698621944112`], 
              PlusMinus[0.5335037852660983, 0.06289617583172387]}, 
            "Configuration" -> {
             "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
              10., "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
            "FinalTrainingSize" -> 35], 
           
           TypeSystem`Struct[{
            "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
             "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
             "ModelMemory", "ExperimentCount", "ModelUtility", 
             "MeanCrossEntropyHistory", "StandardDeviationHistory", 
             "Configuration", "FinalTrainingSize"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[TypeSystem`AnyType, 3], 
             TypeSystem`Vector[TypeSystem`AnyType, 3], 
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`Atom[Integer]}], 
           Association["ID" -> 46810991087301]], "Configurations" -> Dataset[
           Association[
           Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.7896254558136988, 4.137952276023104*^7], 
                 "StandardDeviation" -> 
                 PlusMinus[0.47212214877166137`, 1533.3835659134118`], 
                 "EvaluationTime" -> 0.00003382142857142857, "TestSize" -> 84,
                  "TrainingSize" -> 7, "TrainingTime" -> 0.0200205, 
                 "TrainingMemory" -> 102500., "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 
                 0.0014062631134540244`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[7.167595760698129*^7, 4.9801050889270626`*^7], 
                   PlusMinus[1.433428723219082*^8, 6.786311379189187*^7], 
                   PlusMinus[0.7896254529554128, 0.21821635269490233`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[2180.15435333323, 816.9108639790816], 
                   PlusMinus[5285.325194405401, 1290.1481527343738`], 
                   PlusMinus[0.47210480949528694`, 0.05188351046283571]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[3.637209240451754, 5.7516782827399686`*^7], 
                 "StandardDeviation" -> 
                 PlusMinus[1.1378024587365332`, 3553.2600212671064`], 
                 "EvaluationTime" -> 0.00005452380952380952, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.010485000000000001`, "TrainingMemory" -> 
                 112933.33333333333`, "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 5, "ModelUtility" -> 
                 0.000606825307769033, "MeanCrossEntropyHistory" -> {
                   PlusMinus[2.1409180336014542`*^8, 2.140918002768769*^8], 
                   PlusMinus[4.971024688617952*^7, 4.971024531292735*^7], 
                   PlusMinus[5.3633401535826586`*^7, 5.363339912343709*^7], 
                   PlusMinus[3.6372089662408853`, 2.319561582868929], 
                   PlusMinus[3.0344582396693003`*^8, 2.0071054589919525`*^8]},
                  "StandardDeviationHistory" -> {
                   PlusMinus[9747.275974687984, 6891.781008081209], 
                   PlusMinus[6628.753552769381, 4686.7402639280745`], 
                   PlusMinus[6387.768041221804, 4516.210730593924], 
                   PlusMinus[1.1376472467094192`, 0.3610745922459117], 
                   PlusMinus[21594.077786299236`, 7634.659406067307]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00005452380952380952, "ModelMemory" -> 
                16696., "StandardDeviation" -> 
                PlusMinus[1.1378024587365332`, 3553.2600212671064`], 
                "TrainingMemory" -> 112933.33333333333`, "TrainingTime" -> 
                0.02369025], "Index" -> 1], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.*^6], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.4478486234280197`, 0.15596505644220945`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6732462291080368, 0.0608060633926081], 
                 "EvaluationTime" -> 0.000014642857142857144`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 0.01125225, 
                 "TrainingMemory" -> 102452., "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.6301829531132163,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.7732552121933278`, 0.07268979618732867], 
                   PlusMinus[1.330217350409908, 0.06378155450877111], 
                   PlusMinus[1.3102200059594018`, 0.06490523559462263]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6172217754868695, 0.08188428434223781], 
                   PlusMinus[0.7100960152555772, 0.09509135918979295], 
                   PlusMinus[0.7125589806269671, 0.0958357433130543]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[2.039093010403067, 0.12848495105958588`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6722748374517389, 0.07670848067850657], 
                 "EvaluationTime" -> 0.00005324489795918367, "TestSize" -> 42,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.007495142857142856, "TrainingMemory" -> 
                 112945.14285714286`, "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 6, "ModelUtility" -> 0.628158352772421, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[2.006701767923196, 0.3065250009596632], 
                   PlusMinus[2.081672096592824, 0.32030710513608474`], 
                   PlusMinus[2.0129764503351737`, 0.30781588112190994`], 
                   PlusMinus[2.0908239660091534`, 0.32201713873275123`], 
                   PlusMinus[2.0301243003221416`, 0.3108963668656094], 
                   PlusMinus[2.0199166927948276`, 0.3090894546284298]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8097660714879432, 0.17854862449164466`], 
                   PlusMinus[0.6086088687418807, 0.1177654148951112], 
                   PlusMinus[0.7959691883359689, 0.21665150281871393`], 
                   PlusMinus[0.5764500643488086, 0.11962790438218068`], 
                   PlusMinus[0.7559729061387803, 0.20021054471099425`], 
                   PlusMinus[0.7802360298235425, 0.21902889355657731`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00005324489795918367, "ModelMemory" -> 
                16696., "StandardDeviation" -> 
                PlusMinus[0.6722748374517389, 0.07670848067850657], 
                "TrainingMemory" -> 112945.14285714286`, "TrainingTime" -> 
                0.01387555], "Index" -> 2], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.*^-6], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.7895931706892579, 4.138581406673057*^13], 
                 "StandardDeviation" -> 
                 PlusMinus[0.4720984716082217, 1.5336298976832523`*^6], 
                 "EvaluationTime" -> 0.000013901785714285712`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 0.00771225, 
                 "TrainingMemory" -> 102420., "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 
                 1.408199663799266*^-6, "MeanCrossEntropyHistory" -> {
                   PlusMinus[7.168233848043667*^13, 4.98054861610194*^13], 
                   PlusMinus[1.4336466535235275`*^14, 6.787343121076452*^13], 
                   
                   PlusMinus[0.7895931706892552, 0.21820148423420369`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[2.1802510860859435`*^6, 816947.1629004583], 
                   PlusMinus[5.285726619587732*^6, 1.2902461424562966`*^6], 
                   PlusMinus[0.4720984542684078, 0.05188188397248825]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[18.955834301025842`, 7.846531277073706*^13], 
                 "StandardDeviation" -> 
                 PlusMinus[1.1887286762953893`, 3.5537470920520234`*^6], 
                 "EvaluationTime" -> 0.00005669047619047617, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.008433166666666665, "TrainingMemory" -> 
                 112949.33333333333`, "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 5, "ModelUtility" -> 
                 6.077125552206409*^-7, "MeanCrossEntropyHistory" -> {
                   PlusMinus[2.5433351089801488`*^14, 2.543335108980083*^14], 
                   
                   PlusMinus[6.952144260386945*^13, 6.952144260386576*^13], 
                   PlusMinus[6.423227674301698*^13, 6.423227674301562*^13], 
                   PlusMinus[18.955834301017724`, 14.381200332559544`], 
                   PlusMinus[4.270681672043867*^14, 2.82479040823738*^14]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[9.747977629157081*^6, 6.892860293345363*^6], 
                   PlusMinus[6.626707586646969*^6, 4.685789133248691*^6], 
                   PlusMinus[6.386607575754316*^6, 4.516013112655332*^6], 
                   PlusMinus[1.188728463254995, 0.42301015986864765`], 
                   PlusMinus[2.1595370499696743`*^7, 7.635116461285713*^6]}]},
               "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00005669047619047617, "ModelMemory" -> 
                16696., "StandardDeviation" -> 
                PlusMinus[1.1887286762953893`, 3.5537470920520234`*^6], 
                "TrainingMemory" -> 112949.33333333333`, "TrainingTime" -> 
                0.010663858333333333`], "Index" -> 3], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.8029128783122608, 33.40085788912602], 
                 "StandardDeviation" -> 
                 PlusMinus[0.49580852317582597`, 1.3142936234855647`], 
                 "EvaluationTime" -> 0.000013375, "TestSize" -> 84, 
                 "TrainingSize" -> 7, "TrainingTime" -> 0.007358, 
                 "TrainingMemory" -> 102436., "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.5693300818105121,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[55.30723317988695, 37.032420462731324`], 
                   PlusMinus[116.43730064733383`, 55.17858943200948], 
                   PlusMinus[0.7990766184164064, 0.22216718466446897`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[2.1456826899367427`, 0.7521710004776289], 
                   PlusMinus[4.977863186295967, 1.2125476437438156`], 
                   PlusMinus[0.4787782377548402, 0.053434073277416234`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.9192553531289431, 31.86831967595153], 
                 "StandardDeviation" -> 
                 PlusMinus[0.4735272411659872, 2.895176511269519], 
                 "EvaluationTime" -> 0.000048469387755102034`, "TestSize" -> 
                 42, "TrainingSize" -> 28, "TrainingTime" -> 
                 0.007902999999999999, "TrainingMemory" -> 
                 112926.85714285713`, "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 6, "ModelUtility" -> 0.4103623806872987,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[86.90782980537037, 85.91519781512052], 
                   PlusMinus[28.786599620096926`, 27.86179043276618], 
                   PlusMinus[40.795620933184765`, 39.94394642163347], 
                   PlusMinus[0.9166008143758759, 0.10632578977736525`], 
                   PlusMinus[211.93853062421596`, 139.54030681532288`], 
                   PlusMinus[16.05044367216576, 9.996117848865035]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[9.901374923850192, 6.659325160373619], 
                   PlusMinus[6.6898519636359755`, 4.483571133948881], 
                   PlusMinus[6.719287865019994, 4.474483106212146], 
                   PlusMinus[0.43010727132288634`, 0.1304500430004497], 
                   PlusMinus[21.47250798173573, 7.5884869960341685`], 
                   PlusMinus[5.475090287724077, 1.9226064096333066`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000048469387755102034`, "ModelMemory" -> 
                16696., "StandardDeviation" -> 
                PlusMinus[0.4735272411659872, 2.895176511269519], 
                "TrainingMemory" -> 112926.85714285713`, "TrainingTime" -> 
                0.010124049999999999`], "Index" -> 4], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.0001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.7895958423206758, 4.1385186147440667`*^9], 
                 "StandardDeviation" -> 
                 PlusMinus[0.47210071376983304`, 15336.053924028289`], 
                 "EvaluationTime" -> 0.000013589285714285714`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 0.007398, 
                 "TrainingMemory" -> 102420., "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 
                 0.0001408007614622669, "MeanCrossEntropyHistory" -> {
                   PlusMinus[7.168170959515373*^9, 4.980504918840827*^9], 
                   PlusMinus[1.433624901830184*^10, 6.787240141683785*^9], 
                   PlusMinus[0.7895958422920996, 0.2182029048749538]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[21802.415268889697`, 8169.435805099243], 
                   PlusMinus[52856.865325650106`, 12902.363571938338`], 
                   PlusMinus[0.4720989797933964, 0.051882050186724475`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[4.797511684340397, 5.943660022814528*^9], 
                 "StandardDeviation" -> 
                 PlusMinus[1.196685228061838, 35536.90525726954], 
                 "EvaluationTime" -> 0.00005616666666666666, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.008323833333333332, "TrainingMemory" -> 
                 112885.33333333333`, "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 5, "ModelUtility" -> 
                 0.00006076209388363156, "MeanCrossEntropyHistory" -> {
                   PlusMinus[
                   2.2745899872113274`*^10, 2.2745899867894444`*^10], 
                   PlusMinus[5.503633492556154*^9, 5.503633490432209*^9], 
                   PlusMinus[5.523503415382562*^9, 5.523503412229386*^9], 
                   PlusMinus[4.797511679416324, 3.202831416715779], 
                   PlusMinus[
                   3.1178731485166466`*^10, 2.0622792425271473`*^10]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[97478.44073639158, 68926.99992677323], 
                   PlusMinus[66269.71056617223, 46859.175002234995`], 
                   PlusMinus[63867.399020214376`, 45160.35173082216], 
                   PlusMinus[1.19666707999515, 0.39042387859837013`], 
                   PlusMinus[215952.1864748814, 76350.6277328836]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00005616666666666666, "ModelMemory" -> 
                16696., "StandardDeviation" -> 
                PlusMinus[1.196685228061838, 35536.90525726954], 
                "TrainingMemory" -> 112885.33333333333`, "TrainingTime" -> 
                0.010311341666666666`], "Index" -> 5], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 100000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.447645580607525, 0.15592672360868987`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6731321362183562, 0.06081310842474542], 
                 "EvaluationTime" -> 0.00001325, "TestSize" -> 84, 
                 "TrainingSize" -> 7, "TrainingTime" -> 0.007619000000000001, 
                 "TrainingMemory" -> 102452., "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.6302865757706457,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.772929073199563, 0.07267404473575827], 
                   PlusMinus[1.3300125900743116`, 0.06378098731950049], 
                   PlusMinus[1.310006781738205, 0.06490519698353359]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.617062671328357, 0.08186281213646938], 
                   PlusMinus[0.7100229178897883, 0.09508275460558195], 
                   PlusMinus[0.7124870185288551, 0.0958218674373699]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[2.0383556700163417`, 0.12842692533534358`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6719202525212254, 0.07668203535164647], 
                 "EvaluationTime" -> 0.00004951020408163265, "TestSize" -> 42,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.007992714285714285, "TrainingMemory" -> 
                 112881.14285714286`, "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 6, "ModelUtility" -> 0.6284872829711177,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[2.0059886281501633`, 0.30639166309537413`], 
                   PlusMinus[2.080856425571024, 0.32015406718531336`], 
                   PlusMinus[2.012239935076388, 0.3076783832221216], 
                   PlusMinus[2.0900470609440664`, 0.32187133561554543`], 
                   PlusMinus[2.0293647623105895`, 0.31075426910653253`], 
                   PlusMinus[2.019279230921725, 0.3089707112551365]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.809384802618677, 0.17841726472590577`], 
                   PlusMinus[0.608239040896427, 0.11771696363378192`], 
                   PlusMinus[0.7955893513503851, 0.21649842912186254`], 
                   PlusMinus[0.57606766358371, 0.11958105194645552`], 
                   PlusMinus[0.7555889362127749, 0.20005076421273418`], 
                   PlusMinus[0.7798835712814473, 0.2189937531132945]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00004951020408163265, "ModelMemory" -> 
                16696., "StandardDeviation" -> 
                PlusMinus[0.6719202525212254, 0.07668203535164647], 
                "TrainingMemory" -> 112881.14285714286`, "TrainingTime" -> 
                0.01041645], "Index" -> 6], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 10000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.4456226100652776`, 0.15554405259106238`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6719970360087489, 0.060883386794258254`], 
                 "EvaluationTime" -> 0.000013267857142857143`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 0.009234, 
                 "TrainingMemory" -> 102452., "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.6313193241796788,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.7696767932162418`, 0.07251699175587167], 
                   PlusMinus[1.3279720142920388`, 0.06377567832373493], 
                   PlusMinus[1.3078820409146545`, 0.06490520353386686]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6154821019553233, 0.08164924532899104], 
                   PlusMinus[0.7092953851015579, 0.09499682087512662], 
                   PlusMinus[0.7117703852889727, 0.09568365808051683]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[2.031053556549214, 0.12785253016731177`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6684506997431798, 0.07642282854750115], 
                 "EvaluationTime" -> 0.000053816326530612236`, "TestSize" -> 
                 42, "TrainingSize" -> 28, "TrainingTime" -> 
                 0.011325000000000002`, "TrainingMemory" -> 
                 112899.42857142857`, "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 6, "ModelUtility" -> 0.6317241345516694,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.998927554070584, 0.3050715169483591], 
                   PlusMinus[2.0727864101384674`, 0.3186400175354243], 
                   PlusMinus[2.004945668539878, 0.3063167168588846], 
                   PlusMinus[2.082348817322368, 0.32042664300999973`], 
                   PlusMinus[2.0218422156299383`, 0.3093469996483254], 
                   PlusMinus[2.012964273860176, 0.30779453699926707`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8056236731125374, 0.17712509936336426`], 
                   PlusMinus[0.6046131665977417, 0.1172559175667409], 
                   PlusMinus[0.7918480671645749, 0.2149805858972522], 
                   PlusMinus[0.5723198103325289, 0.11913054560208364`], 
                   PlusMinus[0.7518049410819992, 0.19847707458024788`], 
                   PlusMinus[0.7764171160831, 0.21864613596562785`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000053816326530612236`, "ModelMemory" -> 
                16696., "StandardDeviation" -> 
                PlusMinus[0.6684506997431798, 0.07642282854750115], 
                "TrainingMemory" -> 112899.42857142857`, "TrainingTime" -> 
                0.01319775], "Index" -> 7], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.4261078571940409`, 0.15178188463057038`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6612062712177917, 0.06156274267389573], 
                 "EvaluationTime" -> 0.000013687499999999999`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 0.0073115, 
                 "TrainingMemory" -> 102452., "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.6413066324147492,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.7380351987505225`, 0.07099115606528536], 
                   PlusMinus[1.3082445781147967`, 0.0637571345589946], 
                   PlusMinus[1.2873558475963223`, 0.06494275736939308]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6006706220283268, 0.07962363089153082], 
                   PlusMinus[0.7023494500692159, 0.09414830123817701], 
                   PlusMinus[0.704888991527966, 0.09435422746068282]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.9644763018400337`, 0.12263651626389807`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6402043800466681, 0.07423508981233477], 
                 "EvaluationTime" -> 0.00005267346938775509, "TestSize" -> 42,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.007793714285714286, "TrainingMemory" -> 
                 112945.14285714286`, "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 6, "ModelUtility" -> 0.6593865315560525,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.9346095404400712`, 0.2930540358165943], 
                   PlusMinus[1.9998679682128357`, 0.3049650399046099], 
                   PlusMinus[1.938428084577708, 0.29390609835740605`], 
                   PlusMinus[2.0117953443791485`, 0.3071906491964678], 
                   PlusMinus[1.9532141228666506`, 0.29651569697076485`], 
                   PlusMinus[1.9552489713078485`, 0.297058115198698]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.7725486719156293, 0.16606308667993844`], 
                   PlusMinus[0.5745438519849135, 0.11444426008485074`], 
                   PlusMinus[0.7594318006974565, 0.20100484551125947`], 
                   PlusMinus[0.5413867729738258, 0.11607929083980721`], 
                   PlusMinus[0.7188292561858335, 0.18484422181807306`], 
                   PlusMinus[0.7467850771820747, 0.21546621367292618`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00005267346938775509, "ModelMemory" -> 
                16696., "StandardDeviation" -> 
                PlusMinus[0.6402043800466681, 0.07423508981233477], 
                "TrainingMemory" -> 112945.14285714286`, "TrainingTime" -> 
                0.010039300000000001`], "Index" -> 8], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.1], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.7925696999615892, 4072.4121649496606`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.4744637851224155, 15.0927163360201], 
                 "EvaluationTime" -> 0.000013303571428571429`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 
                 0.007789000000000001, "TrainingMemory" -> 102436., 
                 "ModelMemory" -> 16696., "ExperimentCount" -> 3, 
                 "ModelUtility" -> 0.1236562308231329, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[7089.106024849484, 4923.791456115466], 
                   PlusMinus[14107.985119730745`, 6679.270601924599], 
                   PlusMinus[0.7925403605845783, 0.21956454568135436`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[21.71192780490129, 8.130232916431861], 
                   PlusMinus[52.46573968172257, 12.806701740877218`], 
                   PlusMinus[0.47273492189092475`, 0.052044191978268095`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.8251571204550383, 4256.8727573324795`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.46377407560548695`, 35.43738149260344], 
                 "EvaluationTime" -> 0.00005330952380952381, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.007636666666666667, "TrainingMemory" -> 112896., 
                 "ModelMemory" -> 16696., "ExperimentCount" -> 5, 
                 "ModelUtility" -> 0.05720007252433838, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[11044.878268753593`, 11043.624886215644`], 
                   PlusMinus[3319.9728081990397`, 3319.073062985326], 
                   PlusMinus[4433.772759924874, 4432.778623572641], 
                   PlusMinus[0.8251511545055199, 0.09149407139010154], 
                   PlusMinus[24003.496517919168`, 15876.184390684992`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[97.61269811445513, 68.60364620881774], 
                   PlusMinus[66.41463175283407, 46.69369390008685], 
                   PlusMinus[64.2507264063764, 45.08779979752075], 
                   PlusMinus[0.4622009247189938, 0.11485270786879642`], 
                   PlusMinus[215.80769438869703`, 76.29909156932231]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00005330952380952381, "ModelMemory" -> 
                16696., "StandardDeviation" -> 
                PlusMinus[0.46377407560548695`, 35.43738149260344], 
                "TrainingMemory" -> 112896., "TrainingTime" -> 
                0.010461833333333333`], "Index" -> 9], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 10.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.7610711331707295, 0.12068757093897303`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.528137727366044, 0.06956305572706055], 
                 "EvaluationTime" -> 0.000013741071428571428`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 
                 0.0077220000000000006`, "TrainingMemory" -> 102468., 
                 "ModelMemory" -> 16696., "ExperimentCount" -> 3, 
                 "ModelUtility" -> 0.7968486604518735, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.7439172048726392, 0.054837921147717746`], 
                   PlusMinus[1.0840576314950712`, 0.24160645785793713`], 
                   PlusMinus[0.7637344916644822, 0.12472551391990931`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.49423123596602897`, 0.04721251024739097], 
                   PlusMinus[0.6898223105417973, 0.10802698621944112`], 
                   PlusMinus[0.5335037852660983, 0.06289617583172387]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.2995475490813988`, 0.2297151206904432], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6377735366317779, 0.24382760704367742`], 
                 "EvaluationTime" -> 0.00005275510204081632, "TestSize" -> 42,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.007548571428571428, "TrainingMemory" -> 
                 112917.71428571428`, "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 6, "ModelUtility" -> 0.6291442041502004,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.6074285401637274`, 0.5423704204408977], 
                   PlusMinus[1.388926547525615, 0.25943145075381635`], 
                   PlusMinus[1.4548460265627114`, 0.3888665070140061], 
                   PlusMinus[1.1539724205843487`, 0.14815709430005208`], 
                   PlusMinus[2.57377403272554, 0.9746215061037393], 
                   PlusMinus[1.3938838055354317`, 0.22347654893295266`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.1824873546861432`, 0.4964119672205926], 
                   PlusMinus[0.8747690004243539, 0.3558845178924109], 
                   PlusMinus[1.030642805420038, 0.4453131398057412], 
                   PlusMinus[0.46470249818363624`, 0.11660570842543092`], 
                   PlusMinus[2.0927755722629717`, 0.6994101592707151], 
                   PlusMinus[0.8555157390328542, 0.24286786345890202`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00005275510204081632, "ModelMemory" -> 
                16696., "StandardDeviation" -> 
                PlusMinus[0.6377735366317779, 0.24382760704367742`], 
                "TrainingMemory" -> 112917.71428571428`, "TrainingTime" -> 
                0.010364], "Index" -> 10], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.01], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.7899127589936384, 413225.51331843436`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.4723351757139457, 153.1167329205843], 
                 "EvaluationTime" -> 0.000013785714285714285`, "TestSize" -> 
                 84, "TrainingSize" -> 7, "TrainingTime" -> 0.00931325, 
                 "TrainingMemory" -> 102452., "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 
                 0.013890420202300332`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[716170.9857993075, 497599.7820850589], 
                   PlusMinus[1.4314558667577042`*^6, 677697.2239281163], 
                   PlusMinus[0.7899124724988167, 0.21834906415939298`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[217.92892957497946`, 81.65814911276966], 
                   PlusMinus[528.171900909402, 128.92677025243842`], 
                   PlusMinus[0.4721618310706262, 0.05189817596360957]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.3047670579690522`, 521056.78561209294`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.7902507055574388, 355.1456364233273], 
                 "EvaluationTime" -> 0.000053333333333333326`, "TestSize" -> 
                 35, "TrainingSize" -> 28, "TrainingTime" -> 
                 0.0075334999999999985`, "TrainingMemory" -> 112864., 
                 "ModelMemory" -> 16696., "ExperimentCount" -> 5, 
                 "ModelUtility" -> 0.006014143830345779, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.7153974392454384`*^6, 1.7153955140021625`*^6], 
                   
                   PlusMinus[380213.79611999734`, 380212.827542898], 
                   PlusMinus[505581.5234656563, 505580.1740583814], 
                   PlusMinus[1.3047652759203427`, 0.5449630418846091], 
                   PlusMinus[2.8236578205134636`*^6, 1.867673404972712*^6]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[974.7280693687471, 688.7431831006711], 
                   PlusMinus[663.3391429810471, 468.7293530049173], 
                   PlusMinus[639.3350059185221, 451.64127028031044`], 
                   PlusMinus[0.7897717932221721, 0.2005846241380973], 
                   PlusMinus[2159.0620117913927`, 763.3436056682184]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000053333333333333326`, "ModelMemory" -> 
                16696., "StandardDeviation" -> 
                PlusMinus[0.7902507055574388, 355.1456364233273], 
                "TrainingMemory" -> 112864., "TrainingTime" -> 0.011949975], 
              "Index" -> 11], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.00001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[7.168227457851912*^11, 7.04355312187538*^11], 
                 "StandardDeviation" -> 
                 PlusMinus[218025.01158379638`, 115533.72433641432`], 
                 "EvaluationTime" -> 0.0000135, "TestSize" -> 28, 
                 "TrainingSize" -> 7, "TrainingTime" -> 0.007595, 
                 "TrainingMemory" -> 102424, "ModelMemory" -> 16696, 
                 "ExperimentCount" -> 1, "ModelUtility" -> 
                 1.7912700201812498`*^-6, "MeanCrossEntropyHistory" -> {
                   PlusMinus[7.168227457851912*^11, 4.9805441761257574`*^11]},
                  "StandardDeviationHistory" -> {
                   PlusMinus[218025.01158379638`, 81694.67993401582]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[10.720957134532728`, 6.705123286322184*^11], 
                 "StandardDeviation" -> 
                 PlusMinus[1.1937143054798394`, 355374.2256758333], 
                 "EvaluationTime" -> 0.00005466666666666666, "TestSize" -> 35,
                  "TrainingSize" -> 28, "TrainingTime" -> 
                 0.008448333333333332, "TrainingMemory" -> 
                 112938.66666666666`, "ModelMemory" -> 16696., 
                 "ExperimentCount" -> 5, "ModelUtility" -> 
                 6.077041932204821*^-6, "MeanCrossEntropyHistory" -> {
                   PlusMinus[2.421436403048282*^12, 2.4214364030430044`*^12], 
                   
                   PlusMinus[6.612814060594734*^11, 6.612814060569215*^11], 
                   PlusMinus[6.102308407394685*^11, 6.10230840737205*^11], 
                   PlusMinus[10.720957134273984`, 7.849888900126463], 
                   PlusMinus[3.5990954496736807`*^12, 2.380577876154183*^12]},
                  "StandardDeviationHistory" -> {
                   PlusMinus[974796.2758657256, 689284.3316614714], 
                   PlusMinus[662673.2128993534, 468580.1091379145], 
                   PlusMinus[638661.6299035369, 451601.3950091812], 
                   PlusMinus[1.1937123088536654`, 0.40951358591442605`], 
                   PlusMinus[2.1595358041649763`*^6, 763511.2056698818]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00005466666666666666, "ModelMemory" -> 
                16696., "StandardDeviation" -> 
                PlusMinus[1.1937143054798394`, 355374.2256758333], 
                "TrainingMemory" -> 112938.66666666666`, "TrainingTime" -> 
                0.010551916666666666`], "Index" -> 12]], 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration["LinearRegression"]], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                 "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory",
                  "ModelMemory", "ExperimentCount", "ModelUtility", 
                 "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                 
                 TypeSystem`Vector[
                 TypeSystem`AnyType, TypeSystem`AnyLength]}], 2], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "ModelMemory", "StandardDeviation", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 12], 
           Association["ID" -> 46806696120005]], "MaxTrainingSize" -> 35, 
         "LastReportingTime" -> 3.740051396563289`16.325452559566436*^9, 
         "PreprocessorEvaluationTime" -> 4.45947265625`3.*^-6, 
         "PreprocessorMemory" -> 43368, "RoundPartitioning" -> Dataset[{
            Association[
            "TrainingSizes" -> 7, "TimeBudgets" -> 0.8000000000000002, 
             "ElapsedTimes" -> 0.8971439999999999, "ExperimentCounts" -> 34], 
            
            Association[
            "TrainingSizes" -> 28, "TimeBudgets" -> 1., "ElapsedTimes" -> 
             0.9939470000000001, "ExperimentCounts" -> 66]}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 2], 
           Association[
           "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
              Dataset`DatasetHandle[46815286054597]], "ID" -> 
            46819581021893]]], "Log" -> 
       Association["Example" -> MachineLearning`MLDataset[
           Association[
           "f1" -> Association[
             "Type" -> "NumericalVector", "Weight" -> 1, 
              "Values" -> {{1.110790375957073, 0.9740401694220522, 
               0.9795401050153902, 0.9797091646939465, 0.9820971867007673, 
               0.9300655635341867, 1.0276679841897234`, 1.0084865629420083`, 
               1.1327902375294663`, 0.9915254237288136, 0.970946579194002, 
               5.920930232558139, 0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 
               0., 0., 1., 0., 0.}}, "ID" -> 6317603181246307725]], 
           Association[
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> 
            False]], "TrainingTime" -> 2.669028, "MaxTrainingMemory" -> 
         714424, "DataMemory" -> 28600, "FunctionMemory" -> 239520, 
         "LanguageVersion" -> {11.3, 0}, "Date" -> 
         DateObject[{2018, 7, 8, 15, 9, 56.88481`8.507571285730872}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
         "SystemWordLength" -> 64, "Evaluations" -> {}]]], "TestSet" -> 
    Association["Input" -> CompressedData["
1:eJy1lWtQ1FUYxhcaRRgZkVUT5CK3UD60lDiGpQ9COUOEK5RDKCG7A1IaQpCs
YAsuE5AkVyFUEJnhIpDLtGNSRFxnMIpRDEVEHXSpVfbyv+wNlBbtjzPA1M5S
Ij4z58N557zvnN+8zzmvCz8+NMacxWJZMcuBWZcr06RyHolHt+UHlScI3LAQ
/1q2iMCT7pKm/GIVJI/jRlvC7mPn4hZdY8gNRDpfLPS2uYeWD16P5S2nsUHk
tSrtAoUC8RL7HQoS1Yb1SVHvknD9+eDKLqW7H+upaLD+oX/vn1Wm8o3jQrbl
oeIhNTYnr5B+yyfw3vuPOGGOBHx8UurSxCoENW+wqBLdx0tJQQlmEzfB7w3o
LLkzjEP10Ve6XGkMdOzOqLDUQnszp1JaTWKyssp8bwSB1LFNpbHpnBfEZ6qO
cd2mwwNu47kaBE9c58lIEpFBGRaKSRKeHxlCOt0oxChWHSk/R2Pr7/7FBxRD
2J30CoOonuHzyFX4sp012NLk+vEb9VqE+V5od+tUIzFK7m7xjdM8+Z6Vf/q8
cV6fNPLk5W41vkD6paQ2AuKNw/xj0QT+yLdySiEIZOvjA+62apDPulZQ7Umj
y69D8TB0DE+eivHl+bFzowxfnC7bP9GMwt6IqQ5SKFJsWVE/7DJPvuflnFWc
PksZoKFm+ARZx0709qjQGHqqfnK7Cj6MO5MdZVgvHDPwbIcxoK45PnRGB43U
mx3+Ko0If9vN1yQURIO3R5dl6hBTusaztEKNi+3Nb/1V5vycfPPnmo5ntuWe
1zP+dHwzh94lIVFv1VZsfYrE2cLaT1vfZvZF97i/nZHDa8dPAr5NJxaLfdkS
mRqFMvM6m0uUSX/2e5vZWbNX/wffi3qHs/Hypdw+93IVvN9piM7rI5E42CP6
LorE6XWl+8peo2B/tpcTEqFHVECsIU8kh3ZngscPD8Zn3t+doeOCAubfVSzL
/NM8kkLa1RARp5HESN6PbuRXL3fMzTffe/9/eUU2EF/2KNA0mM5xyqbgHyBw
udVAgudDBfZzSQgcd9kaAuXYtqbZMPJwBDS3e9uBKzpsddjn2ruIRsJ+Luuo
hxJXE0LHZRI9kttr92QlqPGhy9SAMOXPheYyfZ4rPLmntk6DzNUb2/ICKYxH
RQSnCCk8XpljJ2R4p/Ot19ZM+H1G4JPDwuvbu+iZ/n2eWXH0FkeLqe7FV832
b+DIutDW7LV+c99joeegcb0WmYcDm/Enob/79S9SCvuDHjT151AoGVieOlZD
wc76e2VdEQ1mOIRbhmuwqVUeHJ+qRbz9ZBjla9qfSycy2io5LL+5ORZ6Thjr
b/i+I2E=
       "], 
      "Output" -> {1.9, 1.68, 1.14, 1.36, 1., 0.76, 0.67, 0.41, 0.38, -0.06}],
     "Predictions" -> {1.8323052676219211`, 0.9900839640631255, 
     1.358511989071165, 1.4289534277994018`, 0.9886397484709035, 
     1.1453677382297058`, 0.6314171994925, 0.8702656914462858, 
     0.047388809843485924`, 0.26194804419392737`}, "Distributions" -> {
      NormalDistribution[1.8323052676219211`, 0.5652946626097692], 
      NormalDistribution[0.9900839640631255, 0.5652946626097692], 
      NormalDistribution[1.358511989071165, 0.5652946626097692], 
      NormalDistribution[1.4289534277994018`, 0.5652946626097692], 
      NormalDistribution[0.9886397484709035, 0.5652946626097692], 
      NormalDistribution[1.1453677382297058`, 0.5652946626097692], 
      NormalDistribution[0.6314171994925, 0.5652946626097692], 
      NormalDistribution[0.8702656914462858, 0.5652946626097692], 
      NormalDistribution[0.047388809843485924`, 0.5652946626097692], 
      NormalDistribution[0.26194804419392737`, 0.5652946626097692]}, 
    "Modes" -> {1.8323052676219211`, 0.9900839640631255, 1.358511989071165, 
     1.4289534277994018`, 0.9886397484709035, 1.1453677382297058`, 
     0.6314171994925, 0.8702656914462858, 0.047388809843485924`, 
     0.26194804419392737`}, "Weights" -> 
    SparseArray[Automatic, {10}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.0025813, "SingleEvaluationTime" -> 
    0.0019387708333333331`2., "Version" -> {11.3, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739718054842402*^9, 3.740058151301886*^9, 
  3.740064038249103*^9, 3.740065800351207*^9},
 CellLabel->
  "Out[548]=",ExpressionUUID->"d91769b5-2d7f-4207-939e-e25791795fa2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"\"\<ResidualPlot\>\"", ",", "\"\<StandardDeviation\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{3.740064087496936*^9},
 CellLabel->
  "In[549]:=",ExpressionUUID->"0850e2f9-a922-4bca-b317-790dffdcf448"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQ7TmDO0Q+8K/9hYdrVAtDNtoft9s34ci69/a/t2Wd
PiX8zH5Sr4tg+Z6v9iukcrKNf5zez137z+XfnW/2DSURve+WbdzfszLt8vtF
7+0Z5oaqcbu0238ukJTPDf5krxGsUXR35Y39SRX7rk80eWL/IWDPF/mDi+1P
fCvKN7/52j74MZ/1v5K7+y8c/DQjwnmFvUQCQ1GD51X7Z5JHdh08fMF+716T
H6dnXdkPcx8DFMDcB+PD3Afjw9wH48PdBwUw98H4MPfB+DD3wfgw98H4MPfB
+IM9/ABji9rh
      "], {{{}, {}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
         LineBox[{13, 3}], LineBox[{14, 4}], LineBox[{16, 6}], 
         LineBox[{18, 8}], LineBox[{20, 10}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
         LineBox[{11, 1}], LineBox[{12, 2}], LineBox[{15, 5}], 
         LineBox[{17, 7}], LineBox[{19, 9}]}}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], 
         PointBox[{21, 22, 23, 24, 25, 26, 27, 28, 29, 
          30}]}, {}}}], {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{None, None},
    AxesOrigin->{0.019499490190697875`, 0.},
    DisplayFunction->Identity,
    Frame->{{True, False}, {True, False}},
    FrameLabel->{{
       FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
       FormBox["\"predicted value\"", TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.047388809843485924`, 
     1.8323052676219211`}, {-0.7244118377337182, 0.7244118377337182}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", "0.33306456028613357`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.739718071796795*^9, 3.740064042394636*^9, 
  3.740065804772036*^9},
 CellLabel->
  "Out[549]=",ExpressionUUID->"c7594541-ad3c-4863-8db6-bae06b8c3f12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input",
 CellLabel->
  "In[550]:=",ExpressionUUID->"8dc251d4-4728-43fb-8ba9-4ad3fe26e89a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           GraphicsBox[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             AbsoluteThickness[1.], 
             RGBColor[0.34398, 0.49112, 0.89936], 
             CircleBox[{0, 0}, 
              Offset[{1.8, 1.8}, {0., 0.}]]}], {0., 0.}], {{{
          1.8323052676219211`, 1.9}}, {{0.9900839640631255, 1.68}}, {{
          1.358511989071165, 1.14}}, {{1.4289534277994018`, 1.36}}, {{
          0.9886397484709035, 1.}}, {{1.1453677382297058`, 0.76}}, {{
          0.6314171994925, 0.67}}, {{0.8702656914462858, 0.41}}, {{
          0.047388809843485924`, 0.38}}, {{
          0.26194804419392737`, -0.06}}}]}, {}}, {
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.8323052676219211`, 1.9}]}}, 
          RowBox[{"{", 
            RowBox[{"1.8323052676219211`", ",", "1.9`"}], "}"}]], 
         Annotation[#, {1.8323052676219211`, 1.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9900839640631255, 1.68}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9900839640631255`", ",", "1.68`"}], "}"}]], 
         Annotation[#, {0.9900839640631255, 1.68}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.358511989071165, 1.14}]}}, 
          RowBox[{"{", 
            RowBox[{"1.358511989071165`", ",", "1.14`"}], "}"}]], 
         Annotation[#, {1.358511989071165, 1.14}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.4289534277994018`, 1.36}]}}, 
          RowBox[{"{", 
            RowBox[{"1.4289534277994018`", ",", "1.36`"}], "}"}]], 
         Annotation[#, {1.4289534277994018`, 1.36}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9886397484709035, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9886397484709035`", ",", "1.`"}], "}"}]], 
         Annotation[#, {0.9886397484709035, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1453677382297058`, 0.76}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1453677382297058`", ",", "0.76`"}], "}"}]], 
         Annotation[#, {1.1453677382297058`, 0.76}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.6314171994925, 0.67}]}}, 
          RowBox[{"{", 
            RowBox[{"0.6314171994925`", ",", "0.67`"}], "}"}]], 
         Annotation[#, {0.6314171994925, 0.67}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.8702656914462858, 0.41}]}}, 
          RowBox[{"{", 
            RowBox[{"0.8702656914462858`", ",", "0.41`"}], "}"}]], 
         Annotation[#, {0.8702656914462858, 0.41}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.047388809843485924`, 0.38}]}}, 
          RowBox[{"{", 
            RowBox[{"0.047388809843485924`", ",", "0.38`"}], "}"}]], 
         Annotation[#, {0.047388809843485924`, 0.38}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.26194804419392737`, -0.06}]}}, 
          RowBox[{"{", 
            RowBox[{"0.26194804419392737`", ",", 
              RowBox[{"-", "0.06`"}]}], "}"}]], 
         Annotation[#, {0.26194804419392737`, -0.06}, 
          "Tooltip"]& ]}}, {}, {}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           GrayLevel[0.2], 
           Opacity[0.5], 
           AbsoluteThickness[1.], 
           AbsoluteDashing[{2, 4}]], 
          LineBox[CompressedData["
1:eJxFxVlIEwAYAOBphoUpajLQTFJ7WKiYJR4lqA9rhRdKcw5sc1KpFV44L+a8
WhbGhEmGznuyzNLcPPLIyhmpIPNIUhTnNl1TyyOP5bxWPfj/Dx+fY2xSxD1j
AoEQ8s//y6xbJDTfL5+Ot6xr8qx1xovdX71fMsfzgmv7stQDcMITwbCwGPfb
S1fNz8lglcrfKr6gH6bHilQbZX0w0YvkxRqXwDnscDExVAiHe81625eX+B8/
RBLKrlPewamJXfZ3n/fAu9Obn3PcB+CU5CLy5cMh2JnR2HMqTg5TAqjqRacJ
uJxTyYxSTsKDbWqyoWQKjuCVp9tlz8D6/LKam1fmYO6ZgmdsayWcRO3KUD5W
wWttVurbCjUsZIpSTlAX4akLUTm9Ug0c6E5uaXbTwra9ktLuuiU4NzpwR36w
DNsEneY4sH/C3mHb3IzJX/DQGMNrxXUNLqoxOvuyfh1e6V/oEOduwI0z6u1q
v9/weamjxUUdTrdJ1biJNmHXKsboJGMLHmyNziBYbMO2hRX6rm7cmJPGt0jb
gaUGpmrJUQfrX2tvxChw0/m8B9H8P/DIBD1ec20XJq3KM810eLCASuls0MOm
jEzSEWsPzlqaWZg4tw9LD0PvuA7jBb7MZSfeAWxLyL9a7XkIx/PUNLESD/VQ
8oOER/B+3Hoh+5YBjqlw8cgNxr+OxCmehuECD6VPJRUn7Y+tylh4JF9Ks8zG
W9vZLm+acKJWMt3ejHNs13gfW3EK975yvBNXUGgvdmW42ayPgTyLJ5uz34Yp
8O/+Ejpdhdc3XGp/pMV9Eu0SSrfw6tpIYpUON/kmGBDr8VFvM4ceA27XIdKw
jAgBx4fIAz/8MMbztPOChyZ4G4GbsHES/wtzXI/l
           "]]}, 
         Annotation[#, "Charting`Private`Tag$519368#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{-0.158, 2.0029}, {-0.158, 2.0029}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-0.158, 2.0029}, {-0.158, 2.0029}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}], ",", "Automatic"}], 
                    "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect predictions\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.13333333333333336`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.2`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.2], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.740064183044853*^9, 3.740065809590361*^9},
 CellLabel->
  "Out[550]=",ExpressionUUID->"cace6063-f8af-4a07-86b5-25ea265fb71c"]
}, Open  ]],

Cell["\<\
We looked for a pattern in least certain examples. They appear to correspond \
to ketals.\
\>", "Text",
 CellChangeTimes->{{3.740064778788622*^9, 
  3.740064795788426*^9}},ExpressionUUID->"ecae04fe-dc2a-4010-85fe-\
de6df04c4b93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<LeastCertainExamples\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.740064626686257*^9, 3.740064642601893*^9}},
 CellLabel->
  "In[551]:=",ExpressionUUID->"c9eb6774-ec78-46aa-b845-0f0d08727bd1"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.9494523433868608`", ",", "0.9243065992621943`", ",", 
       "0.9069346369726599`", ",", "0.8931349340547853`", ",", 
       "0.6982097186700768`", ",", "0.3487355604121136`", ",", 
       "0.5019762845849802`", ",", "1.0042432814710043`", ",", 
       "0.9906607087068892`", ",", "0.9661016949152543`", ",", 
       "0.9465791940018744`", ",", "10.460465116279071`", ",", "1.`", ",", 
       "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",",
        "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", 
       ",", "1.`", ",", "0.`", ",", "0.`"}], "}"}], "\[Rule]", "1.9`"}], ",", 
    
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.115620095414868`", ",", "0.9182948490230907`", ",", 
       "0.9098316132536666`", ",", "0.8961785593506932`", ",", 
       "0.7033248081841433`", ",", "0.3902591320636903`", ",", 
       "0.48221343873517786`", ",", "1.0084865629420083`", ",", 
       "1.1898484317753646`", ",", "0.9576271186440678`", ",", 
       "0.9175257731958762`", ",", "15.748837209302327`", ",", "1.`", ",", 
       "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",",
        "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", 
       ",", "1.`", ",", "0.`", ",", "0.`"}], "}"}], "\[Rule]", "1.68`"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.1596595191727324`", ",", "0.966662112310425`", ",", 
       "0.9684953829440521`", ",", "0.9731146432194792`", ",", 
       "1.040920716112532`", ",", "0.404932875429285`", ",", 
       "1.0790513833992095`", ",", "1.0084865629420083`", ",", 
       "1.13258669494173`", ",", "1.228813559322034`", ",", 
       "1.1096532333645734`", ",", "7.6465116279069765`", ",", "1.`", ",", 
       "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",",
        "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
       ",", "1.`", ",", "0.`", ",", "0.`"}], "}"}], "\[Rule]", "1.14`"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.1107917739847044`", ",", "0.9294985653777839`", ",", 
       "0.9185225420966866`", ",", "0.9352384173148461`", ",", 
       "1.1713554987212278`", ",", "1.0096784264751795`", ",", 
       "1.3952569169960474`", ",", "1.`", ",", "1.1327902375294663`", ",", 
       "0.9689265536723163`", ",", "0.9690721649484536`", ",", 
       "8.934883720930234`", ",", "1.`", ",", "0.`", ",", "1.`", ",", "0.`", 
       ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`",
        ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", 
       "0.`"}], "}"}], "\[Rule]", "1.36`"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.9983234024181634`", ",", "0.9294985653777839`", ",", 
       "0.8995111352525801`", ",", "0.883665877578627`", ",", 
       "0.659846547314578`", ",", "0.4698719950046831`", ",", 
       "1.2885375494071145`", ",", "1.0113154172560113`", ",", 
       "0.9904571661191528`", ",", "1.2824858757062148`", ",", 
       "1.1012183692596065`", ",", "7.90232558139535`", ",", "1.`", ",", 
       "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",",
        "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
       ",", "0.`", ",", "0.`", ",", "1.`"}], "}"}], "\[Rule]", "1.`"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.1596581211451007`", ",", "0.9591474245115453`", ",", 
       "0.9561832337497737`", ",", "0.9458911058505243`", ",", 
       "0.8005115089514067`", ",", "0.13331251951295658`", ",", 
       "1.118577075098814`", ",", "0.9929278642149929`", ",", 
       "1.13258669494173`", ",", "1.228813559322034`", ",", 
       "1.1096532333645734`", ",", "6.018604651162791`", ",", "1.`", ",", 
       "0.`", ",", "1.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",",
        "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
       ",", "0.`", ",", "0.`", ",", "1.`"}], "}"}], "\[Rule]", "0.76`"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.8940605210304002`", ",", "0.962836453067359`", ",", 
       "0.9493029150823828`", ",", "0.9748055461616503`", ",", 
       "1.3350383631713556`", ",", "0.797065251326881`", ",", 
       "1.4940711462450593`", ",", "1.0084865629420083`", ",", 
       "0.92426322316788`", ",", "0.9802259887005651`", ",", 
       "0.9587628865979381`", ",", 
       RowBox[{"-", "5.883720930232558`"}], ",", "1.`", ",", "0.`", ",", 
       "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",",
        "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
       ",", "0.`", ",", "0.`"}], "}"}], "\[Rule]", "0.67`"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.8369774476913723`", ",", "0.9852438857767456`", ",", 
       "0.9583559659605287`", ",", "0.9472438282042611`", ",", 
       "0.7902813299232737`", ",", "0.5928816734311583`", ",", 
       "1.300395256916996`", ",", "1.0014144271570014`", ",", 
       "0.8483276372965758`", ",", "1.3559322033898304`", ",", 
       "1.0899718837863168`", ",", "7.939534883720931`", ",", "1.`", ",", 
       "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",",
        "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", 
       ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}], "\[Rule]", "0.41`"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1.1661742761569547`", ",", "0.9777291979778658`", ",", 
       "0.9840666304544631`", ",", "0.9852891444031113`", ",", "1.`", ",", 
       "0.9200749297533563`", ",", "1.0474308300395256`", ",", 
       "1.0084865629420083`", ",", "1.1991829895199233`", ",", 
       "0.9887005649717514`", ",", "0.9587628865979381`", ",", 
       "8.265116279069767`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "1.`", 
       ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`",
        ",", "0.`", ",", "1.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", 
       "0.`"}], "}"}], "\[Rule]", "0.38`"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.8940520810858098`", ",", "0.9963109714441863`", ",", 
       "0.9856961796125294`", ",", "0.9890091308758878`", ",", 
       "1.0358056265984656`", ",", "1.1467374336559475`", ",", 
       "1.217391304347826`", ",", "1.0141442715700142`", ",", 
       "0.92426322316788`", ",", "0.9802259887005651`", ",", 
       "0.9587628865979381`", ",", "2.0232558139534884`", ",", "1.`", ",", 
       "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",",
        "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
       ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}], "\[Rule]", 
     RowBox[{"-", "0.06`"}]}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.740064643066533*^9, {3.740065819714608*^9, 3.74006582683559*^9}},
 CellLabel->
  "Out[551]=",ExpressionUUID->"bbbc929b-7846-45ec-b816-284c217bb00a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["NeuralNetwork", "Section",
 CellChangeTimes->{{3.7397176223262377`*^9, 
  3.739717629954794*^9}},ExpressionUUID->"dd65a08d-358b-4360-8451-\
aa19d4e2ca0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", " ", "=", " ", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", "20", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "\"\<SoftSign\>\"", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "10", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "1", "]"}]}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "28"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739718110586678*^9, 3.7397182113335342`*^9}, {
  3.7397191796394243`*^9, 3.7397191853923798`*^9}, {3.739719246418309*^9, 
  3.739719436135602*^9}, {3.739719482794931*^9, 3.7397195176659822`*^9}, {
  3.739719626607998*^9, 3.7397196974488697`*^9}, {3.7400642851159153`*^9, 
  3.740064285286982*^9}, {3.740064392409301*^9, 3.7400643973789043`*^9}, {
  3.740064434620173*^9, 3.740064452019197*^9}, {3.740065867439324*^9, 
  3.740065867923521*^9}, {3.740066125918277*^9, 3.740066128490357*^9}, {
  3.740066209891983*^9, 3.740066211848208*^9}},
 CellLabel->
  "In[563]:=",ExpressionUUID->"fdf99ed2-510f-4479-b2db-235cbc5be045"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{20, 28}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {20}, "$OutputSize" -> 20, 
                    "$InputSize" -> 28, "$InputDimensions" -> {28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {"SoftSign", 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 20}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 20, "$InputDimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 10}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"SoftSign\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.739719734976653*^9, 3.740060621952793*^9, 3.740060677561245*^9, 
   3.7400642421461573`*^9, 3.7400642881446953`*^9, 3.740064399570386*^9, {
   3.7400644417291813`*^9, 3.740064453853364*^9}, 3.740065871231802*^9, 
   3.7400661362360563`*^9, 3.7400662179669247`*^9},
 CellLabel->
  "Out[563]=",ExpressionUUID->"87876136-3692-49ea-9c8f-3e844b94fabd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNetwork", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"network", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"trainingData", "\[Rule]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", "trainingResults", "}"}], "]"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ValidationSet", "\[Rule]", 
     RowBox[{"Thread", "[", 
      RowBox[{"testData", "\[Rule]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", "testResults", "}"}], "]"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7397181639609213`*^9, 3.739718166677147*^9}, {
  3.739718221873056*^9, 3.739718246883932*^9}, {3.739718361769885*^9, 
  3.739718444820704*^9}, {3.7397185183422337`*^9, 3.7397185218227777`*^9}},
 CellLabel->
  "In[564]:=",ExpressionUUID->"0b6ccd46-3569-4dca-a9eb-698b0c7aec60"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 28}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{20}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {20}, "$OutputSize" -> 20, 
                    "$InputSize" -> 28, "$InputDimensions" -> {28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {"SoftSign", 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 20}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 20, "$InputDimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1, 10}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{1}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"SoftSign\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739719745188765*^9, 3.7400642590135612`*^9, 
  3.7400643035546083`*^9, 3.7400644147695837`*^9, 3.740065892777432*^9, 
  3.740066149258387*^9, 3.7400662313392963`*^9},
 CellLabel->
  "Out[564]=",ExpressionUUID->"74e87f4f-120a-4ed1-9158-7cdf390bc808"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predictedTestResults", "=", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"trainedNetwork", ",", "testData"}], "]"}], 
   "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.739718661118753*^9, 3.739718674808096*^9}, {
  3.739718794704632*^9, 3.7397188112759132`*^9}, {3.739719021554905*^9, 
  3.739719046729044*^9}},
 CellLabel->
  "In[565]:=",ExpressionUUID->"9bd51622-af98-4dc1-aab0-e02a4ec7625e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.6678211688995361`", ",", "1.0771942138671875`", ",", 
   "1.3952302932739258`", ",", "1.3039470911026`", ",", "1.105483889579773`", 
   ",", "0.8302687406539917`", ",", "0.5897075533866882`", ",", 
   "0.7608689069747925`", ",", "0.3886852562427521`", ",", 
   "0.08074896782636642`"}], "}"}]], "Output",
 CellChangeTimes->{{3.739718797744746*^9, 3.739718811923533*^9}, 
   3.739719047243208*^9, {3.739719203420803*^9, 3.739719262701404*^9}, {
   3.739719295855566*^9, 3.7397194483523397`*^9}, {3.73971951008816*^9, 
   3.739719530000822*^9}, 3.739719656864594*^9, 3.7397196874308863`*^9, 
   3.7400643128310623`*^9, 3.7400644591005697`*^9, 3.740065897825577*^9, 
   3.74006614937077*^9, 3.740066231477704*^9},
 CellLabel->
  "Out[565]=",ExpressionUUID->"c5943701-74db-4c84-be3f-d77264e8acc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["testResults"], "Input",
 CellLabel->
  "In[566]:=",ExpressionUUID->"a6f7faa3-7c01-4f7f-8d24-2a2a6af06969"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.9`", ",", "1.68`", ",", "1.14`", ",", "1.36`", ",", "1.`", ",", "0.76`", 
   ",", "0.67`", ",", "0.41`", ",", "0.38`", ",", 
   RowBox[{"-", "0.06`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7400659279105253`*^9, 3.740066149458337*^9, 
  3.740066231579114*^9},
 CellLabel->
  "Out[566]=",ExpressionUUID->"eeec8e6b-860f-4d67-b971-d1fce282f37a"]
}, Open  ]],

Cell["StandardDeviation:", "Text",
 CellChangeTimes->{{3.73971914737335*^9, 
  3.7397191483610373`*^9}},ExpressionUUID->"cc9ef5d8-5cdd-4656-afcb-\
03ffddec9276"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "@", 
  RowBox[{"Mean", "[", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"predictedTestResults", "-", "testResults"}], ")"}], "2"], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739719079008553*^9, 3.739719122886141*^9}},
 CellLabel->
  "In[567]:=",ExpressionUUID->"a6db93d6-125c-42fb-b849-d8a4ceb56943"],

Cell[BoxData["0.2551611992380371`"], "Output",
 CellChangeTimes->{{3.7397191132329483`*^9, 3.7397191233883877`*^9}, {
   3.739719209250967*^9, 3.7397194484281473`*^9}, {3.739719510179358*^9, 
   3.739719530076449*^9}, {3.739719658445691*^9, 3.739719687490967*^9}, 
   3.7400643165294123`*^9, 3.740064461088966*^9, 3.740065945141264*^9, 
   3.740066149542377*^9, 3.7400662316819983`*^9},
 CellLabel->
  "Out[567]=",ExpressionUUID->"172effd1-f0d1-48ca-93ce-df7efc69b9dd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 703},
WindowMargins->{{8, Automatic}, {Automatic, 92}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 3, 98, "Title",ExpressionUUID->"9c5e09f5-1c7b-461c-820a-9253699e46a7"],
Cell[743, 27, 167, 3, 35, "Text",ExpressionUUID->"0f341ed5-2131-4027-9b25-95c6c0491b7b"],
Cell[CellGroupData[{
Cell[935, 34, 159, 3, 67, "Section",ExpressionUUID->"137e4450-80ac-4973-84c1-3e5b6727b299"],
Cell[1097, 39, 444, 10, 52, "Input",ExpressionUUID->"584cc3e2-fce4-4f36-8206-bb32fb0ae6ae"],
Cell[CellGroupData[{
Cell[1566, 53, 316, 7, 30, "Input",ExpressionUUID->"7a0c04c5-e3b7-4b85-a0e4-7935e4e41b56"],
Cell[1885, 62, 14928, 231, 1102, "Output",ExpressionUUID->"2f9eca49-643c-4e23-ae97-4fc5a3cb98bb"]
}, Closed]],
Cell[16828, 296, 212, 4, 26, "Input",ExpressionUUID->"191f22e2-8faa-4426-b226-4b23f7d78df7"],
Cell[CellGroupData[{
Cell[17065, 304, 305, 8, 30, "Input",ExpressionUUID->"6ce67530-5471-43fd-b362-787450a7d7e1"],
Cell[17373, 314, 11632, 179, 814, "Output",ExpressionUUID->"65f7f654-88b0-49f9-910c-22c20b868a7f"]
}, Closed]],
Cell[CellGroupData[{
Cell[29042, 498, 559, 17, 26, "Input",ExpressionUUID->"302c46d7-470c-4abd-8a8a-f92de09640e4"],
Cell[29604, 517, 11734, 188, 872, "Output",ExpressionUUID->"079d94b6-7738-42b2-a156-5b58c0efa1ab"]
}, Closed]],
Cell[CellGroupData[{
Cell[41375, 710, 386, 11, 26, "Input",ExpressionUUID->"a262d373-272a-42bd-b934-4278a079f2f4"],
Cell[41764, 723, 11068, 178, 814, "Output",ExpressionUUID->"81f7a495-0436-46b9-a4a1-31cc68a37804"]
}, Closed]],
Cell[CellGroupData[{
Cell[52869, 906, 219, 4, 26, "Input",ExpressionUUID->"c08daa73-0d9e-4646-8a4d-26943eb52037"],
Cell[53091, 912, 200, 5, 34, "Output",ExpressionUUID->"d0742784-43c7-411c-8dd3-017dfa845ee7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53328, 922, 463, 12, 30, "Input",ExpressionUUID->"8d409239-d9bd-49ec-8b6e-7c4db7eae491"],
Cell[53794, 936, 10672, 176, 872, "Output",ExpressionUUID->"872ab1e2-7779-4814-98e4-2b3b6db9ed7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64503, 1117, 376, 10, 30, "Input",ExpressionUUID->"ed03d09f-6b8c-4baf-bac6-0b7c6442cf4c"],
Cell[64882, 1129, 11115, 180, 834, "Output",ExpressionUUID->"21dd3ce3-7468-4ae8-94f2-5eee8ea77bcb"]
}, Closed]],
Cell[CellGroupData[{
Cell[76034, 1314, 289, 6, 26, "Input",ExpressionUUID->"6ab064c4-6d85-4a96-94ef-41929746f1fa"],
Cell[76326, 1322, 10965, 262, 796, "Output",ExpressionUUID->"58dd9b2f-91d3-4055-9eaa-0a020542acc7"]
}, Closed]],
Cell[CellGroupData[{
Cell[87328, 1589, 377, 10, 26, "Input",ExpressionUUID->"a2f6a113-e665-4773-80a5-0955f8e5876b"],
Cell[87708, 1601, 16145, 362, 48, "Output",ExpressionUUID->"8d93a0cd-ba9c-4c31-9004-79bfda35b0a0"]
}, Open  ]],
Cell[103868, 1966, 402, 11, 51, "Input",ExpressionUUID->"54578b1c-e167-4162-84c3-c8353adf9735"],
Cell[CellGroupData[{
Cell[104295, 1981, 549, 11, 30, "Input",ExpressionUUID->"1a8c5f00-4894-411b-b966-7aeafa8fecad"],
Cell[104847, 1994, 19307, 377, 1463, "Output",ExpressionUUID->"38d4499b-ea92-4571-973b-27ee205a996d"]
}, Closed]],
Cell[CellGroupData[{
Cell[124191, 2376, 300, 7, 26, "Input",ExpressionUUID->"38db5320-ab4f-499a-ad8d-01884ecfa5b4"],
Cell[124494, 2385, 18831, 369, 1442, "Output",ExpressionUUID->"b2d8f571-669f-4c50-84cf-bc374bff9b2d"]
}, Closed]],
Cell[CellGroupData[{
Cell[143362, 2759, 287, 7, 26, "Input",ExpressionUUID->"e7678b75-13d2-4322-a379-7e3feefb12cd"],
Cell[143652, 2768, 897, 17, 70, "Output",ExpressionUUID->"14239e47-d37d-43b8-8f9a-178f16caa55b"]
}, Closed]],
Cell[CellGroupData[{
Cell[144586, 2790, 249, 5, 26, "Input",ExpressionUUID->"fbac4085-2089-439c-b9bb-c7fecf1998d6"],
Cell[144838, 2797, 272, 6, 34, "Output",ExpressionUUID->"8445735c-550f-4d25-84c6-4b0ffefa5dd4"]
}, Open  ]],
Cell[145125, 2806, 267, 7, 30, "Input",ExpressionUUID->"b700d3ef-d43d-4812-bf58-65a22886bc20"],
Cell[CellGroupData[{
Cell[145417, 2817, 488, 10, 30, "Input",ExpressionUUID->"1126e967-6955-41b3-a04d-4502c7a483c0"],
Cell[145908, 2829, 679, 12, 34, "Output",ExpressionUUID->"7b2cbd5d-b41f-4992-a6b9-be9db78ab7b3"]
}, Open  ]],
Cell[146602, 2844, 473, 10, 30, "Input",ExpressionUUID->"8d024a86-019d-4d82-b454-f3aeb478f00b"],
Cell[147078, 2856, 448, 10, 30, "Input",ExpressionUUID->"c1e73aa3-f346-48b7-8d72-5c784a75a8c3"],
Cell[CellGroupData[{
Cell[147551, 2870, 326, 8, 30, "Input",ExpressionUUID->"0ba87923-dc0a-47f9-95e2-f04ca7ad6983"],
Cell[147880, 2880, 315, 7, 34, "Output",ExpressionUUID->"afe66902-00e9-4cb3-b56e-bc0132fa5965"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148232, 2892, 300, 7, 30, "Input",ExpressionUUID->"28698bde-d95d-4967-afcf-888fa1d50dec"],
Cell[148535, 2901, 4262, 87, 350, "Output",ExpressionUUID->"9341a76e-ed43-43d6-b295-4f3f1ce7e89e"]
}, Closed]],
Cell[CellGroupData[{
Cell[152834, 2993, 349, 8, 26, "Input",ExpressionUUID->"4c6d9c31-16f9-4e4e-8632-a179ad586af5"],
Cell[153186, 3003, 343, 8, 34, "Output",ExpressionUUID->"173b42de-e8ce-4451-bd2e-ebc72021099e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[153578, 3017, 202, 4, 67, "Section",ExpressionUUID->"14e09e19-63d0-40cd-933d-79f857c4a942"],
Cell[CellGroupData[{
Cell[153805, 3025, 466, 11, 30, "Input",ExpressionUUID->"2a018429-48b4-46e5-8a8a-491578d97d56"],
Cell[154274, 3038, 67600, 1222, 63, "Output",ExpressionUUID->"d92129fd-25b7-48f3-9933-7673a622bccc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221911, 4265, 435, 10, 30, "Input",ExpressionUUID->"5fe87bd2-9a7f-494a-a35e-e8bb0b7cdd1d"],
Cell[222349, 4277, 73283, 1292, 62, "Output",ExpressionUUID->"814e2698-c342-4e0f-8c72-ecb4d0610068"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295669, 5574, 280, 7, 30, "Input",ExpressionUUID->"20ea7c6f-2155-4774-9923-a5fc6ce8f2bb"],
Cell[295952, 5583, 2350, 54, 164, "Output",ExpressionUUID->"6b9f859f-cd95-40f2-9bbd-529cd16c00b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298339, 5642, 159, 3, 30, "Input",ExpressionUUID->"fe628341-3682-4101-ae6b-4e864fd06258"],
Cell[298501, 5647, 19186, 410, 378, "Output",ExpressionUUID->"2339f822-a37a-4023-a187-529ef6e53c4d"]
}, Open  ]],
Cell[317702, 6060, 239, 6, 35, "Text",ExpressionUUID->"797dc18e-26a2-4d52-8c12-9ba04665207e"],
Cell[CellGroupData[{
Cell[317966, 6070, 231, 4, 30, "Input",ExpressionUUID->"3c85e3e3-ae21-4e11-88a2-1fa37d2a0df5"],
Cell[318200, 6076, 4730, 104, 434, "Output",ExpressionUUID->"0388dcb2-3ad7-4e78-a826-1ebc3fe54f10"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[322979, 6186, 160, 3, 53, "Section",ExpressionUUID->"2d29dd3f-9e25-4fb7-ad84-d351e80d135f"],
Cell[CellGroupData[{
Cell[323164, 6193, 1182, 22, 199, "Input",ExpressionUUID->"5350096b-5ff6-4dfc-9f35-a109567ff2f2"],
Cell[324349, 6217, 26830, 553, 77, "Output",ExpressionUUID->"4e206f61-debe-40d5-9f81-d2f81028f16e"]
}, Closed]],
Cell[CellGroupData[{
Cell[351216, 6775, 827, 19, 48, "Input",ExpressionUUID->"c4f3861d-5c91-4c72-84c9-9b17d1ed6c19"],
Cell[352046, 6796, 25843, 527, 77, "Output",ExpressionUUID->"a4a61c7e-1ec4-4833-b433-5b8b91185236"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377926, 7328, 490, 11, 30, "Input",ExpressionUUID->"42863f70-54d0-4c7a-829e-c66bc147bacf"],
Cell[378419, 7341, 771, 14, 56, "Output",ExpressionUUID->"2ce2812b-2d32-4b24-8341-03663407f0ed"]
}, Open  ]],
Cell[379205, 7358, 161, 3, 35, "Text",ExpressionUUID->"ede7a238-225a-43f3-86de-058c39dd18bc"],
Cell[CellGroupData[{
Cell[379391, 7365, 341, 9, 33, "Input",ExpressionUUID->"ed0ba45e-298d-4c69-b190-80c3673aea5f"],
Cell[379735, 7376, 397, 6, 34, "Output",ExpressionUUID->"33b59ba2-f32f-4507-8f1f-efe903410865"]
}, Open  ]],
Cell[380147, 7385, 152, 3, 30, "Input",ExpressionUUID->"781112b5-900a-4470-9184-00d4c2e9b66b"]
}, Closed]],
Cell[CellGroupData[{
Cell[380336, 7393, 171, 3, 58, "Chapter",ExpressionUUID->"1a90b346-d4bc-457a-81e4-f79e7e6cea6b"],
Cell[CellGroupData[{
Cell[380532, 7400, 159, 3, 67, "Section",ExpressionUUID->"c6414235-55dc-4de5-92e0-8eb6926553f6"],
Cell[380694, 7405, 558, 12, 30, "Input",ExpressionUUID->"a87af709-2a1b-48c2-8975-4ffd05127aff"],
Cell[CellGroupData[{
Cell[381277, 7421, 220, 4, 30, "Input",ExpressionUUID->"ef127605-d0b2-4f57-98a6-751f3f86b2be"],
Cell[381500, 7427, 226, 5, 34, "Output",ExpressionUUID->"72fa1d09-ae46-4ac1-96ff-f3baa320bb65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[381763, 7437, 463, 11, 30, "Input",ExpressionUUID->"baf10b46-3cfa-4336-9c5a-8cc8504197e8"],
Cell[382229, 7450, 6516, 110, 796, "Output",ExpressionUUID->"d38ce108-84a2-4bb6-9c08-e4409d371d33"]
}, Closed]],
Cell[CellGroupData[{
Cell[388782, 7565, 367, 6, 26, "Input",ExpressionUUID->"fff08bc9-9c6c-4821-ac89-3efc3816095b"],
Cell[389152, 7573, 202, 5, 34, "Output",ExpressionUUID->"13bb0e35-f75e-44b6-9a81-ae176d295c35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389391, 7583, 304, 7, 30, "Input",ExpressionUUID->"a0b1707d-53cc-48bd-a963-d7215db07064"],
Cell[389698, 7592, 6341, 107, 780, "Output",ExpressionUUID->"a70d6ea9-79f3-4267-8f2c-5239bb0244f1"]
}, Closed]],
Cell[CellGroupData[{
Cell[396076, 7704, 367, 6, 26, "Input",ExpressionUUID->"e1b72221-16ef-454b-b552-d4129393d8cb"],
Cell[396446, 7712, 253, 6, 34, "Output",ExpressionUUID->"5a2be02d-7132-4195-8d36-09b0b5d1c563"]
}, Open  ]],
Cell[396714, 7721, 267, 7, 30, "Input",ExpressionUUID->"db176245-014e-4662-a88b-2228bb52c664"],
Cell[CellGroupData[{
Cell[397006, 7732, 488, 10, 30, "Input",ExpressionUUID->"6addbb7f-0ac4-4489-b1dd-d09d8dc53397"],
Cell[397497, 7744, 679, 12, 34, "Output",ExpressionUUID->"1a1ead15-0716-4770-8e84-182431551d3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398213, 7761, 395, 10, 30, "Input",ExpressionUUID->"0d5878b1-20f0-4670-86a2-9b5587cac2ab"],
Cell[398611, 7773, 28327, 504, 1421, "Output",ExpressionUUID->"0156893c-d68a-44aa-a303-11eb00883986"]
}, Closed]],
Cell[426953, 8280, 497, 11, 26, "Input",ExpressionUUID->"9f997e3d-9365-4680-989c-e58078b9e516"],
Cell[427453, 8293, 448, 10, 30, "Input",ExpressionUUID->"cbbed523-7a6e-4b0a-a199-1f3ec7c34c0f"],
Cell[CellGroupData[{
Cell[427926, 8307, 326, 8, 30, "Input",ExpressionUUID->"87b1df61-12e7-41c9-beee-7f470b96a106"],
Cell[428255, 8317, 340, 8, 68, "Output",ExpressionUUID->"774a5ada-c312-41f2-9146-9a161e72ee9d"]
}, Closed]],
Cell[CellGroupData[{
Cell[428632, 8330, 324, 8, 26, "Input",ExpressionUUID->"51d0001c-11b1-4a2b-985d-ec3e5a2a9005"],
Cell[428959, 8340, 4959, 79, 184, "Output",ExpressionUUID->"99d2871d-d817-4aec-96ed-26d5ff9ba6f9"]
}, Closed]],
Cell[CellGroupData[{
Cell[433955, 8424, 349, 8, 26, "Input",ExpressionUUID->"dd1345cc-bab4-4e27-bc8f-9f071b474bfa"],
Cell[434307, 8434, 365, 8, 68, "Output",ExpressionUUID->"09bee878-fba3-4287-a4a9-8f6e28d235ae"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[434721, 8448, 202, 4, 67, "Section",ExpressionUUID->"d790d9b8-9734-4813-9a0f-99084aecbfad"],
Cell[CellGroupData[{
Cell[434948, 8456, 466, 11, 30, "Input",ExpressionUUID->"77e62de3-71ee-484e-903b-edb34917901a"],
Cell[435417, 8469, 78072, 1380, 63, "Output",ExpressionUUID->"73d07fc6-d834-43af-97cd-e1ca99eadfb7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513526, 9854, 435, 10, 30, "Input",ExpressionUUID->"54f0e8da-e5db-4541-9afa-aca12138535f"],
Cell[513964, 9866, 84295, 1463, 62, "Output",ExpressionUUID->"d91769b5-2d7f-4207-939e-e25791795fa2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[598296, 11334, 280, 7, 30, "Input",ExpressionUUID->"0850e2f9-a922-4bca-b317-790dffdcf448"],
Cell[598579, 11343, 2377, 55, 164, "Output",ExpressionUUID->"c7594541-ad3c-4863-8db6-bae06b8c3f12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600993, 11403, 159, 3, 30, "Input",ExpressionUUID->"8dc251d4-4728-43fb-8ba9-4ad3fe26e89a"],
Cell[601155, 11408, 19197, 410, 378, "Output",ExpressionUUID->"cace6063-f8af-4a07-86b5-25ea265fb71c"]
}, Open  ]],
Cell[620367, 11821, 239, 6, 35, "Text",ExpressionUUID->"ecae04fe-dc2a-4010-85fe-de6df04c4b93"],
Cell[CellGroupData[{
Cell[620631, 11831, 231, 4, 30, "Input",ExpressionUUID->"c9eb6774-ec78-46aa-b845-0f0d08727bd1"],
Cell[620865, 11837, 7014, 130, 184, "Output",ExpressionUUID->"bbbc929b-7846-45ec-b816-284c217bb00a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[627928, 11973, 160, 3, 67, "Section",ExpressionUUID->"dd65a08d-358b-4360-8451-aa19d4e2ca0b"],
Cell[CellGroupData[{
Cell[628113, 11980, 1327, 24, 199, "Input",ExpressionUUID->"fdf99ed2-510f-4479-b2db-235cbc5be045"],
Cell[629443, 12006, 26906, 554, 77, "Output",ExpressionUUID->"87876136-3692-49ea-9c8f-3e844b94fabd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[656386, 12565, 827, 19, 52, "Input",ExpressionUUID->"0b6ccd46-3569-4dca-a9eb-698b0c7aec60"],
Cell[657216, 12586, 25916, 528, 77, "Output",ExpressionUUID->"74e87f4f-120a-4ed1-9158-7cdf390bc808"]
}, Open  ]],
Cell[CellGroupData[{
Cell[683169, 13119, 490, 11, 30, "Input",ExpressionUUID->"9bd51622-af98-4dc1-aab0-e02a4ec7625e"],
Cell[683662, 13132, 838, 15, 34, "Output",ExpressionUUID->"c5943701-74db-4c84-be3f-d77264e8acc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[684537, 13152, 120, 2, 30, "Input",ExpressionUUID->"a6f7faa3-7c01-4f7f-8d24-2a2a6af06969"],
Cell[684660, 13156, 390, 9, 34, "Output",ExpressionUUID->"eeec8e6b-860f-4d67-b971-d1fce282f37a"]
}, Open  ]],
Cell[685065, 13168, 161, 3, 35, "Text",ExpressionUUID->"cc9ef5d8-5cdd-4656-afcb-03ffddec9276"],
Cell[CellGroupData[{
Cell[685251, 13175, 341, 9, 33, "Input",ExpressionUUID->"a6db93d6-125c-42fb-b849-d8a4ceb56943"],
Cell[685595, 13186, 469, 7, 34, "Output",ExpressionUUID->"172effd1-f0d1-48ca-93ce-df7efc69b9dd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

